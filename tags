!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
#	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> # :if !<sid>SearchNext("b")<bar>execute "norm! #"<bar>endif<cr>$/;"	m
%	bundle/matchit/plugin/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	bundle/matchit/plugin/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	bundle/matchit/plugin/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
*	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> * :if !<sid>SearchNext()<bar>execute "norm! *"<bar>endif<cr>$/;"	m
-	bundle/vim-vinegar/plugin/vinegar.vim	/^  nmap - <Plug>VinegarUp$/;"	m
<	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^ino <buffer> <silent> < <><left>$/;"	m
<C-G>S	bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-R>	bundle/jslint/ftplugin/javascript/jslint.vim	/^noremap <buffer><silent> <C-R> <C-R>:JSLintUpdate<CR>$/;"	m
<C-S>	bundle/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-X><CR>	bundle/vim-endwise/plugin/endwise.vim	/^    imap <script> <C-X><CR> <CR><SID>AlwaysEnd$/;"	m
<CR>	bundle/vim-endwise/plugin/endwise.vim	/^    imap <CR> <CR><Plug>DiscretionaryEnd$/;"	m
<Leader>a	bundle/autoclose/plugin/autoclose.vim	/^    nmap <unique> <Leader>a <Plug>ToggleAutoCloseMappings$/;"	m
<Leader>hp	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hr	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hr <Plug>GitGutterRevertHunk$/;"	m
<Leader>hs	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<LocalLeader>cd	bundle/vimtodo/ftplugin/todo.vim	/^    map <buffer> <unique> <LocalLeader>cd :Today<CR>$/;"	m
<LocalLeader>cf	bundle/vimtodo/ftplugin/todo.vim	/^    map <buffer> <unique> <LocalLeader>cf :Tomorrow<CR>$/;"	m
<LocalLeader>cw	bundle/vimtodo/ftplugin/todo.vim	/^    map <buffer> <unique> <LocalLeader>cw :Week<CR>$/;"	m
<LocalLeader>cx	bundle/vimtodo/ftplugin/todo.vim	/^    map <buffer> <unique> <LocalLeader>cx :Overdue<CR>$/;"	m
<Plug>(go-build)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build('')<CR>$/;"	m
<Plug>(go-coverage)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#cmd#Coverage('')<CR>$/;"	m
<Plug>(go-def)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump()<CR>$/;"	m
<Plug>(go-def-split)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#JumpMode("split")<CR>$/;"	m
<Plug>(go-def-tab)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#JumpMode("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#JumpMode("vsplit")<CR>$/;"	m
<Plug>(go-deps)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-doc)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("leftabove new")<CR>$/;"	m
<Plug>(go-doc-browser)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("split")<CR>$/;"	m
<Plug>(go-doc-tab)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew")<CR>$/;"	m
<Plug>(go-doc-vertical)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew")<CR>$/;"	m
<Plug>(go-files)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-implements)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#oracle#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'))<CR>$/;"	m
<Plug>(go-info)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#complete#Info()<CR>$/;"	m
<Plug>(go-install)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install()<CR>$/;"	m
<Plug>(go-rename)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename()<CR>$/;"	m
<Plug>(go-run)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(expand('%'))<CR>$/;"	m
<Plug>(go-test)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#cmd#Test('')<CR>$/;"	m
<Plug>(go-vet)	bundle/vim-go/ftplugin/go/commands.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#cmd#Vet()<CR>$/;"	m
<Plug>(neosnippet_expand)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand_or_jump)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_jump)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump_or_expand)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_start_unite_snippet)	bundle/neosnippet/plugin/neosnippet.vim	/^inoremap <expr><silent> <Plug>(neosnippet_start_unite_snippet)$/;"	m
<Plug>AlwaysEnd	bundle/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>AlwaysEnd        <SID>AlwaysEnd$/;"	m
<Plug>Csurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>DiscretionaryEnd	bundle/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>DiscretionaryEnd <SID>DiscretionaryEnd$/;"	m
<Plug>Dsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterRevertHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterRevertHunk  :GitGutterRevertHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>ISurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>MarkClear	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkClear :call$/;"	m
<Plug>MarkRegex	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkRegex :call$/;"	m
<Plug>MarkRegex	bundle/Mark/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkRegex <c-\\><c-n>:call$/;"	m
<Plug>MarkSet	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSet   :call$/;"	m
<Plug>MarkSet	bundle/Mark/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkSet   <c-\\><c-n>:call$/;"	m
<Plug>SurroundRepeat	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>TComment_<Leader>_<space>	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_<space> :TComment $/;"	m
<Plug>TComment_<Leader>__	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>__ :TComment<cr>$/;"	m
<Plug>TComment_<Leader>_a	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_a :TCommentAs $/;"	m
<Plug>TComment_<Leader>_b	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_b :TCommentBlock<cr>$/;"	m
<Plug>TComment_<Leader>_n	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_n :TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<Leader>_p	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_p vip:TComment<cr>$/;"	m
<Plug>TComment_<Leader>_r	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_r :TCommentRight<cr>$/;"	m
<Plug>TComment_<Leader>_s	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_s :TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_<c-_><c-_>	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_><c-_> <c-o>:TComment<cr>$/;"	m
<Plug>TComment_<c-_><c-_>	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_><c-_> :TComment<cr>$/;"	m
<Plug>TComment_<c-_><c-_>	bundle/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_<c-_><c-_> :TCommentMaybeInline<cr>$/;"	m
<Plug>TComment_<c-_><space>	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_><space> <c-o>:TComment $/;"	m
<Plug>TComment_<c-_><space>	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_><space> :TComment $/;"	m
<Plug>TComment_<c-_>a	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>a <c-o>:TCommentAs $/;"	m
<Plug>TComment_<c-_>a	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>a :TCommentAs $/;"	m
<Plug>TComment_<c-_>b	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>b <c-\\><c-o>:TCommentBlock mode=#<cr>$/;"	m
<Plug>TComment_<c-_>b	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>b :TCommentBlock<cr>$/;"	m
<Plug>TComment_<c-_>ca	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>ca :<c-u>call tcomment#SetOption("as", input("Comment as: ", &filetype, "customlist,tcomment#Complete"))<cr>$/;"	m
<Plug>TComment_<c-_>cc	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>cc :<c-u>call tcomment#SetOption("count", v:count1)<cr>$/;"	m
<Plug>TComment_<c-_>i	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>i <c-\\><c-o>v:TCommentInline mode=#<cr>$/;"	m
<Plug>TComment_<c-_>i	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>i v:TCommentInline mode=I#<cr>$/;"	m
<Plug>TComment_<c-_>i	bundle/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_<c-_>i :TCommentInline<cr>$/;"	m
<Plug>TComment_<c-_>n	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>n <c-o>:TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<c-_>n	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>n :TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<c-_>p	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>p <c-o>:norm! m`vip<cr>:TComment<cr><c-o>``$/;"	m
<Plug>TComment_<c-_>p	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>p m`vip:TComment<cr>``$/;"	m
<Plug>TComment_<c-_>r	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>r <c-o>:TCommentRight<cr>$/;"	m
<Plug>TComment_<c-_>r	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>r :TCommentRight<cr>$/;"	m
<Plug>TComment_<c-_>s	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>s <c-o>:TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_<c-_>s	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>s :TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_ic	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_ic :<c-U>call tcomment#TextObjectInlineComment()<cr>$/;"	m
<Plug>TComment_ic	bundle/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_ic :<c-U>call tcomment#TextObjectInlineComment()<cr>$/;"	m
<Plug>ToggleAutoCloseMappings	bundle/autoclose/plugin/autoclose.vim	/^nmap <Plug>ToggleAutoCloseMappings :call <SID>ToggleAutoCloseMappings()<CR>$/;"	m
<Plug>ToggleBackground	bundle/colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	bundle/colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	bundle/colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>VSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>VinegarSplitUp	bundle/vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarSplitUp :call <SID>opendir('split')<CR>$/;"	m
<Plug>VinegarTabUp	bundle/vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarTabUp :call <SID>opendir('tabedit')<CR>$/;"	m
<Plug>VinegarUp	bundle/vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarUp :call <SID>opendir('edit')<CR>$/;"	m
<Plug>VinegarVerticalSplitUp	bundle/vim-vinegar/plugin/vinegar.vim	/^nnoremap <silent> <Plug>VinegarVerticalSplitUp :call <SID>opendir('vsplit')<CR>$/;"	m
<Plug>YSsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Plug>snipMateBack	bundle/vim-snipmate/plugin/snipMate.vim	/^inoremap <silent> <Plug>snipMateBack           <C-R>=snipMate#BackwardsSnippet()<CR>$/;"	m
<Plug>snipMateNextOrTrigger	bundle/vim-snipmate/plugin/snipMate.vim	/^inoremap <silent> <Plug>snipMateNextOrTrigger  <C-R>=snipMate#TriggerSnippet()<CR>$/;"	m
<Plug>snipMateShow	bundle/vim-snipmate/plugin/snipMate.vim	/^inoremap <silent> <Plug>snipMateShow           <C-R>=snipMate#ShowAvailableSnips()<CR>$/;"	m
<Plug>snipMateTrigger	bundle/vim-snipmate/plugin/snipMate.vim	/^inoremap <silent> <Plug>snipMateTrigger        <C-R>=snipMate#TriggerSnippet(1)<CR>$/;"	m
<SID>AlwaysEnd	bundle/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>AlwaysEnd        <C-R>=<SID>crend(1)<CR>$/;"	m
<SID>DiscretionaryEnd	bundle/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>DiscretionaryEnd <C-R>=<SID>crend(0)<CR>$/;"	m
<SID>TogBG	bundle/colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<SID>xx	bundle/taglist/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<cr>	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^ino <buffer> <expr> <cr> <SID>Return()$/;"	m
<cr>	bundle/vim-snipmate/ftplugin/snippet.vim	/^vnoremap <buffer> <cr> :RetabSnip<cr>$/;"	m
<leader>#	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> <leader># :call <sid>SearchCurrentMark("b")<cr>$/;"	m
<leader>*	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> <leader>* :call <sid>SearchCurrentMark()<cr>$/;"	m
<leader>/	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> <leader>\/ :call <sid>SearchAnyMark()<cr>$/;"	m
<leader>?	bundle/Mark/plugin/mark.vim	/^nnoremap <silent> <leader>? :call <sid>SearchAnyMark("b")<cr>$/;"	m
<leader>m	bundle/Mark/plugin/mark.vim	/^	nmap <unique> <silent> <leader>m <Plug>MarkSet$/;"	m
<leader>m	bundle/Mark/plugin/mark.vim	/^	vmap <unique> <silent> <leader>m <Plug>MarkSet$/;"	m
<leader>n	bundle/Mark/plugin/mark.vim	/^	nmap <unique> <silent> <leader>n <Plug>MarkClear$/;"	m
<leader>r	bundle/Mark/plugin/mark.vim	/^	nmap <unique> <silent> <leader>r <Plug>MarkRegex$/;"	m
<leader>r	bundle/Mark/plugin/mark.vim	/^	vmap <unique> <silent> <leader>r <Plug>MarkRegex$/;"	m
>	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^ino <buffer> <silent> > <c-r>=<SID>CloseTag()<cr>$/;"	m
ActivateJSLintQuickFixWindow	bundle/jslint/ftplugin/javascript/jslint.vim	/^    function s:ActivateJSLintQuickFixWindow()$/;"	f
Add	bundle/tlib_vim/spec/tlib/list.vim	/^fun! Add(a,b)$/;"	f
Add	bundle/tlib_vim/test/tlib.vim	/^fun! Add(a,b)$/;"	f
Add	bundle/vim-snipmate/autoload/snipMate_python_demo.vim	/^fun! s:Add(dict, line, source, trigger)$/;"	f
AddModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:AddModeExtra(comment_mode, extra, beg, end) "{{{3$/;"	f
AddScopeAliases	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! s:AddScopeAliases(list)$/;"	f
AddScopedTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AddToClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path)$/;"	f
AirlineRefresh	bundle/vim-airline/plugin/airline.vim	/^command! AirlineRefresh call airline#load_theme() | call airline#update_statusline()$/;"	c
AirlineTheme	bundle/vim-airline/plugin/airline.vim	/^command! -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggle	bundle/vim-airline/plugin/airline.vim	/^command! AirlineToggle call <sid>airline_toggle()$/;"	c
AirlineToggleWhitespace	bundle/vim-airline/plugin/airline.vim	/^command! AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AltFiletype	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:AltFiletype(filetype) "{{{3$/;"	f
AnyMark	bundle/Mark/plugin/mark.vim	/^function! s:AnyMark()$/;"	f
ArchiveDone	bundle/vimtodo/ftplugin/todo.vim	/^function! s:ArchiveDone()$/;"	f
ArchiveTask	bundle/vimtodo/ftplugin/todo.vim	/^function! s:ArchiveTask(startline, endline)$/;"	f
Args	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args()$/;"	f
Asyncer	bundle/Vim-L9/autoload/l9/async.py	/^class Asyncer:$/;"	c
AutoUpdate	bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force) abort$/;"	f
BMRU_Push	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! s:BMRU_Push(bnr) "{{{3$/;"	f
BaseTag.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag._getPrefix	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
BaseTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getClosedParentTline	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.setFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
BitwiseComparison	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! s:BitwiseComparison(num1, num2, rtype, expr) "{{{3$/;"	f
Blame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlockGetCommentRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetCommentRx(cdef)$/;"	f
BlockGetCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cdef)$/;"	f
BlockGetMiddleString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cdef)$/;"	f
Bookmark.AddBookmark	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook() " {{{2$/;"	f
BufReadIndex	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufReadPostHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook() " {{{2$/;"	f
BufWriteIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BufWritePostHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook() " {{{2$/;"	f
BuildItem	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:BuildItem(menu, def) "{{{3$/;"	f
BuildMenu	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:BuildMenu(world) "{{{3$/;"	f
BuildTabStops	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! s:BuildTabStops(snip, lnum, col, indent)$/;"	f
CacheErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(checker_names) " {{{2$/;"	f
CachedSnips	bundle/vim-snipmate/autoload/snipMate.vim	/^function! s:CachedSnips(file)$/;"	f
CheckAgentReturnValue	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:CheckAgentReturnValue(name, value) "{{{3$/;"	f
CheckBinaries	bundle/vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
CheckExCtagsVersion	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckMouseClick	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
CheckboxToggle	bundle/vimtodo/ftplugin/todo.vim	/^function! s:CheckboxToggle()$/;"	f
Choose	bundle/matchit/plugin/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ChooseSnippet	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! s:ChooseSnippet(snippets)$/;"	f
ClassSep	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep()$/;"	f
CleanUp	bundle/matchit/plugin/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
ClearCache	bundle/syntastic/plugin/syntastic.vim	/^function! s:ClearCache() " {{{2$/;"	f
Close	bundle/vim-snipmate/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseStackPop	bundle/autoclose/plugin/autoclose.vim	/^function <SID>CloseStackPop(char) " ---{{{2$/;"	f
CloseStackPush	bundle/autoclose/plugin/autoclose.vim	/^function <SID>CloseStackPush(char) " ---{{{2$/;"	f
CloseTag	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^fun s:CloseTag()$/;"	f
CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
ClosingTag	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^fun s:ClosingTag(tag)$/;"	f
CommentBlock	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, cbeg, cend, comment_mode, uncomment, checkRx, cdef)$/;"	f
CommentDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, comment_mode, cbeg, cend)$/;"	f
Commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompareBufferNrByMRU	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! s:CompareBufferNrByMRU(a, b) "{{{3$/;"	f
CompareBuffernameByBasename	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! s:CompareBuffernameByBasename(a, b) "{{{3$/;"	f
CompareByKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
CompareHash	bundle/tlib_vim/spec/tlib/hash.vim	/^function! s:CompareHash(text) "{{{3$/;"	f
CompareRank	bundle/neocomplete/vest/test-neocomplete.vim	/^    function! CompareRank(i1, i2)$/;"	f
CompilerSet	bundle/vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteCheckerName	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) " {{{2$/;"	f
CompleteFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) " {{{2$/;"	f
ConstructFromCommentsOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ConstructFromCommentsOption(comment_mode)$/;"	f
Copen	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -bar Copen call dispatch#copen(<bang>0)$/;"	c
CorrectFocusOnStartup	bundle/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
Count	bundle/matchit/plugin/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
Count	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! s:Count(haystack, needle)$/;"	f
CountHelper	bundle/tlib_vim/autoload/tlib/string.vim	/^function! s:CountHelper() "{{{3$/;"	f
CountInPage	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^fun s:CountInPage(needle)$/;"	f
CreateAutocommands	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreatePseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo) abort$/;"	f
Creator.BufNamePrefix	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createTreeWin	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator.createMirror	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CtagsErrMsg	bundle/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
CurrentMark	bundle/Mark/plugin/mark.vim	/^function! s:CurrentMark()$/;"	f
CygwinPath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:CygwinPath(path)$/;"	f
DefaultValue	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DetectFiletype	bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
Diff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,...) abort$/;"	f
DirComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Dispatch	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -range=0 -complete=customlist,dispatch#command_complete Dispatch$/;"	c
Dispatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
DispatchComplete	bundle/vim-dispatch/plugin/dispatch.vim	/^function! DispatchComplete(id) abort$/;"	f
DoMark	bundle/Mark/plugin/mark.vim	/^function! s:DoMark(...) " DoMark(regexp)$/;"	f
DoReplacements	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:DoReplacements(text, tokens, replacements) "{{{3$/;"	f
E2T	bundle/Zhoeon_colors/colors/vividchalk.vim	/^function! E2T(a)$/;"	f
Edit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditCallback	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:EditCallback(...) "{{{3$/;"	f
EditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath()$/;"	f
EditComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig()$/;"	f
EditRunComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EncodeCommentPart	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndColRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndColRx(comment_mode, lnum, pos)$/;"	f
EndLineRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndLineRx(pos)$/;"	f
EndPosRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndPosRx(comment_mode, lnum, col)$/;"	f
Error	bundle/vim-go/autoload/go/import.vim	/^function! s:Error(s)$/;"	f
Errors	bundle/syntastic/plugin/syntastic.vim	/^command! Errors call s:ShowLocList()$/;"	c
EscapeCtagsCmd	bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
ExecuteCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
ExecuteInTree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
Executor	bundle/Vim-L9/autoload/l9/async.py	/^class Executor:$/;"	c
ExtendCDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ExtendCDef(beg, end, comment_mode, cdef, args)$/;"	f
ExtendKeyMap	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:ExtendKeyMap(world, key_mode, key_handlers) "{{{3$/;"	f
ExtractCommentsPart	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ExtractCommentsPart()$/;"	f
FileInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype, typeinfo) abort dict$/;"	f
FileInfo.clearOldFolds	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.openKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.reset	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
FileRead	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
Filename	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
Filetype	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:Filetype(...) "{{{3$/;"	f
Filter	bundle/vimtodo/ftplugin/todo.vim	/^command -buffer -nargs=+ Filter :call s:TaskSearch([], <q-args>)$/;"	c
FindDrawer	bundle/vimtodo/ftplugin/todo.vim	/^function! s:FindDrawer(name, line)$/;"	f
FindOrMakeDrawer	bundle/vimtodo/ftplugin/todo.vim	/^function! s:FindOrMakeDrawer(name, line)$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
FinishCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FocusDispatch	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=customlist,dispatch#command_complete FocusDispatch$/;"	c
FormatHelp	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:FormatHelp(help) "{{{3$/;"	f
FormatHelpItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:FormatHelpItem(item, fmt) "{{{3$/;"	f
ForwardToZshChecker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker()$/;"	f
FufGlobal	bundle/fuzzyfinder/autoload/fuf.vim	/^augroup FufGlobal$/;"	a
GF	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GetBinPath	bundle/vim-go/plugin/go.vim	/^function! GetBinPath()$/;"	f
GetCmd	bundle/tlib_vim/autoload/tlib/vcs.vim	/^function! s:GetCmd(vcstype, cmd)$/;"	f
GetCommentDefinition	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentDefinition(beg, end, comment_mode, ...)$/;"	f
GetCommentDefinitionForType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentDefinitionForType(beg, end, comment_mode, filetype) "{{{3$/;"	f
GetCommentReplace	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentReplace(cdef, cms0)$/;"	f
GetCurrentTag	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^fun s:GetCurrentTag()$/;"	f
GetCurrentTask	bundle/vimtodo/ftplugin/todo.vim	/^function! s:GetCurrentTask(line)$/;"	f
GetDialect	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect()$/;"	f
GetDoneStates	bundle/vimtodo/ftplugin/todo.vim	/^function! s:GetDoneStates()$/;"	f
GetFileWinnr	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetJSLintMessage	bundle/jslint/ftplugin/javascript/jslint.vim	/^    function s:GetJSLintMessage()$/;"	f
GetMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg()$/;"	f
GetMavenClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath()$/;"	f
GetMavenProperties	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties()$/;"	f
GetModdedChar	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:GetModdedChar(world) "{{{3$/;"	f
GetNearbyTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetNextProperty	bundle/vimtodo/ftplugin/todo.vim	/^function! s:GetNextProperty(drawerline, propertyline)$/;"	f
GetNthElement	bundle/tlib_vim/autoload/tlib/list.vim	/^function! s:GetNthElement(n, lists, default) "{{{3$/;"	f
GetOcamlBuildMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg()$/;"	f
GetOcamlcMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg()$/;"	f
GetOtherMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg()$/;"	f
GetProfile	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile()$/;"	f
GetProperty	bundle/vimtodo/ftplugin/todo.vim	/^function! s:GetProperty(drawerline, property)$/;"	f
GetQuickFixStackCount	bundle/jslint/ftplugin/javascript/jslint.vim	/^    function s:GetQuickFixStackCount()$/;"	f
GetScopes	bundle/vim-snipmate/autoload/snipMate.vim	/^function! s:GetScopes()$/;"	f
GetShell	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell()$/;"	f
GetStartEnd	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetStartEnd(beg, end, comment_mode) "{{{3$/;"	f
GetState	bundle/vimtodo/ftplugin/todo.vim	/^function! s:GetState(line)$/;"	f
GetSupportedFiletypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetSyntaxName	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetSyntaxName(lnum, col) "{{{3$/;"	f
GetTagInfo	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetTempOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetTempOption(name, default) "{{{3$/;"	f
GetValaModules	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules()$/;"	f
GetValaVapiDirs	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaVapiDirs()$/;"	f
GetVisualSelection	bundle/Mark/plugin/mark.vim	/^function! s:GetVisualSelection()$/;"	f
GetVisualSelectionEscaped	bundle/Mark/plugin/mark.vim	/^function! s:GetVisualSelectionEscaped(flags)$/;"	f
Git	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GitGutter	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutter    call gitgutter#process_buffer(gitgutter#utility#current_file(), 0)$/;"	c
GitGutterAll	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterAll call gitgutter#all()$/;"	c
GitGutterDebug	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsDisable call gitgutter#line_highlights_disable()$/;"	c
GitGutterLineHighlightsEnable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsEnable  call gitgutter#line_highlights_enable()$/;"	c
GitGutterLineHighlightsToggle	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsToggle  call gitgutter#line_highlights_toggle()$/;"	c
GitGutterNextHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterPreviewHunk call gitgutter#preview_hunk()$/;"	c
GitGutterRevertHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterRevertHunk  call gitgutter#revert_hunk()$/;"	c
GitGutterSignsDisable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsDisable call gitgutter#signs_disable()$/;"	c
GitGutterSignsEnable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsEnable  call gitgutter#signs_enable()$/;"	c
GitGutterSignsToggle	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsToggle  call gitgutter#signs_toggle()$/;"	c
GitGutterStageHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterStageHunk   call gitgutter#stage_hunk()$/;"	c
GitGutterToggle	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterToggle  call gitgutter#toggle()$/;"	c
Glob	bundle/vim-snipmate/autoload/snipMate.vim	/^	function! s:Glob(path, expr)$/;"	f
GoBuild	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -bang GoBuild call go#cmd#Build(<bang>0)$/;"	c
GoCoverage	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoCoverage call go#cmd#Coverage(<f-args>)$/;"	c
GoDef	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump(<f-args>)$/;"	c
GoDeps	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDoc	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('leftabove new', <f-args>)$/;"	c
GoDocBrowser	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
GoDrop	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0, '', <f-args>)$/;"	c
GoErrCheck	bundle/vim-go/ftplugin/go/commands.vim	/^command! GoErrCheck call go#errcheck#Run()$/;"	c
GoErrCheck	bundle/vim-go/plugin/go.vim	/^command! GoErrCheck call go#errcheck#Run()$/;"	c
GoFiles	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFiles echo go#tool#Files()$/;"	c
GoFmt	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoImplements	bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#oracle#Implements(<count>)$/;"	c
GoImport	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -complete=customlist,go#package#Complete GoImport call go#import#SwitchImport(1, '', <f-args>)$/;"	c
GoImportAs	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoImportAs call go#import#SwitchImport(1, <f-args>)$/;"	c
GoImports	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	bundle/vim-go/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoInfo	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInfo call go#complete#Info()$/;"	c
GoInstall	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInstall call go#cmd#Install(<f-args>)$/;"	c
GoInstallBinaries	bundle/vim-go/plugin/go.vim	/^command! GoInstallBinaries call s:GoInstallBinaries(-1)$/;"	c
GoInstallBinaries	bundle/vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries) $/;"	f
GoLint	bundle/vim-go/ftplugin/go/commands.vim	/^command! GoLint call go#lint#Run()$/;"	c
GoNeosnippet	bundle/vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet()$/;"	f
GoPlay	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoRename	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoRename call go#rename#Rename(<f-args>)$/;"	c
GoRun	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoTest	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoTest call go#cmd#Test(<f-args>)$/;"	c
GoUltiSnips	bundle/vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips()$/;"	f
GoUpdateBinaries	bundle/vim-go/plugin/go.vim	/^command! GoUpdateBinaries call s:GoInstallBinaries(1)$/;"	c
GoVet	bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoVet call go#cmd#Vet()$/;"	c
GodocView	bundle/vim-go/autoload/go/doc.vim	/^function! s:GodocView(position, content)$/;"	f
GotoFileWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextToplevelTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
Grep	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GuessCommentMode	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessCommentMode(comment_mode, supported_comment_modes) "{{{3$/;"	f
GuessCustomCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessCustomCommentString(ft, comment_mode, ...)$/;"	f
GuessFileType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, comment_mode, filetype, ...)$/;"	f
GuessVimOptionsCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessVimOptionsCommentString(comment_mode)$/;"	f
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiLink	bundle/vim-json/syntax/json.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/vim-json/syntax/json.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	syntax/godoc.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HighlightDone	bundle/vimtodo/syntax/todo.vim	/^function! s:HighlightDone()$/;"	f
HighlightStatus	bundle/vimtodo/syntax/todo.vim	/^function! s:HighlightStatus(name, color)$/;"	f
HighlightTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text)$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text)$/;"	f
InComment	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^fun s:InComment()$/;"	f
Init	bundle/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
Init	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:Init(world, cmd) "{{{3$/;"	f
InitMarkVariables	bundle/Mark/plugin/mark.vim	/^function! s:InitMarkVariables()$/;"	f
InitTypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
InlineReplacement	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:InlineReplacement(text, rx, tokens, replacements) "{{{3$/;"	f
InsertCheckbox	bundle/vimtodo/ftplugin/todo.vim	/^function! s:InsertCheckbox()$/;"	f
InsertRefs	bundle/matchit/plugin/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
InsertSelectedItems	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:InsertSelectedItems(rv, current) "{{{3$/;"	f
Intersection	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^fun! s:Intersection(a, b)$/;"	f
IsDoneState	bundle/vimtodo/ftplugin/todo.vim	/^function! s:IsDoneState(state)$/;"	f
IsShellValid	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid()$/;"	f
IsValidFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
JSLint	bundle/jslint/ftplugin/javascript/jslint.vim	/^function! s:JSLint()$/;"	f
JSLintClear	bundle/jslint/ftplugin/javascript/jslint.vim	/^function! s:JSLintClear()$/;"	f
JSLintUpdate	bundle/jslint/ftplugin/javascript/jslint.vim	/^    command JSLintUpdate :call s:JSLintUpdate()$/;"	c
JSLintUpdate	bundle/jslint/ftplugin/javascript/jslint.vim	/^    function s:JSLintUpdate()$/;"	f
JumpInit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpOut	bundle/autoclose/plugin/autoclose.vim	/^function <SID>JumpOut(char) " ----------{{{2$/;"	f
JumpToTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
K	bundle/vim-go/ftplugin/go.vim	/^    nnoremap <buffer> <silent> K :GoDoc<cr> $/;"	m
KeyMap.Add	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KindheaderTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
L9Assert	bundle/Vim-L9/plugin/l9.vim	/^  command -nargs=* L9Assert :$/;"	c
L9Assert	bundle/Vim-L9/plugin/l9.vim	/^  command -nargs=* L9Assert call eval((<args>) ? 0 : s:handleFailedAssersion(<q-args>))$/;"	c
L9GrepBuffer	bundle/Vim-L9/plugin/l9.vim	/^command -nargs=? L9GrepBuffer    call l9#grepBuffers(<q-args>, [bufnr('%')])$/;"	c
L9GrepBufferAll	bundle/Vim-L9/plugin/l9.vim	/^command -nargs=? L9GrepBufferAll call l9#grepBuffers(<q-args>, range(1, bufnr('$')))$/;"	c
L9Timer	bundle/Vim-L9/plugin/l9.vim	/^  command -nargs=1 L9Timer :$/;"	c
L9Timer	bundle/Vim-L9/plugin/l9.vim	/^  command -nargs=1 L9Timer call s:timerBegin(<q-args>)$/;"	c
L9TimerDump	bundle/Vim-L9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump :$/;"	c
L9TimerDump	bundle/Vim-L9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump call s:timerDump()$/;"	c
L9TimerStop	bundle/Vim-L9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop :$/;"	c
L9TimerStop	bundle/Vim-L9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop call s:timerStop()$/;"	c
LoadConfigFile	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile()$/;"	f
LoadFileVars	bundle/vimtodo/ftplugin/todo.vim	/^function! s:LoadFileVars()$/;"	f
LoadLink	bundle/vimtodo/ftplugin/todo.vim	/^function! s:LoadLink()$/;"	f
LoadTaskLink	bundle/vimtodo/ftplugin/todo.vim	/^function! s:LoadTaskLink()$/;"	f
LoadUserTypeDefs	bundle/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
Log	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
M	bundle/Zhoeon_colors/colors/inkpot.vim	/^fun! <SID>M(a)$/;"	f
M	bundle/Zhoeon_colors/colors/vividchalk.vim	/^fun! s:M(a)$/;"	f
Make	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=customlist,dispatch#make_complete Make$/;"	c
Map	bundle/vimtodo/ftplugin/todo.vim	/^function! s:Map(keys, funcname)$/;"	f
MapKeys	bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
MapOp	bundle/tcomment_vim/plugin/tcomment.vim	/^function! s:MapOp(name, count, extra, op, invoke) "{{{3$/;"	f
Mark	bundle/Mark/plugin/mark.vim	/^command! -nargs=? Mark call s:DoMark(<f-args>)$/;"	c
MarkCurrentWord	bundle/Mark/plugin/mark.vim	/^function! s:MarkCurrentWord()$/;"	f
MarkRegex	bundle/Mark/plugin/mark.vim	/^function! s:MarkRegex(...) " MarkRegex(regexp)$/;"	f
MatchDebug	bundle/matchit/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
Match_debug	bundle/matchit/plugin/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	bundle/matchit/plugin/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
MavenOutputDirectory	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory()$/;"	f
MenuController.New	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Merge	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Modules	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules()$/;"	f
Move	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MultiMatch	bundle/matchit/plugin/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MyAppend1	bundle/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	bundle/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFuncref	bundle/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	bundle/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NERDTree	bundle/git-nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	bundle/git-nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeAddKeyMap	bundle/git-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/git-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/git-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	bundle/git-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	bundle/git-nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	bundle/git-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCacheDirtyDir	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeCacheDirtyDir(pathStr)$/;"	f
NERDTreeClose	bundle/git-nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call nerdtree#closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/git-nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/git-nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	bundle/git-nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call nerdtree#findAndRevealPath()$/;"	c
NERDTreeFocus	bundle/git-nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	bundle/git-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	bundle/git-nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeGetCWDGitStatus	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetCWDGitStatus()$/;"	f
NERDTreeGetFileGitStatusKey	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetFileGitStatusKey(us, them)$/;"	f
NERDTreeGetGitStatusPrefix	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetGitStatusPrefix(path)$/;"	f
NERDTreeGetIndicator	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetIndicator(statusKey)$/;"	f
NERDTreeGitStatusKeyMapping	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGitStatusKeyMapping()$/;"	f
NERDTreeGitStatusRefresh	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGitStatusRefresh()$/;"	f
NERDTreeHijackNetrw	bundle/git-nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	bundle/git-nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/git-nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	bundle/git-nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.TogglePrimary('<args>')$/;"	c
NERDTreeTrimDoubleQuotes	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeTrimDoubleQuotes(pathStr)$/;"	f
NeoCompleteBufferMakeCache	bundle/neocomplete/plugin/neocomplete/buffer.vim	/^      \\ NeoCompleteBufferMakeCache$/;"	c
NeoCompleteClean	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteClean$/;"	c
NeoCompleteDictionaryMakeCache	bundle/neocomplete/plugin/neocomplete/dictionary.vim	/^      \\ NeoCompleteDictionaryMakeCache$/;"	c
NeoCompleteDisable	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteDisable$/;"	c
NeoCompleteEnable	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteEnable$/;"	c
NeoCompleteIncludeMakeCache	bundle/neocomplete/plugin/neocomplete/include.vim	/^command! -nargs=? -complete=buffer NeoCompleteIncludeMakeCache$/;"	c
NeoCompleteLock	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteLock$/;"	c
NeoCompleteSetFileType	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=1 -bar -complete=filetype NeoCompleteSetFileType$/;"	c
NeoCompleteSyntaxMakeCache	bundle/neocomplete/plugin/neocomplete/syntax.vim	/^      \\ NeoCompleteSyntaxMakeCache$/;"	c
NeoCompleteTagMakeCache	bundle/neocomplete/plugin/neocomplete/tag.vim	/^      \\ NeoCompleteTagMakeCache$/;"	c
NeoCompleteToggle	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteToggle$/;"	c
NeoCompleteUnlock	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteUnlock$/;"	c
NeoSnippetClearMarkers	bundle/neosnippet/plugin/neosnippet.vim	/^command! NeoSnippetClearMarkers$/;"	c
NeoSnippetEdit	bundle/neosnippet/plugin/neosnippet.vim	/^      \\ NeoSnippetEdit$/;"	c
NeoSnippetMakeCache	bundle/neosnippet/plugin/neosnippet.vim	/^      \\ NeoSnippetMakeCache$/;"	c
NeoSnippetSource	bundle/neosnippet/plugin/neosnippet.vim	/^      \\ NeoSnippetSource$/;"	c
NewScratchBuffer	bundle/vimtodo/ftplugin/todo.vim	/^function! s:NewScratchBuffer(name, split)$/;"	f
NewTags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name)$/;"	f
NextNormalWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:NextNormalWindow() abort$/;"	f
NextTaskState	bundle/vimtodo/ftplugin/todo.vim	/^function! s:NextTaskState()$/;"	f
NormalTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
OpenCloseBackspace	bundle/autoclose/plugin/autoclose.vim	/^function <SID>OpenCloseBackspace() " ---{{{2$/;"	f
OpenFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenSpecial	bundle/autoclose/plugin/autoclose.vim	/^function <SID>OpenSpecial(ochar,cchar) " ---{{{2$/;"	f
OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
Overdue	bundle/vimtodo/ftplugin/todo.vim	/^command -buffer Overdue :call s:ShowDueTasks(-365,-1)$/;"	c
ParseArgs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ParseArgs(beg, end, comment_mode, arglist) "{{{3$/;"	f
ParseDate	bundle/vimtodo/ftplugin/todo.vim	/^function! s:ParseDate(datestr)$/;"	f
ParseSkip	bundle/matchit/plugin/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseTagline	bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
ParseWords	bundle/matchit/plugin/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path.AbsolutePathFor	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	bundle/git-nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PopupmenuExists	bundle/tlib_vim/autoload/tlib/input.vim	/^function s:PopupmenuExists()$/;"	f
PrevWord	bundle/Mark/plugin/mark.vim	/^function! s:PrevWord()$/;"	f
PrintFormat	bundle/tlib_vim/autoload/tlib/string.vim	/^function! s:PrintFormat(format, string) "{{{3$/;"	f
PrintHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintMe	bundle/tlib_vim/samples/tlib/input/tlib_input_list.vim	/^function! PrintMe(state, items) "{{{3$/;"	f
PrintTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, is_first, fileinfo, typeinfo) abort$/;"	f
ProcessFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ProcessLine(uncomment, match, checkRx, replace)$/;"	f
ProcessPseudoChildren	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo) abort$/;"	f
ProcessPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo) abort$/;"	f
ProcessSnippet	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! s:ProcessSnippet(snip)$/;"	f
PromptTaskState	bundle/vimtodo/ftplugin/todo.vim	/^function! s:PromptTaskState()$/;"	f
PromptlineSnapshot	bundle/promptline/plugin/promptline.vim	/^command! -nargs=+ -bang -complete=customlist,<sid>command_completion PromptlineSnapshot call promptline#snapshot(strlen("<bang>"), <f-args>)$/;"	c
PseudoTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
PurgeTimestamp	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! s:PurgeTimestamp(dir) "{{{3$/;"	f
Queue	bundle/Vim-L9/autoload/l9/async.py	/^import Queue$/;"	i
QuitIfOnlyWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow() abort$/;"	f
QuitPreHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook() " {{{2$/;"	f
QuoteDelim	bundle/autoclose/plugin/autoclose.vim	/^function <SID>QuoteDelim(char) " ---{{{2$/;"	f
Ref	bundle/matchit/plugin/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
RehighlightBlame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
RemoteComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveCarriageReturn	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line)$/;"	f
RenderContent	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
RepeatCommentstring	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:RepeatCommentstring(cdef) "{{{3$/;"	f
ReplaceCmd	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceInLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ReplaceInLine(text) "{{{3$/;"	f
Resolve	bundle/matchit/plugin/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
RestoreFrameParams	bundle/tlib_vim/autoload/tlib/vim.vim	/^function! s:RestoreFrameParams() "{{{3$/;"	f
RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RetabSnip	bundle/vim-snipmate/ftplugin/snippet.vim	/^command! -buffer -range=% RetabSnip <line1>,<line2>call snipMate#RetabSnip()$/;"	c
Return	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^fun s:Return()$/;"	f
RevisionComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
RewriteFormatString	bundle/tlib_vim/autoload/tlib/string.vim	/^function! s:RewriteFormatString(format, pattern, string) "{{{3$/;"	f
RunOracle	bundle/vim-go/autoload/go/oracle.vim	/^func! s:RunOracle(mode, selected) range abort$/;"	f
RunStateHandlers	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:RunStateHandlers(world) "{{{3$/;"	f
SID	bundle/autoclose/plugin/autoclose.vim	/^function s:SID()$/;"	f
SID	bundle/git-nerdtree/autoload/nerdtree.vim	/^function s:SID()$/;"	f
SID	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
SID_PREFIX	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! s:SID_PREFIX() "{{{$/;"	f
SaveClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath()$/;"	f
SaveConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig()$/;"	f
SaveFrameParams	bundle/tlib_vim/autoload/tlib/vim.vim	/^function! s:SaveFrameParams() "{{{3$/;"	f
SearchAnyMark	bundle/Mark/plugin/mark.vim	/^function! s:SearchAnyMark(...) " SearchAnyMark(flags)$/;"	f
SearchCurrentMark	bundle/Mark/plugin/mark.vim	/^function! s:SearchCurrentMark(...) " SearchCurrentMark(flags)$/;"	f
SearchNext	bundle/Mark/plugin/mark.vim	/^function! s:SearchNext(...) " SearchNext(flags)$/;"	f
SectionSpec	bundle/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
SelectOutput	bundle/tlib_vim/samples/tlib/input/tlib_input_list.vim	/^function! SelectOutput(ex) "{{{3$/;"	f
SelectTaskState	bundle/vimtodo/ftplugin/todo.vim	/^function! s:SelectTaskState(state, oldstate, idx)$/;"	f
SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetOffset	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:SetOffset(world) "{{{3$/;"	f
SetProperty	bundle/vimtodo/ftplugin/todo.vim	/^function! s:SetProperty(drawerline, property, value)$/;"	f
SetScrollBind	bundle/tlib_vim/autoload/tlib/file.vim	/^function! s:SetScrollBind(world) "{{{3$/;"	f
SetStatusLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine(current)$/;"	f
SetTagbar	bundle/vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
SetTaskState	bundle/vimtodo/ftplugin/todo.vim	/^function! s:SetTaskState(state, oldstate, idx)$/;"	f
SetTimestamp	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! s:SetTimestamp(cfile, type) "{{{3$/;"	f
SetWhitespaceMode	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:SetWhitespaceMode(cdef) "{{{3$/;"	f
ShouldPurge	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! s:ShouldPurge(partial_filename) "{{{3$/;"	f
ShowDueTasks	bundle/vimtodo/ftplugin/todo.vim	/^function! s:ShowDueTasks(start, end)$/;"	f
ShowInPreviewWin	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowLocList	bundle/syntastic/plugin/syntastic.vim	/^function! s:ShowLocList() " {{{2$/;"	f
ShowPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShrinkIfExpanded	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
SignId	bundle/tlib_vim/autoload/tlib/signs.vim	/^function! s:SignId(item) "{{{3$/;"	f
SnipMateLoadScope	bundle/vim-snipmate/plugin/snipMate.vim	/^command! -bang -bar -nargs=+ SnipMateLoadScope$/;"	c
SnipMateOpenSnippetFiles	bundle/vim-snipmate/plugin/snipMate.vim	/^command! SnipMateOpenSnippetFiles call snipMate#OpenSnippetFiles()$/;"	c
SnippetsIndent	bundle/neosnippet/indent/neosnippet.vim	/^function! SnippetsIndent() "{{{$/;"	f
SortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
Spawn	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=customlist,dispatch#command_complete Spawn$/;"	c
SplitClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath)$/;"	f
StageDiff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
Start	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=customlist,dispatch#command_complete Start$/;"	c
StartColRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartColRx(comment_mode, col, ...)$/;"	f
StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
StartLineRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartLineRx(pos)$/;"	f
StartPosRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartPosRx(comment_mode, line, col)$/;"	f
Status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
Strdisplaywidth	bundle/tcomment_vim/autoload/tcomment.vim	/^    function! s:Strdisplaywidth(...) "{{{3$/;"	f
Strdisplaywidth	bundle/tcomment_vim/autoload/tcomment.vim	/^    function! s:Strdisplaywidth(string, ...) "{{{3$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) " {{{2$/;"	f
SyntasticBalloonsExprNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() " {{{2$/;"	f
SyntasticBalloonsNotifier.New	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) " {{{2$/;"	f
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck$/;"	c
SyntasticChecker.New	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args) " {{{2$/;"	f
SyntasticChecker._getOpt	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) " {{{2$/;"	f
SyntasticChecker._quietMessages	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) " {{{2$/;"	f
SyntasticChecker._shescape	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._shescape(opt) " {{{2$/;"	f
SyntasticChecker.getExec	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() " {{{2$/;"	f
SyntasticChecker.getExecEscaped	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() " {{{2$/;"	f
SyntasticChecker.getFiletype	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() " {{{2$/;"	f
SyntasticChecker.getLocList	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() " {{{2$/;"	f
SyntasticChecker.getLocListRaw	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() " {{{2$/;"	f
SyntasticChecker.getName	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() " {{{2$/;"	f
SyntasticChecker.isAvailable	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() " {{{2$/;"	f
SyntasticChecker.log	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) " {{{2$/;"	f
SyntasticChecker.makeprgBuild	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) " {{{2$/;"	f
SyntasticChecker.setWantSort	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) " {{{2$/;"	f
SyntasticChecker.wantSort	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() " {{{2$/;"	f
SyntasticCheckerIsAvailableDefault	bundle/syntastic/plugin/syntastic/checker.vim	/^function! SyntasticCheckerIsAvailableDefault() dict " {{{2$/;"	f
SyntasticCursorNotifier.New	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() " {{{2$/;"	f
SyntasticCursorNotifier.enabled	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() " {{{2$/;"	f
SyntasticCursorNotifier.refresh	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) " {{{2$/;"	f
SyntasticCursorNotifier.reset	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) " {{{2$/;"	f
SyntasticHighlightingNotifier.New	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) " {{{2$/;"	f
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=? -complete=custom,s:CompleteFiletypes SyntasticInfo$/;"	c
SyntasticJavacEditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^    command! SyntasticJavacEditConfig call s:EditConfig()$/;"	c
SyntasticLoclist.New	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) " {{{2$/;"	f
SyntasticLoclist.balloons	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() " {{{2$/;"	f
SyntasticLoclist.copyRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() " {{{2$/;"	f
SyntasticLoclist.current	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current() " {{{2$/;"	f
SyntasticLoclist.decorate	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) " {{{2$/;"	f
SyntasticLoclist.deploy	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() " {{{2$/;"	f
SyntasticLoclist.destroy	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() " {{{2$/;"	f
SyntasticLoclist.errors	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() " {{{2$/;"	f
SyntasticLoclist.extend	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) " {{{2$/;"	f
SyntasticLoclist.filter	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) " {{{2$/;"	f
SyntasticLoclist.getBuffers	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() " {{{2$/;"	f
SyntasticLoclist.getFirstIssue	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstIssue() " {{{2$/;"	f
SyntasticLoclist.getName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() " {{{2$/;"	f
SyntasticLoclist.getOwner	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() " {{{2$/;"	f
SyntasticLoclist.getRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() " {{{2$/;"	f
SyntasticLoclist.isEmpty	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() " {{{2$/;"	f
SyntasticLoclist.isNewerThan	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) " {{{2$/;"	f
SyntasticLoclist.messages	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) " {{{2$/;"	f
SyntasticLoclist.setName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) " {{{2$/;"	f
SyntasticLoclist.setOwner	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) " {{{2$/;"	f
SyntasticLoclist.setloclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist() " {{{2$/;"	f
SyntasticLoclist.show	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() " {{{2$/;"	f
SyntasticLoclist.sort	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() " {{{2$/;"	f
SyntasticLoclist.warnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() " {{{2$/;"	f
SyntasticLoclistHide	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() " {{{2$/;"	f
SyntasticMake	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) " {{{2$/;"	f
SyntasticModeMap.Instance	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) " {{{2$/;"	f
SyntasticModeMap.echoMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() " {{{2$/;"	f
SyntasticModeMap.isPassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() " {{{2$/;"	f
SyntasticModeMap.modeInfo	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(...) " {{{2$/;"	f
SyntasticModeMap.synch	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() " {{{2$/;"	f
SyntasticModeMap.toggleMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() " {{{2$/;"	f
SyntasticNotifiers.Instance	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() " {{{2$/;"	f
SyntasticNotifiers.refresh	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) " {{{2$/;"	f
SyntasticNotifiers.reset	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) " {{{2$/;"	f
SyntasticRefreshCursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) " {{{2$/;"	f
SyntasticRegistry.Instance	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() " {{{2$/;"	f
SyntasticRegistry._checkDeprecation	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._checkDeprecation(filetype) " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers_map, list) " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype) " {{{2$/;"	f
SyntasticRegistry._registerChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) " {{{2$/;"	f
SyntasticRegistry.getCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) " {{{2$/;"	f
SyntasticReset	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticReset$/;"	c
SyntasticSetLoclist	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticSetLoclist call g:SyntasticLoclist.current().setloclist()$/;"	c
SyntasticSignsNotifier.New	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) " {{{2$/;"	f
SyntasticSignsNotifier._setup	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) " {{{2$/;"	f
SyntasticSignsNotifier.enabled	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() " {{{2$/;"	f
SyntasticSignsNotifier.refresh	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) " {{{2$/;"	f
SyntasticStatuslineFlag	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() " {{{2$/;"	f
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticToggleMode call s:ToggleMode()$/;"	c
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	bundle/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	bundle/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_GetLocList	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	bundle/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_IsAvailable	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	bundle/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_html_validator_GetLocList	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_w3_GetLocList	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict$/;"	f
SyntaxCheckers_java_javac_IsAvailable	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	bundle/syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perl_GetLocList	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	bundle/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	bundle/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	bundle/syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep257_GetLocList	bundle/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep8_GetLocList	bundle/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	bundle/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	bundle/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_python_GetLocList	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	bundle/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	bundle/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_vala_valac_GetLocList	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
TBrowseOutput	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=1 -complete=command TBrowseOutput call tlib#cmd#BrowseOutput(<q-args>)$/;"	c
TBrowseScriptnames	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=0 -complete=command TBrowseScriptnames call$/;"	c
TComment	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TComment$/;"	c
TCommentAs	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -complete=customlist,tcomment#Complete -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentBlock$/;"	c
TCommentInline	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentInline$/;"	c
TCommentMaybeInline	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentMaybeInline$/;"	c
TCommentRight	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentRight$/;"	c
TKeyArg	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=+ TKeyArg exec tlib#arg#Key([<args>])$/;"	c
TLet	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=+ TLet if !exists(matchstr(<q-args>, '^[^=[:space:]]\\+')) | exec 'let '. <q-args> | endif$/;"	c
TLib	bundle/tlib_vim/autoload/tlib/autocmdgroup.vim	/^augroup TLib$/;"	a
TOVLWrite	bundle/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^augroup TOVLWrite$/;"	a
TRequire	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=+ TRequire let s:require = [<f-args>]$/;"	c
TScratch	bundle/tlib_vim/plugin/02tlib.vim	/^command! -bar -nargs=* -bang TScratch call tlib#scratch#UseScratch({'scratch_split': '<bang>' != '!', <args>})$/;"	c
TTimeCommand	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=1 -complete=command TTimeCommand call tlib#cmd#Time(<q-args>)$/;"	c
TVarArg	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=+ TVarArg exec tlib#arg#Let([<args>])$/;"	c
TagList_IsValid	bundle/taglist/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	bundle/taglist/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	bundle/taglist/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	bundle/taglist/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
Tagbar	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarBalloonExpr	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGetTypeConfig	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TaskSearch	bundle/vimtodo/ftplugin/todo.vim	/^function! s:TaskSearch(daterange, ...)$/;"	f
TestArgs	bundle/tlib_vim/spec/tlib/arg.vim	/^function! TestArgs(...) "{{{3$/;"	f
TestArgs	bundle/tlib_vim/test/tlib.vim	/^function! TestArgs(...) "{{{3$/;"	f
TestArgs1	bundle/tlib_vim/spec/tlib/arg.vim	/^function! TestArgs1(...) "{{{3$/;"	f
TestArgs1	bundle/tlib_vim/test/tlib.vim	/^function! TestArgs1(...) "{{{3$/;"	f
TestArgs2	bundle/tlib_vim/spec/tlib/arg.vim	/^function! TestArgs2(...) "{{{3$/;"	f
TestArgs2	bundle/tlib_vim/test/tlib.vim	/^function! TestArgs2(...) "{{{3$/;"	f
TestArgs3	bundle/tlib_vim/spec/tlib/arg.vim	/^function! TestArgs3(...)$/;"	f
TestArgs3	bundle/tlib_vim/test/tlib.vim	/^function! TestArgs3(...)$/;"	f
TestGetArg	bundle/tlib_vim/spec/tlib/arg.vim	/^function! TestGetArg(...) "{{{3$/;"	f
TestGetArg	bundle/tlib_vim/test/tlib.vim	/^function! TestGetArg(...) "{{{3$/;"	f
TestGetArg1	bundle/tlib_vim/spec/tlib/arg.vim	/^function! TestGetArg1(...) "{{{3$/;"	f
TestGetArg1	bundle/tlib_vim/test/tlib.vim	/^function! TestGetArg1(...) "{{{3$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
Tlist	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	bundle/taglist/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	bundle/taglist/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Filenames	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_Tag_Linenum	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
Today	bundle/vimtodo/ftplugin/todo.vim	/^command -buffer Today :call s:ShowDueTasks(0,0)$/;"	c
TogBG	bundle/colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleAutoCloseMappings	bundle/autoclose/plugin/autoclose.vim	/^fun <SID>ToggleAutoCloseMappings() " --- {{{2$/;"	f
ToggleAutoclose	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleBG	bundle/colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	bundle/colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
ToggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHideNonPublicTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleMode	bundle/syntastic/plugin/syntastic.vim	/^function! s:ToggleMode() " {{{2$/;"	f
ToggleSort	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow() abort$/;"	f
Tomorrow	bundle/vimtodo/ftplugin/todo.vim	/^command -buffer Tomorrow :call s:ShowDueTasks(1,1)$/;"	c
TransformUserTypeDef	bundle/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TypeInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
TypeInfo.createKinddict	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.createKinddict() abort dict$/;"	f
TypeInfo.getKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
UndoHighlightLine	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! s:UndoHighlightLine() "{{{3$/;"	f
UnreplaceInLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:UnreplaceInLine(text) "{{{3$/;"	f
UpdateErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, ...) " {{{2$/;"	f
UpdateMark	bundle/Mark/plugin/mark.vim	/^function! s:UpdateMark()$/;"	f
UpdateTimeTotal	bundle/vimtodo/ftplugin/todo.vim	/^command -buffer UpdateTimeTotal :call s:UpdateTimeTotal()$/;"	c
UpdateTimeTotal	bundle/vimtodo/ftplugin/todo.vim	/^function! s:UpdateTimeTotal()$/;"	f
Util1	bundle/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	bundle/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	bundle/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
Ve	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vopen	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
Week	bundle/vimtodo/ftplugin/todo.vim	/^command -buffer Week :call s:ShowDueTasks(0,7)$/;"	c
Wholematch	bundle/matchit/plugin/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WideMsg	bundle/jslint/ftplugin/javascript/jslint.vim	/^    function s:WideMsg(msg)$/;"	f
Window.Toggle\	bundle/colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	bundle/colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	bundle/colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
Worker	bundle/Vim-L9/autoload/l9/async.py	/^class Worker(threading.Thread):$/;"	c
Wq	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/Zhoeon_colors/colors/inkpot.vim	/^fun! <SID>X(a)$/;"	f
X	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/Zhoeon_colors/colors/vividchalk.vim	/^fun! s:X(a)$/;"	f
ZoomWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
[%	bundle/matchit/plugin/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	bundle/matchit/plugin/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	bundle/matchit/plugin/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[c	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap [c <Plug>GitGutterPrevHunk$/;"	m
]%	bundle/matchit/plugin/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	bundle/matchit/plugin/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	bundle/matchit/plugin/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]c	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap ]c <Plug>GitGutterNextHunk$/;"	m
__init__	bundle/Vim-L9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Asyncer
__init__	bundle/Vim-L9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Worker
__init__	bundle/Vim-L9/autoload/l9/async.py	/^    def __init__(self, command, cwd, input, appends):$/;"	m	class:Executor
__promptline_git_status	bundle/promptline/autoload/promptline/slices/git_status.sh	/^function __promptline_git_status {$/;"	f
_build_module	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_build_module(sid)$/;"	f
_build_module	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:_build_module(sid)$/;"	f
_check_php	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_check_php() " {{{2$/;"	f
_check_pkg	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_check_pkg(name, ...) " {{{2$/;"	f
_check_python	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_check_python() " {{{2$/;"	f
_check_ruby	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_check_ruby() " {{{2$/;"	f
_compare	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:_compare(a, b)$/;"	f
_compare	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:_compare(a, b)$/;"	f
_compareErrorItemsByColumns	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compareErrorItemsByColumns(a, b) " {{{2$/;"	f
_compareErrorItemsByLines	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compareErrorItemsByLines(a, b) " {{{2$/;"	f
_concat	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_concat(lists)$/;"	f
_create_hash	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:_create_hash(dir, str)$/;"	f
_create_hash	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:_create_hash(dir, str)$/;"	f
_deprecated2	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_deprecated2(fname)$/;"	f
_deprecated2	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_deprecated2(fname)$/;"	f
_encode_name	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_encode_name	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_file2module	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_file2module(file)$/;"	f
_file2module	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:_file2module(file)$/;"	f
_findIndex	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! s:_findIndex(column, messages) " {{{2$/;"	f
_formatVariable	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_formatVariable(name) " {{{2$/;"	f
_getCflags	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_getCflags(ft, ck, opts) " {{{2$/;"	f
_getCheckerVar	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_getCheckerVar(scope, filetype, subchecker, name, default) " {{{2$/;"	f
_getIncludeDirs	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_getIncludeDirs(filetype) " {{{2$/;"	f
_get_functions	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_get_functions(sid)$/;"	f
_get_functions	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^  function! s:_get_functions(sid)$/;"	f
_get_module_path	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_get_module_path(name)$/;"	f
_get_module_path	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:_get_module_path(name)$/;"	f
_get_sid_by_script	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_get_sid_by_script(path)$/;"	f
_import	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_import(name)$/;"	f
_import	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:_import(name)$/;"	f
_init	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_init() " {{{2$/;"	f
_isDebugEnabled_dumb	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) " {{{2$/;"	f
_isDebugEnabled_smart	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) " {{{2$/;"	f
_isSameIndex	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! s:_isSameIndex(line, old_line, column, idx, messages) " {{{2$/;"	f
_is_absolute_path	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_is_absolute_path	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_logRedirect	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) " {{{2$/;"	f
_logTimestamp	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_logTimestamp() " {{{2$/;"	f
_normaliseFiletype	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_normaliseFiletype(ftalias) " {{{2$/;"	f
_pad_with_char	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char)$/;"	f
_path2project_directory_git	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_git(path)$/;"	f
_path2project_directory_git	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_git(path)$/;"	f
_path2project_directory_others	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path)$/;"	f
_path2project_directory_others	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path)$/;"	f
_path2project_directory_svn	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_svn(path)$/;"	f
_path2project_directory_svn	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_svn(path)$/;"	f
_redir	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_redir(cmd)$/;"	f
_redir	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:_redir(cmd)$/;"	f
_regHandler	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_regHandler(regex, function, args) " {{{2$/;"	f
_removeShadowedItems	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_removeShadowedItems(errors) " {{{2$/;"	f
_replace	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_replace(str, from, to, flags)$/;"	f
_rmrf	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) " {{{2$/;"	f
_runtime_files	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_runtime_files(path)$/;"	f
_runtime_files	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^  function! s:_runtime_files(path)$/;"	f
_scripts	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:_scripts()$/;"	f
_searchHeaders	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_searchHeaders() " {{{2$/;"	f
_setScreenColumn	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_setScreenColumn(item) " {{{2$/;"	f
_split_by_wcswidth	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_split_by_wcswidth(body, x)$/;"	f
_split_by_wcswidth_once	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x)$/;"	f
_translate	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) " {{{2$/;"	f
_translateElement	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) " {{{2$/;"	f
_translateFilter	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) " {{{2$/;"	f
_unify_path	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_unify_path(path)$/;"	f
_unify_path	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^  function! s:_unify_path(path)$/;"	f
_uniq	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_uniq(list)$/;"	f
_uniq	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^  function! s:_uniq(list)$/;"	f
_vital_depends	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_files	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_vital_files(pattern)$/;"	f
_vital_loaded	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_wcwidth	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
_wcwidth	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
a%	bundle/matchit/plugin/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
abbrev	bundle/vim-endwise/plugin/endwise.vim	/^function! s:abbrev()$/;"	f
action_table.expand.func	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.expand.func(candidate) "{{{$/;"	f
action_table.neosnippet_source.func	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:action_table.neosnippet_source.func(candidates) "{{{$/;"	f
action_table.preview.func	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.preview.func(candidates) "{{{$/;"	f
action_table.unite__new_candidate.func	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
activateAll	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:activateFileNode(node)$/;"	f
activateFufBuffer	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:activateFufBuffer()$/;"	f
addToErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:addToErrors(errors, options) " {{{2$/;"	f
add_methods	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_section	bundle/vim-airline/autoload/airline/extensions/default.vim	/^  function s:add_section(builder, context, key)$/;"	f
add_snippet_attribute	bundle/neosnippet/autoload/neosnippet/parser.vim	/^function! s:add_snippet_attribute(snippet_file, line, linenr, snippet_dict) "{{{$/;"	f
airline#add_inactive_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#builder#new	bundle/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#check_mode	bundle/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	bundle/vim-airline/plugin/airline.vim	/^function airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#deprecation#check	bundle/vim-airline/autoload/airline/deprecation.vim	/^function! airline#deprecation#check()$/;"	f
airline#extensions#append_to_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#branch#get_head	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#bufferline#init	bundle/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	bundle/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	bundle/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#commandt#apply	bundle/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	bundle/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#default#apply	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#eclim#creat_line	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#hunks#get_hunks	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks()$/;"	f
airline#extensions#hunks#init	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext)$/;"	f
airline#extensions#load	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#netrw#apply	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	bundle/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	bundle/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#prepend_to_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#init	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#syntastic#get_warnings	bundle/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warnings()$/;"	f
airline#extensions#syntastic#init	bundle/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#default#format	bundle/vim-airline/autoload/airline/extensions/tabline/default.vim	/^function! airline#extensions#tabline#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#default#wrap_name	bundle/vim-airline/autoload/airline/extensions/tabline/default.vim	/^function! airline#extensions#tabline#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#get	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr)$/;"	f
airline#extensions#tabline#init	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#title	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#unique_tail#format	bundle/vim-airline/autoload/airline/extensions/tabline/unique_tail.vim	/^function! airline#extensions#tabline#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#unique_tail_improved#format	bundle/vim-airline/autoload/airline/extensions/tabline/unique_tail_improved.vim	/^function! airline#extensions#tabline#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tagbar#currenttag	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#tmuxline#init	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	bundle/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	bundle/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unite#apply	bundle/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	bundle/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#virtualenv#apply	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#whitespace#check	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#init	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#highlighter#add_accent	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes)$/;"	f
airline#highlighter#highlight_modified_inactive	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#init#bootstrap	bundle/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	bundle/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#parts#define	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#remove_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	bundle/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name)$/;"	f
airline#themes#base16#refresh	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  function! airline#themes#base16#refresh()$/;"	f
airline#themes#generate_color_map	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#hybrid#refresh	bundle/vim-airline/autoload/airline/themes/hybrid.vim	/^function! airline#themes#hybrid#refresh()$/;"	f
airline#themes#jellybeans#refresh	bundle/vim-airline/autoload/airline/themes/jellybeans.vim	/^function! airline#themes#jellybeans#refresh()$/;"	f
airline#themes#kalisi#refresh	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^function! airline#themes#kalisi#refresh()$/;"	f
airline#themes#lucius#refresh	bundle/vim-airline/autoload/airline/themes/lucius.vim	/^function! airline#themes#lucius#refresh()$/;"	f
airline#themes#monochrome#refresh	bundle/vim-airline/autoload/airline/themes/monochrome.vim	/^function! airline#themes#monochrome#refresh()$/;"	f
airline#themes#patch	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#themes#solarized#refresh	bundle/vim-airline/autoload/airline/themes/solarized.vim	/^function! airline#themes#solarized#refresh()$/;"	f
airline#themes#tomorrow#refresh	bundle/vim-airline/autoload/airline/themes/tomorrow.vim	/^function! airline#themes#tomorrow#refresh()$/;"	f
airline#themes#zenburn#refresh	bundle/vim-airline/autoload/airline/themes/zenburn.vim	/^function! airline#themes#zenburn#refresh()$/;"	f
airline#update_statusline	bundle/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#util#append	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#exec_funcrefs	bundle/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getwinvar	bundle/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#prepend	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#wrap	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_theme	bundle/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_toggle	bundle/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
all	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:all(f, xs)$/;"	f
all	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:all(f, xs)$/;"	f
analyze_dictionary_variable_line	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:analyze_dictionary_variable_line(line, keyword_dict, var_name) "{{{$/;"	f
analyze_function_line	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:analyze_function_line(line, keyword_dict, prototype) "{{{$/;"	f
analyze_variable_line	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:analyze_variable_line(line, keyword_dict) "{{{$/;"	f
and	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:and(xs)$/;"	f
and	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:and(xs)$/;"	f
any	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:any(f, xs)$/;"	f
any	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:any(f, xs)$/;"	f
append_sections_to_prompt	bundle/promptline/autoload/promptline.vim	/^fun! s:append_sections_to_prompt( prompt, preset ) abort$/;"	f
argv	bundle/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
async_load	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! s:async_load(argv, cache_dir, filename) "{{{$/;"	f
b:bar	bundle/tlib_vim/spec/tlib/var.vim	/^let b:bar = 3$/;"	v
b:bar	bundle/tlib_vim/test/tlib.vim	/^let b:bar = 3$/;"	v
b:current_syntax	bundle/neosnippet/syntax/neosnippet.vim	/^let b:current_syntax = "snippet"$/;"	v
b:current_syntax	bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	bundle/vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	bundle/vim-go/syntax/godoc.vim	/^let b:current_syntax = "godoc"$/;"	v
b:current_syntax	bundle/vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	bundle/vim-json/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	bundle/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	bundle/vimtodo/syntax/todo.vim	/^let b:current_syntax = "todo"$/;"	v
b:current_syntax	syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	syntax/godoc.vim	/^let b:current_syntax = "godoc"$/;"	v
b:did_ftplugin	bundle/vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vimtodo/ftplugin/todo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	bundle/neosnippet/indent/neosnippet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_jslint_plugin	bundle/jslint/ftplugin/javascript/jslint.vim	/^    let b:did_jslint_plugin = 1$/;"	v
b:done_vimsnippets	bundle/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:mapped_auto_closetag	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^let b:mapped_auto_closetag = 1$/;"	v
b:showing_message	bundle/jslint/ftplugin/javascript/jslint.vim	/^let b:showing_message = 0$/;"	v
b:undo_ftplugin	bundle/neosnippet/ftplugin/neosnippet.vim	/^    let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	bundle/neosnippet/ftplugin/neosnippet.vim	/^    let b:undo_ftplugin = '|'$/;"	v
b:undo_ftplugin	bundle/neosnippet/ftplugin/neosnippet.vim	/^let b:undo_ftplugin .= '$/;"	v
b:undo_ftplugin	bundle/vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	bundle/vim-markdown/ftplugin/markdown.vim	/^let b:undo_ftplugin .= "|setl cms< com< fo<"$/;"	v
b:undo_indent	bundle/neosnippet/indent/neosnippet.vim	/^    let b:undo_indent = ''$/;"	v
b:undo_indent	bundle/neosnippet/indent/neosnippet.vim	/^    let b:undo_indent = '|'$/;"	v
b:undo_indent	bundle/neosnippet/indent/neosnippet.vim	/^let b:undo_indent .= '$/;"	v
bashHack	bundle/syntastic/plugin/syntastic.vim	/^function! s:bashHack() " {{{2$/;"	f
beep	bundle/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
bg	bundle/promptline/autoload/promptline.vim	/^fun! s:bg(color)$/;"	f
bookmark	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:bookmark(word)$/;"	f
bookmarkHere	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:bookmarkHere(word)$/;"	f
break	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:break(f, xs)$/;"	f
break	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:break(f, xs)$/;"	f
buf_utils#GotoBuf	bundle/vim-addon-mw-utils/autoload/buf_utils.vim	/^fun! buf_utils#GotoBuf(buf_identifier, opts)$/;"	f
buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
build_sections	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
c	bundle/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
cached_file_contents#CachedFileContents	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^function! cached_file_contents#CachedFileContents(file, func, ...) abort$/;"	f
cached_file_contents#ClearScanCache	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^fun! cached_file_contents#ClearScanCache()$/;"	f
cached_file_contents#Test	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^fun! cached_file_contents#Test()$/;"	f
can_diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
cgetfile	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:cgetfile(request, all, copen) abort$/;"	f
chCwd	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:chRoot(node)$/;"	f
changeCoverage	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:changeCoverage(name)$/;"	f
changesurround	bundle/vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
char_range	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:char_range(from, to)$/;"	f
char_range	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:char_range(from, to)$/;"	f
checkDataFileCompatibility	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:checkDataFileCompatibility()$/;"	f
checkKey	bundle/Vim-L9/autoload/l9/async.vim	/^function s:checkKey(key)$/;"	f
check_async_cache	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_async_cache() "{{{$/;"	f
check_buffer	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:check_buffer(bufnumber, is_force) "{{{$/;"	f
check_cache	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:check_cache() "{{{$/;"	f
check_changed_buffer	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_changed_buffer(bufnr) "{{{$/;"	f
check_defined	bundle/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
check_in_do_auto_complete	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:check_in_do_auto_complete() "{{{$/;"	f
check_in_path	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:check_in_path()$/;"	f
check_mixed_indent	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
check_old_cache	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_old_cache	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_source	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_source() "{{{$/;"	f
chomp	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:chomp(str) "{{{$/;"	f
choose	bundle/Zhoeon_colors/colors/vividchalk.vim	/^function! s:choose(mediocre,good)$/;"	f
chop	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:chop(str) "{{{$/;"	f
clear	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:clear(list)$/;"	f
clear	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:clear(list)$/;"	f
clear	bundle/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
clear_outputs	bundle/Vim-L9/autoload/l9/async.py	/^    def clear_outputs(self):$/;"	m	class:Worker
closeChildren	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:closeTreeWindow()$/;"	f
close_preview_window	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:close_preview_window() "{{{$/;"	f
closematch	bundle/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
color	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>color(r, g, b)$/;"	f
colors	bundle/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors_name	bundle/Zhoeon_colors/colors/cloudsxterm.vim	/^let colors_name = "cloudsxterm"$/;"	v
colors_name	bundle/Zhoeon_colors/colors/fruity.vim	/^let colors_name = "fruity"$/;"	v
colors_name	bundle/Zhoeon_colors/colors/inkpot.vim	/^let colors_name = "inkpot"$/;"	v
colors_name	bundle/Zhoeon_colors/colors/ir_black.vim	/^let colors_name = "ir_black"$/;"	v
colors_name	bundle/Zhoeon_colors/colors/plainnsimple.vim	/^let colors_name = "plainnsimple"$/;"	v
colors_name	bundle/Zhoeon_colors/colors/rdark-terminal.vim	/^let colors_name="rdark-terminal"$/;"	v
colors_name	bundle/Zhoeon_colors/colors/rdark.vim	/^let colors_name = "rdark"$/;"	v
colors_name	bundle/Zhoeon_colors/colors/slate.vim	/^let colors_name = 'slate'$/;"	v
colors_name	bundle/Zhoeon_colors/colors/summerfruit.vim	/^let colors_name = "summerfruit"$/;"	v
colors_name	bundle/Zhoeon_colors/colors/vividchalk.vim	/^let colors_name = "vividchalk"$/;"	v
colors_name	bundle/colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>colour(r, g, b)$/;"	f
command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command_completion	bundle/promptline/plugin/promptline.vim	/^function! s:command_completion(A,L,P)$/;"	f
common_head	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:common_head(strs)$/;"	f
compare	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! s:compare(i1, i2)$/;"	f
compare	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! s:compare(i1, i2)$/;"	f
compareTimeDescending	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:compareTimeDescending(i1, i2)$/;"	f
compare_source_rank	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! s:compare_source_rank(i1, i2)$/;"	f
compile	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^compile(FileName, LibDirs) ->$/;"	f
compiler_complete	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:compiler_complete(compiler, A, L, P) abort$/;"	f
complete	bundle/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f
complete_key	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:complete_key(key) "{{{$/;"	f
complete_presets	bundle/promptline/plugin/promptline.vim	/^fun! s:complete_presets(A,L,P)$/;"	f
complete_snapshot_files	bundle/promptline/plugin/promptline.vim	/^fun! s:complete_snapshot_files(A,L,P)$/;"	f
complete_themes	bundle/promptline/plugin/promptline.vim	/^fun! s:complete_themes(A,L,P)$/;"	f
completion_filter	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:completion_filter(results, query) abort$/;"	f
concat	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:concat(list)$/;"	f
concat	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:concat(list)$/;"	f
conj	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:conj(xs, x)$/;"	f
conj	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:conj(xs, x)$/;"	f
cons	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:cons(x, xs)$/;"	f
cons	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:cons(x, xs)$/;"	f
contains_multibyte	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:contains_multibyte(str) "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! s:converter.filter(context) "{{{$/;"	f
copy_outputs	bundle/Vim-L9/autoload/l9/async.py	/^    def copy_outputs(self):$/;"	m	class:Worker
crc_vim_table	bundle/tlib_vim/scripts/create_crc_table.rb	/^def crc_vim_table$/;"	f
create	bundle/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
createChangeCoverageListener	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:createChangeCoverageListener()$/;"	f
createDataBufferListener	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:createDataBufferListener(dataFile)$/;"	f
createEditDataListener	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:createEditDataListener()$/;"	f
crend	bundle/vim-endwise/plugin/endwise.vim	/^function! s:crend(always)$/;"	f
cs	bundle/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
current_compiler	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:current_compiler() abort$/;"	f
current_compiler	bundle/vim-go/compiler/go.vim	/^let current_compiler = "go"$/;"	v
d.Continue	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.Continue()$/;"	f
d.CurrentItem	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.CurrentItem()$/;"	f
d.DoContinue	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.DoContinue(v)$/;"	f
d.FilterFromKeyboard	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.FilterFromKeyboard(keep, start, ...)$/;"	f
d.FilterItem	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.FilterItem(items, filter, cursorAt)$/;"	f
d.FilteredItems	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.FilteredItems()$/;"	f
d.MapToOriginal	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.MapToOriginal(v)$/;"	f
d.NewBufferAndInit	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.NewBufferAndInit()$/;"	f
d.RemoveFilters	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.RemoveFilters()$/;"	f
d.SelectByIdOrFilter	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.SelectByIdOrFilter()$/;"	f
d.ShowAppliedFilters	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.ShowAppliedFilters()$/;"	f
d.ToggleAlignment	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.ToggleAlignment()$/;"	f
d.UpdateDisplay	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^  fun d.UpdateDisplay()$/;"	f
dd	bundle/jslint/ftplugin/javascript/jslint.vim	/^noremap <buffer><silent> dd dd:JSLintUpdate<CR>$/;"	m
deactivateFufBuffer	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:deactivateFufBuffer()$/;"	f
debug	bundle/tagbar/autoload/tagbar.vim	/^function! s:debug(msg) abort$/;"	f
debugmsg	bundle/vimtodo/misc/autocommit.sh	/^debugmsg() {$/;"	f
define_buffer_idx_mode_mappings	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:define_buffer_idx_mode_mappings()$/;"	f
define_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
delete	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
delete	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
deleteBookmark	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:deleteBookmark(bm)$/;"	f
deletefile	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:deletefile(cache_dir, filename)$/;"	f
deletefile	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:deletefile(cache_dir, filename)$/;"	f
did_json_syn_inits	bundle/vim-json/syntax/json.vim	/^    let did_json_syn_inits = 1$/;"	v
diff_modifier	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffidx	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:diffidx(a, b)$/;"	f
diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dispatch	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:dispatch(request) abort$/;"	f
dispatch#callback	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#callback(request) abort$/;"	f
dispatch#command_complete	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#command_complete(A, L, P) abort$/;"	f
dispatch#compile_command	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compile_command(bang, args, count) abort$/;"	f
dispatch#compiler_for_program	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compiler_for_program(args) abort$/;"	f
dispatch#compiler_options	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compiler_options(compiler) abort$/;"	f
dispatch#complete	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#complete(file) abort$/;"	f
dispatch#completed	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#completed(request) abort$/;"	f
dispatch#copen	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#copen(bang) abort$/;"	f
dispatch#expand	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#expand(string) abort$/;"	f
dispatch#focus	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#focus() abort$/;"	f
dispatch#focus_command	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#focus_command(bang, args) abort$/;"	f
dispatch#headless#activate	bundle/vim-dispatch/autoload/dispatch/headless.vim	/^function! dispatch#headless#activate(pid) abort$/;"	f
dispatch#headless#handle	bundle/vim-dispatch/autoload/dispatch/headless.vim	/^function! dispatch#headless#handle(request) abort$/;"	f
dispatch#isolate	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#isolate(keep, ...) abort$/;"	f
dispatch#iterm#activate	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! dispatch#iterm#activate(pid) abort$/;"	f
dispatch#iterm#handle	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! dispatch#iterm#handle(request) abort$/;"	f
dispatch#iterm#spawn	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! dispatch#iterm#spawn(command, request, activate) abort$/;"	f
dispatch#make_complete	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#make_complete(A, L, P) abort$/;"	f
dispatch#pid	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#pid(request) abort$/;"	f
dispatch#prepare_make	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#prepare_make(request, ...) abort$/;"	f
dispatch#prepare_start	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#prepare_start(request, ...) abort$/;"	f
dispatch#request	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#request(...) abort$/;"	f
dispatch#screen#activate	bundle/vim-dispatch/autoload/dispatch/screen.vim	/^function! dispatch#screen#activate(pid) abort$/;"	f
dispatch#screen#handle	bundle/vim-dispatch/autoload/dispatch/screen.vim	/^function! dispatch#screen#handle(request) abort$/;"	f
dispatch#screen#spawn	bundle/vim-dispatch/autoload/dispatch/screen.vim	/^function! dispatch#screen#spawn(command, request) abort$/;"	f
dispatch#set_title	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#set_title(request) abort$/;"	f
dispatch#shellescape	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#shellescape(...) abort$/;"	f
dispatch#shellpipe	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#shellpipe(file) abort$/;"	f
dispatch#slash	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#slash() abort$/;"	f
dispatch#spawn	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#spawn(command, ...) abort$/;"	f
dispatch#spawn_command	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#spawn_command(bang, command) abort$/;"	f
dispatch#start	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#start(command, ...) abort$/;"	f
dispatch#start_command	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#start_command(bang, command) abort$/;"	f
dispatch#tmux#activate	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#activate(pid) abort$/;"	f
dispatch#tmux#handle	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#handle(request) abort$/;"	f
dispatch#tmux#make	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#make(request) abort$/;"	f
dispatch#tmux#poll	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#poll() abort$/;"	f
dispatch#uniq	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#uniq(list) abort$/;"	f
dispatch#vim_executable	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#vim_executable() abort$/;"	f
dispatch#windows#activate	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#activate(pid) abort$/;"	f
dispatch#windows#handle	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#handle(request) abort$/;"	f
dispatch#windows#make	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#make(request) abort$/;"	f
dispatch#windows#spawn	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#spawn(title, exec, background) abort$/;"	f
dispatch#windows#start	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#start(request) abort$/;"	f
dispatch#x11#activate	bundle/vim-dispatch/autoload/dispatch/x11.vim	/^function! dispatch#x11#activate(pid) abort$/;"	f
dispatch#x11#handle	bundle/vim-dispatch/autoload/dispatch/x11.vim	/^function! dispatch#x11#handle(request) abort$/;"	f
dispatch_tmux	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^augroup dispatch_tmux$/;"	a
displayHelp	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:displayHelp()$/;"	f
doc_dict.search	bundle/neocomplete/autoload/neocomplete/echodoc.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
dosurround	bundle/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
ds	bundle/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dstring	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:dstring(expr)$/;"	f
dw	bundle/jslint/ftplugin/javascript/jslint.vim	/^noremap <buffer><silent> dw dw:JSLintUpdate<CR>$/;"	m
echo	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echoWarning	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
enumHelpTags	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:enumHelpTags(tagFiles)$/;"	f
enumItems	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:enumItems(dir)$/;"	f
enumItems	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:enumItems()$/;"	f
enumItems	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:enumItems(dir)$/;"	f
enumItems	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:enumItems(dir)$/;"	f
enumNonCurrentItems	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:enumNonCurrentItems(dir, bufNrPrev, cache)$/;"	f
enumTaggedFiles	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:enumTaggedFiles(tagFiles)$/;"	f
enumTags	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:enumTags(tagFiles)$/;"	f
env_reload#ReloadEnv	bundle/vim-addon-mw-utils/autoload/env_reload.vim	/^fun! env_reload#ReloadEnv(bash_export_command_output)$/;"	f
escape	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:escape(path)"{{{$/;"	f
escape	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! s:escape(string) abort$/;"	f
escape	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! s:escape(str) abort$/;"	f
escape_file_searching	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_file_searching	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_pattern	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:escape_pattern(str)$/;"	f
escape_pattern	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:escape_pattern(str)$/;"	f
escaped	bundle/vim-vinegar/plugin/vinegar.vim	/^function! s:escaped(first, last) abort$/;"	f
eval_snippet	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! s:eval_snippet(snippet_text) "{{{$/;"	f
evaluateLearningRank	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:evaluateLearningRank(word, stats)$/;"	f
exec_separator	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
execute	bundle/Vim-L9/autoload/l9/async.py	/^    def execute(self, var_key, var_command, var_cwd, var_input, var_appends):$/;"	m	class:Asyncer
execute	bundle/Vim-L9/autoload/l9/async.py	/^    def execute(self, worker):$/;"	m	class:Executor
exists	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:exists(name)$/;"	f
exists	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:exists(name)$/;"	f
exists_current_source	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:exists_current_source() "{{{$/;"	f
exit	bundle/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
expand	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:expand(string) abort$/;"	f
expandAbbrevMap	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:expandAbbrevMap(pattern, abbrevMap)$/;"	f
expandSearchDir	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:expandSearchDir(dir, level)$/;"	f
expand_modules	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:expand_modules(entry, all)$/;"	f
expand_placeholder	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! s:expand_placeholder(start, end, holder_cnt, line, ...) "{{{$/;"	f
expand_target_placeholder	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! s:expand_target_placeholder(line, col) "{{{$/;"	f
explainSkip	bundle/syntastic/plugin/syntastic.vim	/^function! s:explainSkip(...) " {{{2$/;"	f
ext.add_inactive_statusline_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_statusline_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_theme_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
extract_title	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:extract_title(command) abort$/;"	f
extractafter	bundle/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	bundle/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
fg	bundle/promptline/autoload/promptline.vim	/^fun! s:fg(color)$/;"	f
file	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:file(request) abort$/;"	f
filereadable	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
filereadable	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
find	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find(list, default, f)$/;"	f
find	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find(list, default, f)$/;"	f
findItem	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:findItem(items, word)$/;"	f
findItem	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:findItem(items, word)$/;"	f
findItem	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:findItem(items, word)$/;"	f
fixindent	bundle/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixup	bundle/vim-go/autoload/webapi/json.vim	/^function! s:fixup(val, tmp)$/;"	f
flatten	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:flatten(list, ...)$/;"	f
flatten	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:flatten(list, ...)$/;"	f
fnameescape	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	bundle/vim-vinegar/plugin/vinegar.vim	/^function! s:fnameescape(file) abort$/;"	f
foldl	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl1	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldl1(f, xs)$/;"	f
foldl1	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldl1(f, xs)$/;"	f
foldr	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr1	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldr1(f, xs)$/;"	f
foldr1	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldr1(f, xs)$/;"	f
formatItemUsingCache	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:formatItemUsingCache(item)$/;"	f
fuf#addMode	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#addMode(modeName)$/;"	f
fuf#bookmarkdir#createHandler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#createHandler(base)$/;"	f
fuf#bookmarkdir#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getEditableDataNames()$/;"	f
fuf#bookmarkdir#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getSwitchOrder()$/;"	f
fuf#bookmarkdir#onInit	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#onInit()$/;"	f
fuf#bookmarkdir#renewCache	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#renewCache()$/;"	f
fuf#bookmarkdir#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#requiresOnCommandPre()$/;"	f
fuf#bookmarkfile#createHandler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#createHandler(base)$/;"	f
fuf#bookmarkfile#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getEditableDataNames()$/;"	f
fuf#bookmarkfile#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getSwitchOrder()$/;"	f
fuf#bookmarkfile#onInit	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#onInit()$/;"	f
fuf#bookmarkfile#renewCache	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#renewCache()$/;"	f
fuf#bookmarkfile#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#requiresOnCommandPre()$/;"	f
fuf#buffer#createHandler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#createHandler(base)$/;"	f
fuf#buffer#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#getEditableDataNames()$/;"	f
fuf#buffer#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#getSwitchOrder()$/;"	f
fuf#buffer#onInit	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#onInit()$/;"	f
fuf#buffer#renewCache	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#renewCache()$/;"	f
fuf#buffer#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function fuf#buffer#requiresOnCommandPre()$/;"	f
fuf#buffertag#createHandler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#createHandler(base)$/;"	f
fuf#buffertag#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getEditableDataNames()$/;"	f
fuf#buffertag#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getSwitchOrder()$/;"	f
fuf#buffertag#onInit	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#onInit()$/;"	f
fuf#buffertag#renewCache	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#renewCache()$/;"	f
fuf#buffertag#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#requiresOnCommandPre()$/;"	f
fuf#callbackfile#createHandler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#createHandler(base)$/;"	f
fuf#callbackfile#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getEditableDataNames()$/;"	f
fuf#callbackfile#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getSwitchOrder()$/;"	f
fuf#callbackfile#launch	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#launch(initialPattern, partialMatching, prompt, exclude, listener)$/;"	f
fuf#callbackfile#onInit	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#onInit()$/;"	f
fuf#callbackfile#renewCache	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#renewCache()$/;"	f
fuf#callbackfile#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#requiresOnCommandPre()$/;"	f
fuf#callbackitem#createHandler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#createHandler(base)$/;"	f
fuf#callbackitem#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getEditableDataNames()$/;"	f
fuf#callbackitem#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getSwitchOrder()$/;"	f
fuf#callbackitem#launch	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#launch(initialPattern, partialMatching, prompt, listener, items, forPath)$/;"	f
fuf#callbackitem#onInit	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#onInit()$/;"	f
fuf#callbackitem#renewCache	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#renewCache()$/;"	f
fuf#callbackitem#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#requiresOnCommandPre()$/;"	f
fuf#changelist#createHandler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#createHandler(base)$/;"	f
fuf#changelist#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#getEditableDataNames()$/;"	f
fuf#changelist#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#getSwitchOrder()$/;"	f
fuf#changelist#onInit	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#onInit()$/;"	f
fuf#changelist#renewCache	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#renewCache()$/;"	f
fuf#changelist#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function fuf#changelist#requiresOnCommandPre()$/;"	f
fuf#compareRanks	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#compareRanks(i1, i2)$/;"	f
fuf#countModifiedFiles	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#countModifiedFiles(files, time)$/;"	f
fuf#coveragefile#createHandler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#createHandler(base)$/;"	f
fuf#coveragefile#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getEditableDataNames()$/;"	f
fuf#coveragefile#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getSwitchOrder()$/;"	f
fuf#coveragefile#onInit	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#onInit()$/;"	f
fuf#coveragefile#renewCache	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#renewCache()$/;"	f
fuf#coveragefile#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#requiresOnCommandPre()$/;"	f
fuf#defineKeyMappingInHandler	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#defineKeyMappingInHandler(key, func)$/;"	f
fuf#defineLaunchCommand	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#defineLaunchCommand(CmdName, modeName, prefixInitialPattern, tempVars)$/;"	f
fuf#dir#createHandler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#createHandler(base)$/;"	f
fuf#dir#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#getEditableDataNames()$/;"	f
fuf#dir#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#getSwitchOrder()$/;"	f
fuf#dir#onInit	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#onInit()$/;"	f
fuf#dir#renewCache	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#renewCache()$/;"	f
fuf#dir#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function fuf#dir#requiresOnCommandPre()$/;"	f
fuf#echoError	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#echoError(msg)$/;"	f
fuf#echoWarning	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#echoWarning(msg)$/;"	f
fuf#editDataFile	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#editDataFile()$/;"	f
fuf#enumExpandedDirsEntries	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#enumExpandedDirsEntries(dir, exclude)$/;"	f
fuf#expandTailDotSequenceToParentDir	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#expandTailDotSequenceToParentDir(pattern)$/;"	f
fuf#file#createHandler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#createHandler(base)$/;"	f
fuf#file#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#getEditableDataNames()$/;"	f
fuf#file#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#getSwitchOrder()$/;"	f
fuf#file#onInit	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#onInit()$/;"	f
fuf#file#renewCache	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#renewCache()$/;"	f
fuf#file#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function fuf#file#requiresOnCommandPre()$/;"	f
fuf#formatPrompt	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#formatPrompt(prompt, partialMatching, otherString)$/;"	f
fuf#getCurrentTagFiles	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getCurrentTagFiles()$/;"	f
fuf#getDataFileTime	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getDataFileTime(modeName, dataName)$/;"	f
fuf#getFileLines	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getFileLines(file)$/;"	f
fuf#getModeNames	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getModeNames()$/;"	f
fuf#getRunningHandler	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#getRunningHandler()$/;"	f
fuf#givencmd#createHandler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#createHandler(base)$/;"	f
fuf#givencmd#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getEditableDataNames()$/;"	f
fuf#givencmd#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getSwitchOrder()$/;"	f
fuf#givencmd#launch	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givencmd#onInit	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#onInit()$/;"	f
fuf#givencmd#renewCache	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#renewCache()$/;"	f
fuf#givencmd#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#requiresOnCommandPre()$/;"	f
fuf#givendir#createHandler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#createHandler(base)$/;"	f
fuf#givendir#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#getEditableDataNames()$/;"	f
fuf#givendir#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#getSwitchOrder()$/;"	f
fuf#givendir#launch	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givendir#onInit	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#onInit()$/;"	f
fuf#givendir#renewCache	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#renewCache()$/;"	f
fuf#givendir#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function fuf#givendir#requiresOnCommandPre()$/;"	f
fuf#givenfile#createHandler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#createHandler(base)$/;"	f
fuf#givenfile#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getEditableDataNames()$/;"	f
fuf#givenfile#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getSwitchOrder()$/;"	f
fuf#givenfile#launch	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givenfile#onInit	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#onInit()$/;"	f
fuf#givenfile#renewCache	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#renewCache()$/;"	f
fuf#givenfile#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#requiresOnCommandPre()$/;"	f
fuf#glob	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#glob(expr)$/;"	f
fuf#help#createHandler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#createHandler(base)$/;"	f
fuf#help#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#getEditableDataNames()$/;"	f
fuf#help#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#getSwitchOrder()$/;"	f
fuf#help#onInit	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#onInit()$/;"	f
fuf#help#renewCache	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#renewCache()$/;"	f
fuf#help#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function fuf#help#requiresOnCommandPre()$/;"	f
fuf#jumplist#createHandler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#createHandler(base)$/;"	f
fuf#jumplist#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getEditableDataNames()$/;"	f
fuf#jumplist#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getSwitchOrder()$/;"	f
fuf#jumplist#onInit	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#onInit()$/;"	f
fuf#jumplist#renewCache	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#renewCache()$/;"	f
fuf#jumplist#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#requiresOnCommandPre()$/;"	f
fuf#launch	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#launch(modeName, initialPattern, partialMatching)$/;"	f
fuf#line#createHandler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#createHandler(base)$/;"	f
fuf#line#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#getEditableDataNames()$/;"	f
fuf#line#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#getSwitchOrder()$/;"	f
fuf#line#onInit	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#onInit()$/;"	f
fuf#line#renewCache	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#renewCache()$/;"	f
fuf#line#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function fuf#line#requiresOnCommandPre()$/;"	f
fuf#loadDataFile	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#loadDataFile(modeName, dataName)$/;"	f
fuf#makeNonPathItem	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makeNonPathItem(word, menu)$/;"	f
fuf#makePathItem	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makePathItem(fname, menu, appendsDirSuffix)$/;"	f
fuf#makePatternSet	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makePatternSet(patternBase, interpreter, partialMatching)$/;"	f
fuf#makePreviewLinesAround	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makePreviewLinesAround(lines, indices, page, maxHeight)$/;"	f
fuf#makePreviewLinesForFile	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#makePreviewLinesForFile(file, count, maxHeight)$/;"	f
fuf#mapToSetAbbrWithSnippedWordAsPath	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#mapToSetAbbrWithSnippedWordAsPath(items)$/;"	f
fuf#mapToSetSerialIndex	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#mapToSetSerialIndex(in, offset)$/;"	f
fuf#mrucmd#createHandler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#createHandler(base)$/;"	f
fuf#mrucmd#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getEditableDataNames()$/;"	f
fuf#mrucmd#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getSwitchOrder()$/;"	f
fuf#mrucmd#onCommandPre	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onCommandPre(cmd)$/;"	f
fuf#mrucmd#onInit	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onInit()$/;"	f
fuf#mrucmd#renewCache	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#renewCache()$/;"	f
fuf#mrucmd#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#requiresOnCommandPre()$/;"	f
fuf#mrufile#createHandler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#createHandler(base)$/;"	f
fuf#mrufile#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getEditableDataNames()$/;"	f
fuf#mrufile#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getSwitchOrder()$/;"	f
fuf#mrufile#onInit	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#onInit()$/;"	f
fuf#mrufile#renewCache	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#renewCache()$/;"	f
fuf#mrufile#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#requiresOnCommandPre()$/;"	f
fuf#onComplete	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#onComplete(findstart, base)$/;"	f
fuf#openBuffer	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#openBuffer(bufNr, mode, reuse)$/;"	f
fuf#openFile	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#openFile(path, mode, reuse)$/;"	f
fuf#openHelp	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#openHelp(tag, mode)$/;"	f
fuf#openTag	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#openTag(tag, mode)$/;"	f
fuf#prejump	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#prejump(mode)$/;"	f
fuf#quickfix#createHandler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#createHandler(base)$/;"	f
fuf#quickfix#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getEditableDataNames()$/;"	f
fuf#quickfix#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getSwitchOrder()$/;"	f
fuf#quickfix#onInit	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#onInit()$/;"	f
fuf#quickfix#renewCache	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#renewCache()$/;"	f
fuf#quickfix#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#requiresOnCommandPre()$/;"	f
fuf#saveDataFile	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#saveDataFile(modeName, dataName, items)$/;"	f
fuf#setAbbrWithFormattedWord	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#setAbbrWithFormattedWord(item, abbrIndex)$/;"	f
fuf#setOneTimeVariables	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#setOneTimeVariables(...)$/;"	f
fuf#splitPath	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#splitPath(path)$/;"	f
fuf#suffixNumber	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#suffixNumber(str)$/;"	f
fuf#tag#createHandler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#createHandler(base)$/;"	f
fuf#tag#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#getEditableDataNames()$/;"	f
fuf#tag#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#getSwitchOrder()$/;"	f
fuf#tag#onInit	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#onInit()$/;"	f
fuf#tag#renewCache	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#renewCache()$/;"	f
fuf#tag#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function fuf#tag#requiresOnCommandPre()$/;"	f
fuf#taggedfile#createHandler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#createHandler(base)$/;"	f
fuf#taggedfile#getEditableDataNames	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getEditableDataNames()$/;"	f
fuf#taggedfile#getSwitchOrder	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getSwitchOrder()$/;"	f
fuf#taggedfile#onInit	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#onInit()$/;"	f
fuf#taggedfile#renewCache	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#renewCache()$/;"	f
fuf#taggedfile#requiresOnCommandPre	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#requiresOnCommandPre()$/;"	f
fuf#updateMruList	bundle/fuzzyfinder/autoload/fuf.vim	/^function fuf#updateMruList(mrulist, newItem, maxItem, exclude)$/;"	f
fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cwindow	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
funcref#Call	bundle/vim-addon-mw-utils/autoload/funcref.vim	/^function! funcref#Call(...)$/;"	f
funcref#Function	bundle/vim-addon-mw-utils/autoload/funcref.vim	/^function! funcref#Function(name,...)$/;"	f
function	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
g%	bundle/matchit/plugin/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	bundle/matchit/plugin/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	bundle/matchit/plugin/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:DISPATCH_STARTS	bundle/vim-dispatch/autoload/dispatch.vim	/^  let g:DISPATCH_STARTS = {}$/;"	v
g:JSLintHighlightErrorLine	bundle/jslint/ftplugin/javascript/jslint.vim	/^  let g:JSLintHighlightErrorLine = 1$/;"	v
g:NERDTreeAutoDeleteBuffer	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	bundle/git-nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapNextHunk	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapNextHunk = "]c"$/;"	v
g:NERDTreeMapPrevHunk	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapPrevHunk = "[c"$/;"	v
g:NERDTreeMenuController	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	bundle/git-nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeShowGitStatus	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeShowGitStatus = 1$/;"	v
g:NERDTreeSortOrder	bundle/git-nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/git-nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:NERDTreeUseGitToDelete	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUseGitToDelete = 1$/;"	v
g:NERDTreeUseGitToMove	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUseGitToMove = 1$/;"	v
g:NERDTreeUseSimpleIndicator	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUseSimpleIndicator = 0$/;"	v
g:SyntasticAutoloclistNotifier	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_START	bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_VERSION	bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.5.0-72'$/;"	v
g:airline#extensions#default#layout	bundle/vim-airline/t/extensions_default.vim	/^    let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	bundle/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#quickfix#location_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#windowswap#indicator_text	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette = {}$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_modified = copy(g:airline#themes#base16#palette.normal_modified)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_paste = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette = {}$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive_modified = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_modified = copy(g:airline#themes#bubblegum#palette.normal_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_paste = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal_modified = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#hybrid#palette	bundle/vim-airline/autoload/airline/themes/hybrid.vim	/^let g:airline#themes#hybrid#palette = {}$/;"	v
g:airline#themes#jellybeans#palette	bundle/vim-airline/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette = {}$/;"	v
g:airline#themes#kalisi#palette	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette = {}$/;"	v
g:airline#themes#kalisi#palette	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette = {}$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.accents = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace = copy(g:airline#themes#kolor#palette.insert)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace.airline_a = [ s:I2[0]   , '#005154' , s:I2[2] , 23      , ''     ]$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette = {}$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.accents = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_paste = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace = copy(airline#themes#laederon#palette.insert)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace_modified = g:airline#themes#laederon#palette.insert_modified$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette = {}$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_paste = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace = copy(g:airline#themes#light#palette.insert)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196     , ''     ]$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace_modified = g:airline#themes#light#palette.insert_modified$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual_modified = {$/;"	v
g:airline#themes#lucius#palette	bundle/vim-airline/autoload/airline/themes/lucius.vim	/^let g:airline#themes#lucius#palette = {}$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette = {}$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.accents = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_paste = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal.airline_warning = [$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace = copy(g:airline#themes#luna#palette.insert)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_a = [ s:I2[0]   , '#920000' , s:I2[2] , 88     , ''     ]$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified = g:airline#themes#luna#palette.insert_modified$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.tabline = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette = {}$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.accents = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace = copy(g:airline#themes#molokai#palette.insert)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace.airline_a = [ s:I1[0]   , '#ef5939' , s:I1[2] , 166     , ''     ]$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual_modified = {$/;"	v
g:airline#themes#monochrome#palette	bundle/vim-airline/autoload/airline/themes/monochrome.vim	/^let g:airline#themes#monochrome#palette = {}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette = {}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette = {}$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert_replace = {$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace = copy(airline#themes#powerlineish#palette.normal)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.visual = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette = {}$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.accents = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_paste = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal.airline_warning = [$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace = copy(g:airline#themes#raven#palette.insert)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_a = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_z = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified = g:airline#themes#raven#palette.insert_modified$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.tabline = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette = {}$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_paste = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal_modified = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette = {}$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.accents = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_paste = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal.airline_warning = [$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace = copy(g:airline#themes#silver#palette.insert)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_a = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_z = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified = g:airline#themes#silver#palette.insert_modified$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.tabline = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette = {}$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive_modified = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_paste = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal_modified = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette = {}$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.accents = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_paste = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal.airline_warning = [$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace = copy(g:airline#themes#sol#palette.insert)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_a = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_z = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified = g:airline#themes#sol#palette.insert_modified$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.tabline = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	bundle/vim-airline/autoload/airline/themes/solarized.vim	/^let g:airline#themes#solarized#palette = {}$/;"	v
g:airline#themes#tomorrow#palette	bundle/vim-airline/autoload/airline/themes/tomorrow.vim	/^let g:airline#themes#tomorrow#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.accents = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_paste = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace = copy(airline#themes#ubaryd#palette.insert)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace_modified = g:airline#themes#ubaryd#palette.insert_modified$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual_modified = {$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette = {}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.accents = {'red': ['#FF0000', '', 88, '']}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive_modified = {'airline_c': ['#4E4E4E', '', 239, '', 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_paste = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, ''] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal_modified = {'airline_c': ['#ffffff', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace.airline_a = ['#FFFFFF', '#870000', 15, 88, '']$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual_modified = {'airline_c': [ '#AFAF87', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette = {}$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.accents = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_paste = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual_modified = {$/;"	v
g:airline#themes#zenburn#palette	bundle/vim-airline/autoload/airline/themes/zenburn.vim	/^let g:airline#themes#zenburn#palette = {}$/;"	v
g:airline_inactive_collapse	bundle/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	bundle/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_section_	bundle/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	bundle/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_statusline_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	bundle/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	bundle/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-airline/t/extensions_default.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:autoclose_loaded	bundle/autoclose/plugin/autoclose.vim	/^let g:autoclose_loaded = 1$/;"	v
g:autoclose_on	bundle/autoclose/plugin/autoclose.vim	/^    let g:autoclose_on = 0$/;"	v
g:autoclose_on	bundle/autoclose/plugin/autoclose.vim	/^    let g:autoclose_on = 1$/;"	v
g:autoloaded_dispatch	bundle/vim-dispatch/autoload/dispatch.vim	/^let g:autoloaded_dispatch = 1$/;"	v
g:autoloaded_dispatch_headless	bundle/vim-dispatch/autoload/dispatch/headless.vim	/^let g:autoloaded_dispatch_headless = 1$/;"	v
g:autoloaded_dispatch_iterm	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^let g:autoloaded_dispatch_iterm = 1$/;"	v
g:autoloaded_dispatch_screen	bundle/vim-dispatch/autoload/dispatch/screen.vim	/^let g:autoloaded_dispatch_screen = 1$/;"	v
g:autoloaded_dispatch_tmux	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^let g:autoloaded_dispatch_tmux = 1$/;"	v
g:autoloaded_dispatch_windows	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^let g:autoloaded_dispatch_windows = 1$/;"	v
g:autoloaded_dispatch_x11	bundle/vim-dispatch/autoload/dispatch/x11.vim	/^let g:autoloaded_dispatch_x11 = 1$/;"	v
g:bar	bundle/tlib_vim/spec/tlib/var.vim	/^let g:bar = 2$/;"	v
g:bar	bundle/tlib_vim/test/tlib.vim	/^let g:bar = 2$/;"	v
g:candidates	bundle/neocomplete/vest/test-neocomplete.vim	/^    let g:candidates = []$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/BusyBee.vim	/^let g:colors_name = "BusyBee"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let g:colors_name = "Tomorrow-Night-Blue"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let g:colors_name = "Tomorrow-Night-Bright"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let g:colors_name = "Tomorrow-Night-Eighties"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let g:colors_name = "Tomorrow-Night"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let g:colors_name = "Tomorrow"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/blackdust.vim	/^let g:colors_name = "blackdust"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/bubblegum.vim	/^let g:colors_name="bubblegum"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/corporation.vim	/^let g:colors_name = "Vivify"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/espresso-soda.vim	/^let g:colors_name = "Espresso Soda"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/luna.vim	/^let g:colors_name = "luna"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/molokai-custom.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/peaksea.vim	/^let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/soda.vim	/^let g:colors_name = "Espresso Soda"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^let g:colors_name="summerfruit256"$/;"	v
g:colors_name	bundle/Zhoeon_colors/colors/tutticolori.vim	/^let g:colors_name = "tutticolori"$/;"	v
g:colors_name	bundle/Zhoeon_colors/hemisu.vim	/^let g:colors_name="hemisu"$/;"	v
g:count	bundle/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:dispatch_compilers	bundle/vim-dispatch/autoload/dispatch.vim	/^let g:dispatch_compilers = get(g:, 'dispatch_compilers', {})$/;"	v
g:dispatch_handlers	bundle/vim-dispatch/plugin/dispatch.vim	/^  let g:dispatch_handlers = [$/;"	v
g:foo	bundle/tlib_vim/spec/tlib/var.vim	/^let g:foo = 1$/;"	v
g:foo	bundle/tlib_vim/test/tlib.vim	/^let g:foo = 1$/;"	v
g:fugitive_browse_handlers	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:gitgutter_eager	bundle/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_eager = 0$/;"	v
g:gitgutter_realtime	bundle/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_realtime = 0$/;"	v
g:go_auto_type_info	bundle/vim-go/ftplugin/go.vim	/^    let g:go_auto_type_info = 0$/;"	v
g:go_def_mapping_enabled	bundle/vim-go/ftplugin/go.vim	/^    let g:go_def_mapping_enabled = 1$/;"	v
g:go_doc_command	bundle/vim-go/autoload/go/doc.vim	/^    let g:go_doc_command = "godoc"$/;"	v
g:go_doc_keywordprg_enabled	bundle/vim-go/ftplugin/go.vim	/^    let g:go_doc_keywordprg_enabled = 1$/;"	v
g:go_doc_options	bundle/vim-go/autoload/go/doc.vim	/^    let g:go_doc_options = ""$/;"	v
g:go_errcheck_bin	bundle/vim-go/autoload/go/errcheck.vim	/^    let g:go_errcheck_bin = "errcheck"$/;"	v
g:go_fmt_autosave	bundle/vim-go/ftplugin/go.vim	/^    let g:go_fmt_autosave = 1$/;"	v
g:go_fmt_command	bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_command = "gofmt"$/;"	v
g:go_fmt_fail_silently	bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_fail_silently = 0$/;"	v
g:go_fmt_options	bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_options = ''$/;"	v
g:go_gocode_bin	bundle/vim-go/autoload/go/complete.vim	/^    let g:go_gocode_bin = "gocode"$/;"	v
g:go_godef_bin	bundle/vim-go/autoload/go/def.vim	/^	let g:go_godef_bin = "godef"$/;"	v
g:go_goimports_bin	bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_goimports_bin = "goimports"$/;"	v
g:go_golint_bin	bundle/vim-go/autoload/go/lint.vim	/^    let g:go_golint_bin = "golint"$/;"	v
g:go_gorename_bin	bundle/vim-go/autoload/go/rename.vim	/^    let g:go_gorename_bin = "gorename"$/;"	v
g:go_gotags_bin	bundle/vim-go/ftplugin/go/tagbar.vim	/^	let g:go_gotags_bin = "gotags"$/;"	v
g:go_highlight_array_whitespace_error	bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 1$/;"	v
g:go_highlight_chan_whitespace_error	bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_extra_types	bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_functions	bundle/vim-go/syntax/go.vim	/^	let g:go_highlight_functions = 0$/;"	v
g:go_highlight_methods	bundle/vim-go/syntax/go.vim	/^	let g:go_highlight_methods = 0$/;"	v
g:go_highlight_operators	bundle/vim-go/syntax/go.vim	/^	let g:go_highlight_operators = 1$/;"	v
g:go_highlight_space_tab_error	bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 1$/;"	v
g:go_highlight_structs	bundle/vim-go/syntax/go.vim	/^	let g:go_highlight_structs = 0$/;"	v
g:go_highlight_trailing_whitespace_error	bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 1$/;"	v
g:go_jump_to_error	bundle/vim-go/autoload/go/cmd.vim	/^    let g:go_jump_to_error = 1$/;"	v
g:go_loaded_commands	bundle/vim-go/ftplugin/go/commands.vim	/^let g:go_loaded_commands = 1$/;"	v
g:go_loaded_gosnippets	bundle/vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	bundle/vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_oracle_bin	bundle/vim-go/autoload/go/oracle.vim	/^    let g:go_oracle_bin = "oracle"$/;"	v
g:go_play_open_browser	bundle/vim-go/autoload/go/play.vim	/^    let g:go_play_open_browser = 1$/;"	v
g:go_snippet_engine	bundle/vim-go/ftplugin/go/snippets.vim	/^	let g:go_snippet_engine = "ultisnips"$/;"	v
g:inkpot_black_background	bundle/Zhoeon_colors/colors/inkpot.vim	/^    let g:inkpot_black_background = 0$/;"	v
g:loaded_airline	bundle/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_autoload_l9	bundle/Vim-L9/autoload/l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
g:loaded_dispatch	bundle/vim-dispatch/plugin/dispatch.vim	/^let g:loaded_dispatch = 1$/;"	v
g:loaded_endwise	bundle/vim-endwise/plugin/endwise.vim	/^let g:loaded_endwise = 1$/;"	v
g:loaded_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	bundle/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_gocode	bundle/gocode/autoload/gocomplete.vim	/^let g:loaded_gocode = 1$/;"	v
g:loaded_neocomplete	bundle/neocomplete/plugin/neocomplete.vim	/^let g:loaded_neocomplete = 1$/;"	v
g:loaded_neocomplete_buffer	bundle/neocomplete/plugin/neocomplete/buffer.vim	/^let g:loaded_neocomplete_buffer = 1$/;"	v
g:loaded_neocomplete_dictionary	bundle/neocomplete/plugin/neocomplete/dictionary.vim	/^let g:loaded_neocomplete_dictionary = 1$/;"	v
g:loaded_neocomplete_include	bundle/neocomplete/plugin/neocomplete/include.vim	/^let g:loaded_neocomplete_include = 1$/;"	v
g:loaded_neocomplete_syntax	bundle/neocomplete/plugin/neocomplete/syntax.vim	/^let g:loaded_neocomplete_syntax = 1$/;"	v
g:loaded_neocomplete_tag	bundle/neocomplete/plugin/neocomplete/tag.vim	/^let g:loaded_neocomplete_tag = 1$/;"	v
g:loaded_neosnippet	bundle/neosnippet/plugin/neosnippet.vim	/^let g:loaded_neosnippet = 1$/;"	v
g:loaded_nerdtree_autoload	bundle/git-nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/git-nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_status	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_surround	bundle/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_arduino_avrgcc_checker	bundle/syntastic/syntax_checkers/arduino/avrgcc.vim	/^let g:loaded_syntastic_arduino_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	bundle/syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	bundle/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	bundle/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	bundle/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	bundle/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	bundle/syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	bundle/syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	bundle/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	bundle/syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	bundle/syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker=1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	bundle/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	bundle/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	bundle/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	bundle/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	bundle/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	bundle/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	bundle/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	bundle/syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	bundle/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	bundle/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_modemap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	bundle/syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	bundle/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	bundle/syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_plugin	bundle/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	bundle/syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	bundle/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	bundle/syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	bundle/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	bundle/syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	bundle/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	bundle/syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	bundle/syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	bundle/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	bundle/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	bundle/syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	bundle/syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	bundle/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	bundle/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	bundle/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_shellcheck_checker	bundle/syntastic/syntax_checkers/zsh/shellcheck.vim	/^let g:loaded_syntastic_zsh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_togglebg	bundle/colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:loaded_vinegar	bundle/vim-vinegar/plugin/vinegar.vim	/^let g:loaded_vinegar = 1$/;"	v
g:neocomplete#auto_completion_start_length	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#auto_completion_start_length =$/;"	v
g:neocomplete#ctags_arguments	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#ctags_arguments =$/;"	v
g:neocomplete#ctags_command	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#ctags_command =$/;"	v
g:neocomplete#cursor_hold_i_time	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#cursor_hold_i_time =$/;"	v
g:neocomplete#delimiter_patterns	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#delimiter_patterns =$/;"	v
g:neocomplete#disable_auto_complete	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#disable_auto_complete =$/;"	v
g:neocomplete#enable_auto_close_preview	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_close_preview =$/;"	v
g:neocomplete#enable_auto_delimiter	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_delimiter =$/;"	v
g:neocomplete#enable_auto_select	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_select =$/;"	v
g:neocomplete#enable_camel_case	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_camel_case =$/;"	v
g:neocomplete#enable_cursor_hold_i	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_cursor_hold_i =$/;"	v
g:neocomplete#enable_debug	bundle/neocomplete/plugin/neocomplete.vim	/^let g:neocomplete#enable_debug =$/;"	v
g:neocomplete#enable_fuzzy_completion	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_fuzzy_completion =$/;"	v
g:neocomplete#enable_ignore_case	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_ignore_case =$/;"	v
g:neocomplete#enable_insert_char_pre	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_insert_char_pre =$/;"	v
g:neocomplete#enable_prefetch	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_prefetch =$/;"	v
g:neocomplete#enable_refresh_always	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_refresh_always =$/;"	v
g:neocomplete#enable_smart_case	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_smart_case =$/;"	v
g:neocomplete#fallback_mappings	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#fallback_mappings =$/;"	v
g:neocomplete#force_omni_input_patterns	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#force_omni_input_patterns =$/;"	v
g:neocomplete#force_overwrite_completefunc	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#force_overwrite_completefunc =$/;"	v
g:neocomplete#ignore_composite_filetypes	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#ignore_composite_filetypes =$/;"	v
g:neocomplete#ignore_source_files	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#ignore_source_files =$/;"	v
g:neocomplete#keyword_patterns	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#keyword_patterns =$/;"	v
g:neocomplete#lock_buffer_name_pattern	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#lock_buffer_name_pattern =$/;"	v
g:neocomplete#lock_iminsert	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#lock_iminsert =$/;"	v
g:neocomplete#manual_completion_start_length	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#manual_completion_start_length =$/;"	v
g:neocomplete#max_keyword_width	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#max_keyword_width =$/;"	v
g:neocomplete#max_list	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#max_list =$/;"	v
g:neocomplete#min_keyword_length	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#min_keyword_length =$/;"	v
g:neocomplete#release_cache_time	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#release_cache_time =$/;"	v
g:neocomplete#same_filetypes	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#same_filetypes =$/;"	v
g:neocomplete#skip_auto_completion_time	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#skip_auto_completion_time =$/;"	v
g:neocomplete#sources	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#sources =$/;"	v
g:neocomplete#sources#buffer#cache_limit_size	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#cache_limit_size =$/;"	v
g:neocomplete#sources#buffer#disabled_pattern	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#disabled_pattern =$/;"	v
g:neocomplete#sources#buffer#max_keyword_width	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#max_keyword_width =$/;"	v
g:neocomplete#sources#dictionary#dictionaries	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let g:neocomplete#sources#dictionary#dictionaries =$/;"	v
g:neocomplete#sources#file_include#delimiters	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^let g:neocomplete#sources#file_include#delimiters =$/;"	v
g:neocomplete#sources#file_include#exprs	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^let g:neocomplete#sources#file_include#exprs =$/;"	v
g:neocomplete#sources#file_include#exts	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^let g:neocomplete#sources#file_include#exts =$/;"	v
g:neocomplete#sources#include#exprs	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^let g:neocomplete#sources#include#exprs =$/;"	v
g:neocomplete#sources#include#functions	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^let g:neocomplete#sources#include#functions =$/;"	v
g:neocomplete#sources#include#max_processes	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^let g:neocomplete#sources#include#max_processes =$/;"	v
g:neocomplete#sources#include#paths	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^let g:neocomplete#sources#include#paths =$/;"	v
g:neocomplete#sources#include#patterns	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^let g:neocomplete#sources#include#patterns =$/;"	v
g:neocomplete#sources#include#suffixes	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^let g:neocomplete#sources#include#suffixes =$/;"	v
g:neocomplete#sources#member#input_patterns	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^let g:neocomplete#sources#member#input_patterns =$/;"	v
g:neocomplete#sources#member#prefix_patterns	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^let g:neocomplete#sources#member#prefix_patterns =$/;"	v
g:neocomplete#sources#omni#functions	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let g:neocomplete#sources#omni#functions =$/;"	v
g:neocomplete#sources#omni#input_patterns	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let g:neocomplete#sources#omni#input_patterns =$/;"	v
g:neocomplete#sources#syntax#min_keyword_length	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^let g:neocomplete#sources#syntax#min_keyword_length =$/;"	v
g:neocomplete#sources#vim#complete_functions	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^let g:neocomplete#sources#vim#complete_functions =$/;"	v
g:neocomplete#tags_filter_patterns	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#tags_filter_patterns =$/;"	v
g:neocomplete#text_mode_filetypes	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#text_mode_filetypes =$/;"	v
g:netrw_banner	bundle/vim-vinegar/plugin/vinegar.vim	/^let g:netrw_banner = 0$/;"	v
g:netrw_list_hide	bundle/vim-vinegar/plugin/vinegar.vim	/^let g:netrw_list_hide =$/;"	v
g:netrw_sort_sequence	bundle/vim-vinegar/plugin/vinegar.vim	/^let g:netrw_sort_sequence = '[\\\/]$,*,\\%(' . join(map(split(&suffixes, ','), 'escape(v:val, ".*$~")'), '\\|') . '\\)[*@]\\=$'$/;"	v
g:snipMate	bundle/vim-snipmate/autoload/snipMate.vim	/^  let g:snipMate = {}$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate = {}$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.cpp =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.cu =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.eruby =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.html =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.less =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.mxml =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.objc =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.php =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.scss =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.ur =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snipMate.scope_aliases.xhtml =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate.scope_aliases = get(g:snipMate, 'scope_aliases', {})$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate['get_scopes'] = get(g:snipMate, 'get_scopes', funcref#Function('return split(&ft,"\\\\.")+[&syntax, "_"]'))$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate['get_snippets'] = get(g:snipMate, 'get_snippets', funcref#Function("snipMate#GetSnippets"))$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate['no_match_completion_feedkeys_chars'] =$/;"	v
g:snipMate	bundle/vim-snipmate/plugin/snipMate.vim	/^let g:snipMate['snippet_dirs'] = get(g:snipMate, 'snippet_dirs', funcref#Function('return split(&runtimepath,",")'))$/;"	v
g:snipMateSources	bundle/vim-snipmate/plugin/snipMate.vim	/^  let g:snipMateSources = {}$/;"	v
g:snipMateSources	bundle/vim-snipmate/plugin/snipMate.vim	/^  let g:snipMateSources['default'] = funcref#Function('snipMate#DefaultPool')$/;"	v
g:snips_author	bundle/vim-snipmate/plugin/snipMate.vim	/^	let g:snips_author = 'Me'$/;"	v
g:solarized_bold	bundle/colors-solarized/colors/solarized.vim	/^    let g:solarized_bold = 1$/;"	v
g:solarized_contrast	bundle/colors-solarized/colors/solarized.vim	/^    let g:solarized_contrast = "normal"$/;"	v
g:solarized_degrade	bundle/colors-solarized/colors/solarized.vim	/^    let g:solarized_degrade = 0$/;"	v
g:solarized_italic	bundle/colors-solarized/colors/solarized.vim	/^    let g:solarized_italic = 1$/;"	v
g:solarized_termcolors	bundle/colors-solarized/colors/solarized.vim	/^    let g:solarized_termcolors = 16$/;"	v
g:solarized_termtrans	bundle/colors-solarized/colors/solarized.vim	/^        let g:solarized_termtrans = 0$/;"	v
g:solarized_termtrans	bundle/colors-solarized/colors/solarized.vim	/^        let g:solarized_termtrans = 1$/;"	v
g:solarized_underline	bundle/colors-solarized/colors/solarized.vim	/^    let g:solarized_underline = 1$/;"	v
g:solarized_visibility	bundle/colors-solarized/colors/solarized.vim	/^    let g:solarized_visibility = "normal"$/;"	v
g:spec_tlib_list	bundle/tlib_vim/spec/tlib/input.vim	/^let g:spec_tlib_list = [10, 20, 30, 40, 'a50', 'aa60', 'b70', 'ba80', 90]$/;"	v
g:start	bundle/neocomplete/vest/test-neocomplete.vim	/^    let g:start = reltime()$/;"	v
g:syntastic_	bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_ada_compiler_options	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_asm_compiler_options	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_avrgcc_config_file	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^    let g:syntastic_avrgcc_config_file = '.syntastic_avrgcc_config'$/;"	v
g:syntastic_c_clang_check_sort	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler_options	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_oclint_sort	bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_clang_check_config_file	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_clang_check_config_file = '.syntastic_clang_check_config'$/;"	v
g:syntastic_clang_tidy_config_file	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_clang_tidy_config_file = '.syntastic_clang_tidy_config'$/;"	v
g:syntastic_cobol_compiler_options	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler_options	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cppcheck_config_file	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_css_prettycss_sort	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler_options	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_erlc_include_path	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_fortran_compiler_options	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_haskell_scan_sort	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'http:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	bundle/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_java_checkstyle_classpath	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-5.5-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_temp_dir = syntastic#util#tmpdir()$/;"	v
g:syntastic_java_maven_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_eslint_sort	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_less_options	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = ""$/;"	v
g:syntastic_less_use_less_lint	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_objc_compiler_options	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler_options	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_janestreet_core	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_pc_lint_config_file	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^    let g:syntastic_pc_lint_config_file = 'options.lnt'$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	bundle/syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	bundle/syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	bundle/syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_quiet_messages	bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	bundle/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	bundle/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_svtools_styles	bundle/syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_sass_check_partials	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_sparse_config_file	bundle/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	bundle/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_tex_chktex_showmsgs	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_typescript_tsc_sort	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^    let g:syntastic_typescript_tsc_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verilog_compiler_options	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tcomment#blank_lines	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#blank_lines = 2    "{{{2$/;"	v
g:tcomment#filetype_map	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#filetype_map = {$/;"	v
g:tcomment#ignore_char_type	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
g:tcomment#ignore_comment_def	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#ignore_comment_def = []   "{{{2$/;"	v
g:tcomment#must_escape_expression_backslash	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#must_escape_expression_backslash = 0   "{{{2$/;"	v
g:tcomment#options_comments	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#options_comments = {'whitespace': get(g:tcommentOptions, 'whitespace', 'both')}   "{{{2$/;"	v
g:tcomment#options_commentstring	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#options_commentstring = {'whitespace': get(g:tcommentOptions, 'whitespace', 'both')}   "{{{2$/;"	v
g:tcomment#replacements_c	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
g:tcomment#replacements_xml	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_xml = {$/;"	v
g:tcomment#rstrip_on_uncomment	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#rstrip_on_uncomment = 1   "{{{2$/;"	v
g:tcomment#syntax_substitute	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#syntax_substitute = {$/;"	v
g:tcommentBlockC	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockC = {$/;"	v
g:tcommentBlockC2	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockC2 = {$/;"	v
g:tcommentBlockXML	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockXML = {$/;"	v
g:tcommentGuessFileType	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType = 0   "{{{2$/;"	v
g:tcommentGuessFileType_blade	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_blade = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_django	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_django = 1   "{{{2$/;"	v
g:tcommentGuessFileType_dsl	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'   "{{{2$/;"	v
g:tcommentGuessFileType_eruby	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_eruby = 1   "{{{2$/;"	v
g:tcommentGuessFileType_html	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_html = 1   "{{{2$/;"	v
g:tcommentGuessFileType_php	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_php = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_smarty	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_smarty = 1   "{{{2$/;"	v
g:tcommentGuessFileType_tskeleton	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1   "{{{2$/;"	v
g:tcommentGuessFileType_vim	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_vim = 1   "{{{2$/;"	v
g:tcommentIgnoreTypes_php	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'   "{{{2$/;"	v
g:tcommentInlineC	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentInlineC = {$/;"	v
g:tcommentInlineXML	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentInlineXML = {$/;"	v
g:tcommentLineC	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentLineC = g:tcommentInlineC$/;"	v
g:tcommentMapLeader1	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeader1 = '<c-_>' "{{{2$/;"	v
g:tcommentMapLeader2	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_' "{{{2$/;"	v
g:tcommentMapLeaderCommentAnyway	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderCommentAnyway = 'g>' "{{{2$/;"	v
g:tcommentMapLeaderOp1	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc' "{{{2$/;"	v
g:tcommentMapLeaderUncommentAnyway	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderUncommentAnyway = 'g<' "{{{2$/;"	v
g:tcommentMaps	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMaps = 1   "{{{2$/;"	v
g:tcommentModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentModeExtra = ''   "{{{2$/;"	v
g:tcommentOpModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentOpModeExtra = ''   "{{{2$/;"	v
g:tcommentOptions	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentOptions = {}   "{{{2$/;"	v
g:tcommentSyntaxMap	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:tcommentTextObjectInlineComment	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentTextObjectInlineComment = 'ic'   "{{{2$/;"	v
g:tlib#cmd#last_output	bundle/tlib_vim/autoload/tlib/cmd.vim	/^let g:tlib#cmd#last_output = []$/;"	v
g:tlib#date#dayshift	bundle/tlib_vim/autoload/tlib/date.vim	/^let g:tlib#date#dayshift = 60 * 60 * 24$/;"	v
g:tlib#hash#use_adler32	bundle/tlib_vim/autoload/tlib/hash.vim	/^    let g:tlib#hash#use_adler32 = ''   "{{{2$/;"	v
g:tlib#hash#use_crc32	bundle/tlib_vim/autoload/tlib/hash.vim	/^    let g:tlib#hash#use_crc32 = ''   "{{{2$/;"	v
g:tlib#hash#use_crc32	bundle/tlib_vim/spec/tlib/hash.vim	/^let g:tlib#hash#use_crc32 = 'ruby'$/;"	v
g:tlib#hash#use_crc32	bundle/tlib_vim/spec/tlib/hash.vim	/^let g:tlib#hash#use_crc32 = 'vim'$/;"	v
g:tlib#hash#use_crc32	bundle/tlib_vim/spec/tlib/hash.vim	/^let g:tlib#hash#use_crc32 = g:tlib_hash_use_crc32$/;"	v
g:tlib#sys#check_cygpath	bundle/tlib_vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#check_cygpath = g:tlib#sys#windows && tlib#sys#IsExecutable('cygpath')   "{{{2$/;"	v
g:tlib#sys#cygwin_expr	bundle/tlib_vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#cygwin_expr = '"bash -c ''". escape(%s, "''\\\\") ."''"'   "{{{2$/;"	v
g:tlib#sys#cygwin_path_rx	bundle/tlib_vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#cygwin_path_rx = '\/cygwin\/'   "{{{2$/;"	v
g:tlib#sys#null	bundle/tlib_vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#null = g:tlib#sys#windows ? 'NUL' : (filereadable('\/dev\/null') ? '\/dev\/null' : '')    "{{{2$/;"	v
g:tlib#sys#windows	bundle/tlib_vim/autoload/tlib/sys.vim	/^    let g:tlib#sys#windows = &shell !~ 'sh' && (has('win16') || has('win32') || has('win64'))   "{{{2$/;"	v
g:tlib#vcs#executables	bundle/tlib_vim/autoload/tlib/vcs.vim	/^            let g:tlib#vcs#executables[s:cmd] = executable(s:cmd1) ? s:cmd1 : ''$/;"	v
g:tlib#vim#simalt_maximize	bundle/tlib_vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#simalt_maximize = 'x'   "{{{2$/;"	v
g:tlib#vim#simalt_restore	bundle/tlib_vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#simalt_restore = 'r'   "{{{2$/;"	v
g:tlib#vim#use_vimtweak	bundle/tlib_vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#use_vimtweak = 0   "{{{2$/;"	v
g:tlib#vim#use_wmctrl	bundle/tlib_vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#use_wmctrl = executable('wmctrl')  "{{{2$/;"	v
g:tlib_hash_use_crc32	bundle/tlib_vim/spec/tlib/hash.vim	/^let g:tlib_hash_use_crc32 = g:tlib#hash#use_crc32$/;"	v
gd	bundle/vim-go/ftplugin/go.vim	/^   nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
getBufIndicator	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:getBufIndicator(bufNr)$/;"	f
getChangesLines	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:getChangesLines()$/;"	f
getCurrentHelpTagFiles	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getCurrentHelpTagFiles()$/;"	f
getEditableDataFiles	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getEditableDataFiles(modeName)$/;"	f
getFileType	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getFileType(bufNr)$/;"	f
getHelpTagEntries	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getHelpTagEntries(tagFile)$/;"	f
getJumpsLines	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:getJumpsLines()$/;"	f
getJumpsLines	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:getJumpsLines()$/;"	f
getLastBlockLength	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getLastBlockLength(pattern, patternIsPath)$/;"	f
getLinePattern	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:getLinePattern(lnum)$/;"	f
getMatchingIndex	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getMatchingIndex(lines, pattern)$/;"	f
getMatchingIndex	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:getMatchingIndex(lines, cmd)$/;"	f
getMatchingLineNumber	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:getMatchingLineNumber(lines, pattern, lnumBegin)$/;"	f
getOffset	bundle/vim-go/autoload/go/def.vim	/^function! s:getOffset()$/;"	f
getSnippedHead	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getSnippedHead(head, baseLen)$/;"	f
getTagData	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getTagData(bufNrs)$/;"	f
getTagItems	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getTagItems(bufNr)$/;"	f
getTagNames	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:getTagNames(tagFile)$/;"	f
getTaggedFileList	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:getTaggedFileList(tagfile)$/;"	f
getWordBoundaries	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getWordBoundaries(word)$/;"	f
get_airline_themes	bundle/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
get_array	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
get_augrouplist	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_augrouplist() "{{{$/;"	f
get_browser_command	bundle/vim-go/autoload/go/play.vim	/^function! s:get_browser_command()$/;"	f
get_browser_command	bundle/vim-go/autoload/go/tool.vim	/^function! s:get_browser_command()$/;"	f
get_buffer_include_files	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:get_buffer_include_files(bufnumber) "{{{$/;"	f
get_buffer_list	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_buffer_list()$/;"	f
get_buffers	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_buffers()$/;"	f
get_cached_script_candidates	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_cached_script_candidates() "{{{$/;"	f
get_candidates	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) "{{{$/;"	f
get_cmdlist	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_cmdlist() "{{{$/;"	f
get_color_variables	bundle/promptline/autoload/promptline.vim	/^fun! s:get_color_variables( theme, preset )$/;"	f
get_complete_pos	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_complete_pos(complete_results) "{{{$/;"	f
get_convert_candidates	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! s:get_convert_candidates(candidates)$/;"	f
get_default_include_files	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^function! s:get_default_include_files(filetype) "{{{$/;"	f
get_envlist	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_envlist() "{{{$/;"	f
get_function_definitions	bundle/promptline/autoload/promptline.vim	/^fun! s:get_function_definitions(prompt)$/;"	f
get_functionlist	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_functionlist() "{{{$/;"	f
get_git_branch	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:get_git_branch(path)$/;"	f
get_glob_files	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:get_glob_files(complete_str, path) "{{{$/;"	f
get_hunks	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks()$/;"	f
get_hunks_changes	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes()$/;"	f
get_hunks_empty	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty()$/;"	f
get_hunks_gitgutter	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter()$/;"	f
get_hunks_signify	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify()$/;"	f
get_include_files	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^function! s:get_include_files() "{{{$/;"	f
get_include_files	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:get_include_files(nestlevel, lines, filetype, pattern, path, expr) "{{{$/;"	f
get_keyword_pos	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^function! s:get_keyword_pos(cur_text) "{{{$/;"	f
get_last_status	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:get_last_status()$/;"	f
get_last_status	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^function! s:get_last_status()$/;"	f
get_list	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:get_list() "{{{$/;"	f
get_list	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! s:get_list() "{{{$/;"	f
get_list	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! s:get_list() "{{{$/;"	f
get_local_variables	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_local_variables() "{{{$/;"	f
get_map_str	bundle/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_mappinglist	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_mappinglist() "{{{$/;"	f
get_member_list	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_member_list(cur_text, var_name) "{{{$/;"	f
get_member_pattern	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_member_pattern(filetype) "{{{$/;"	f
get_omni_funcs	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_omni_funcs(filetype) "{{{$/;"	f
get_omni_list	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_omni_list(list) "{{{$/;"	f
get_prelude	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_prelude	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_process	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:get_process() "{{{$/;"	f
get_process	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! s:get_process() "{{{$/;"	f
get_prompt_installation	bundle/promptline/autoload/promptline.vim	/^fun! s:get_prompt_installation()$/;"	f
get_prompt_variables_installation	bundle/promptline/autoload/promptline.vim	/^fun! s:get_prompt_variables_installation(prompt)$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_script_candidates	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_script_candidates(bufnumber) "{{{$/;"	f
get_section	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
get_shell_escape_codes	bundle/promptline/autoload/promptline.vim	/^fun! s:get_shell_escape_codes()$/;"	f
get_slice_modifiers	bundle/promptline/autoload/promptline/sections.vim	/^fun! s:get_slice_modifiers(section_name, is_left_section)$/;"	f
get_snippet_candidates	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:get_snippet_candidates(dirs) "{{{$/;"	f
get_sources_filetypes	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! s:get_sources_filetypes(filetype) "{{{$/;"	f
get_sources_list	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_sources_list	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_string	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:get_string() "{{{$/;"	f
get_symbol_definitions	bundle/promptline/autoload/promptline.vim	/^fun! s:get_symbol_definitions()$/;"	f
get_syn	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
get_tabs	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_tabs()$/;"	f
get_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! s:get_text()$/;"	f
get_text_attribute_modifiers	bundle/promptline/autoload/promptline.vim	/^fun! s:get_text_attribute_modifiers()$/;"	f
get_variable_type	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_variable_type(expression) "{{{$/;"	f
get_variablelist	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:get_variablelist(dict, prefix) "{{{$/;"	f
get_visible_buffers	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:get_visible_buffers()$/;"	f
get_visual_content	bundle/vim-go/autoload/go/play.vim	/^function! s:get_visual_content()$/;"	f
get_visual_selection	bundle/vim-go/autoload/go/play.vim	/^function! s:get_visual_selection()$/;"	f
getchar	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	bundle/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getchar_safe	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getfilename	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
getfilename	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
getpos	bundle/vim-go/autoload/go/oracle.vim	/^func! s:getpos(l, c)$/;"	f
getpos	bundle/vim-go/autoload/go/rename.vim	/^func! s:getpos(l, c)$/;"	f
gettime	bundle/tagbar/autoload/tagbar.vim	/^    function! s:gettime() abort$/;"	f
gitgutter	bundle/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all()$/;"	f
gitgutter#debug#debug	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#git_version	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#git_version()$/;"	f
gitgutter#debug#option	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#option(name)$/;"	f
gitgutter#debug#output	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#output(text)$/;"	f
gitgutter#debug#separator	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#separator()$/;"	f
gitgutter#debug#vim_version	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#vim_version()$/;"	f
gitgutter#diff#discard_hunks	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#discard_hunks(diff, keep_header)$/;"	f
gitgutter#diff#generate_diff_for_hunk	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#generate_diff_for_hunk(keep_header, lines_of_context)$/;"	f
gitgutter#diff#is_added	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_added(from_count, to_count)$/;"	f
gitgutter#diff#is_modified	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified(from_count, to_count)$/;"	f
gitgutter#diff#is_modified_and_added	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_added(from_count, to_count)$/;"	f
gitgutter#diff#is_modified_and_removed	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_removed(from_count, to_count)$/;"	f
gitgutter#diff#is_removed	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_removed(from_count, to_count)$/;"	f
gitgutter#diff#parse_diff	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff)$/;"	f
gitgutter#diff#parse_hunk	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line)$/;"	f
gitgutter#diff#process_added	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_added(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_hunk	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunk(hunk)$/;"	f
gitgutter#diff#process_hunks	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(hunks)$/;"	f
gitgutter#diff#process_modified	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_modified_and_added	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_added(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_modified_and_removed	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_removed(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_removed	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_removed(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#run_diff	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(realtime, use_external_grep, lines_of_context)$/;"	f
gitgutter#disable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable()$/;"	f
gitgutter#enable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable()$/;"	f
gitgutter#highlight#define_highlights	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights()$/;"	f
gitgutter#highlight#define_sign_column_highlight	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight()$/;"	f
gitgutter#highlight#define_sign_line_highlights	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_line_highlights()$/;"	f
gitgutter#highlight#define_sign_text	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text()$/;"	f
gitgutter#highlight#define_sign_text_highlights	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights()$/;"	f
gitgutter#highlight#define_signs	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs()$/;"	f
gitgutter#highlight#get_background_colors	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#get_background_colors(group)$/;"	f
gitgutter#highlight#match_highlight	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#match_highlight(highlight, pattern)$/;"	f
gitgutter#hunk#current_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#current_hunk()$/;"	f
gitgutter#hunk#cursor_in_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk)$/;"	f
gitgutter#hunk#hunks	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks()$/;"	f
gitgutter#hunk#increment_lines_added	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(count)$/;"	f
gitgutter#hunk#increment_lines_modified	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(count)$/;"	f
gitgutter#hunk#increment_lines_removed	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(count)$/;"	f
gitgutter#hunk#next_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count)$/;"	f
gitgutter#hunk#prev_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count)$/;"	f
gitgutter#hunk#reset	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset()$/;"	f
gitgutter#hunk#set_hunks	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(hunks)$/;"	f
gitgutter#hunk#summary	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary()$/;"	f
gitgutter#line_highlights_disable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_disable()$/;"	f
gitgutter#line_highlights_enable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_enable()$/;"	f
gitgutter#line_highlights_toggle	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_toggle()$/;"	f
gitgutter#preview_hunk	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#preview_hunk()$/;"	f
gitgutter#process_buffer	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(file, realtime)$/;"	f
gitgutter#revert_hunk	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#revert_hunk()$/;"	f
gitgutter#sign#add_dummy_sign	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#add_dummy_sign()$/;"	f
gitgutter#sign#clear_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(file_name)$/;"	f
gitgutter#sign#find_current_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#find_current_signs(file_name)$/;"	f
gitgutter#sign#next_sign_id	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#next_sign_id()$/;"	f
gitgutter#sign#obsolete_gitgutter_signs_to_remove	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#obsolete_gitgutter_signs_to_remove(file_name, new_gitgutter_signs_line_numbers)$/;"	f
gitgutter#sign#remove_dummy_sign	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(force)$/;"	f
gitgutter#sign#remove_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_signs(sign_ids, file_name, all_signs)$/;"	f
gitgutter#sign#update_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(file_name, modified_lines)$/;"	f
gitgutter#sign#upsert_new_gitgutter_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#upsert_new_gitgutter_signs(file_name, modified_lines)$/;"	f
gitgutter#signs_disable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_disable()$/;"	f
gitgutter#signs_enable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_enable()$/;"	f
gitgutter#signs_toggle	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_toggle()$/;"	f
gitgutter#stage_hunk	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#stage_hunk()$/;"	f
gitgutter#toggle	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle()$/;"	f
gitgutter#utility#buffer_contents	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#buffer_contents()$/;"	f
gitgutter#utility#command_in_directory_of_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#command_in_directory_of_file(cmd)$/;"	f
gitgutter#utility#current_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#current_file()$/;"	f
gitgutter#utility#directory_of_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#directory_of_file()$/;"	f
gitgutter#utility#exists_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#exists_file()$/;"	f
gitgutter#utility#file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file()$/;"	f
gitgutter#utility#file_relative_to_repo_root	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file_relative_to_repo_root()$/;"	f
gitgutter#utility#filename	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#filename()$/;"	f
gitgutter#utility#has_fresh_changes	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_fresh_changes(file)$/;"	f
gitgutter#utility#has_unsaved_changes	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_unsaved_changes(file)$/;"	f
gitgutter#utility#highlight_name_for_change	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#highlight_name_for_change(text)$/;"	f
gitgutter#utility#is_active	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active()$/;"	f
gitgutter#utility#save_last_seen_change	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#save_last_seen_change(file)$/;"	f
gitgutter#utility#set_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_file(file)$/;"	f
gitgutter#utility#shell_error	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shell_error()$/;"	f
gitgutter#utility#shellescape	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg)$/;"	f
gitgutter#utility#strip_trailing_new_line	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#strip_trailing_new_line(line)$/;"	f
gitgutter#utility#system	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...)$/;"	f
gitgutter#utility#using_xolox_shell	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#using_xolox_shell()$/;"	f
gitgutter#utility#warn	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message)$/;"	f
github_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
glob	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:glob(expr)$/;"	f
glob	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:glob(expr)$/;"	f
glob#Glob	bundle/vim-addon-mw-utils/autoload/glob.vim	/^fun! glob#Glob(pattern, ...)$/;"	f
globpath	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:globpath(path, expr)$/;"	f
globpath	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:globpath(path, expr)$/;"	f
go#cmd#Build	bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang)$/;"	f
go#cmd#Coverage	bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Coverage(...)$/;"	f
go#cmd#Install	bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(...)$/;"	f
go#cmd#Run	bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...)$/;"	f
go#cmd#Test	bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Test(...)$/;"	f
go#cmd#Vet	bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Vet()$/;"	f
go#complete#Complete	bundle/vim-go/autoload/go/complete.vim	/^fu! go#complete#Complete(findstart, base)$/;"	f
go#complete#GetInfo	bundle/vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo()$/;"	f
go#complete#Info	bundle/vim-go/autoload/go/complete.vim	/^function! go#complete#Info()$/;"	f
go#def#Jump	bundle/vim-go/autoload/go/def.vim	/^function! go#def#Jump(...)$/;"	f
go#def#JumpMode	bundle/vim-go/autoload/go/def.vim	/^function! go#def#JumpMode(mode)$/;"	f
go#doc#Open	bundle/vim-go/autoload/go/doc.vim	/^function! go#doc#Open(mode, ...)$/;"	f
go#doc#OpenBrowser	bundle/vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...)$/;"	f
go#errcheck#Run	bundle/vim-go/autoload/go/errcheck.vim	/^function! go#errcheck#Run() abort$/;"	f
go#fmt#Format	bundle/vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport)$/;"	f
go#import#SwitchImport	bundle/vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path)$/;"	f
go#lint#Run	bundle/vim-go/autoload/go/lint.vim	/^function! go#lint#Run() abort$/;"	f
go#oracle#Callees	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callees(selected)$/;"	f
go#oracle#Callers	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callers(selected)$/;"	f
go#oracle#Callgraph	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callgraph(selected)$/;"	f
go#oracle#Callstack	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callstack(selected)$/;"	f
go#oracle#Describe	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Describe(selected)$/;"	f
go#oracle#Freevars	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Freevars(selected)$/;"	f
go#oracle#Implements	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Implements(selected)$/;"	f
go#oracle#Peers	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Peers(selected)$/;"	f
go#oracle#Referrers	bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Referrers(selected)$/;"	f
go#package#Complete	bundle/vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos)$/;"	f
go#package#CompleteMembers	bundle/vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member)$/;"	f
go#package#FromPath	bundle/vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg)$/;"	f
go#package#ImportPath	bundle/vim-go/autoload/go/package.vim	/^function! go#package#ImportPath(arg)$/;"	f
go#package#Paths	bundle/vim-go/autoload/go/package.vim	/^function! go#package#Paths()$/;"	f
go#play#Share	bundle/vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2)$/;"	f
go#rename#Rename	bundle/vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(...)$/;"	f
go#tool#BinPath	bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#BinPath(binpath)$/;"	f
go#tool#Deps	bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#Deps()$/;"	f
go#tool#ExecuteInDir	bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath)$/;"	f
go#tool#Files	bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#Files()$/;"	f
go#tool#Imports	bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#Imports()$/;"	f
go#tool#OpenBrowser	bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url)$/;"	f
go#tool#ShowErrors	bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#ShowErrors(out)$/;"	f
go#ui#CloseWindow	bundle/vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow()$/;"	f
go#ui#OpenDefinition	bundle/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition()$/;"	f
go#ui#OpenWindow	bundle/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(content)$/;"	f
go_highlight_array_whitespace_error	syntax/go.vim	/^  let go_highlight_array_whitespace_error = 1$/;"	v
go_highlight_chan_whitespace_error	syntax/go.vim	/^  let go_highlight_chan_whitespace_error = 1$/;"	v
go_highlight_extra_types	syntax/go.vim	/^  let go_highlight_extra_types = 1$/;"	v
go_highlight_space_tab_error	syntax/go.vim	/^  let go_highlight_space_tab_error = 1$/;"	v
go_highlight_trailing_whitespace_error	syntax/go.vim	/^  let go_highlight_trailing_whitespace_error = 1$/;"	v
gocodeAutocomplete	bundle/gocode/autoload/gocomplete.vim	/^fu! s:gocodeAutocomplete()$/;"	f
gocodeAutocomplete	bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeAutocomplete()$/;"	f
gocodeCommand	bundle/gocode/autoload/gocomplete.vim	/^fu! s:gocodeCommand(cmd, preargs, args)$/;"	f
gocodeCommand	bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCommand(cmd, preargs, args)$/;"	f
gocodeCurrentBuffer	bundle/gocode/autoload/gocomplete.vim	/^fu! s:gocodeCurrentBuffer()$/;"	f
gocodeCurrentBuffer	bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCurrentBuffer()$/;"	f
gocodeCurrentBufferOpt	bundle/gocode/autoload/gocomplete.vim	/^fu! s:gocodeCurrentBufferOpt(filename)$/;"	f
gocodeCurrentBufferOpt	bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCurrentBufferOpt(filename)$/;"	f
gocodeCursor	bundle/gocode/autoload/gocomplete.vim	/^fu! s:gocodeCursor()$/;"	f
gocodeCursor	bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCursor()$/;"	f
gocodeShellescape	bundle/gocode/autoload/gocomplete.vim	/^fu! s:gocodeShellescape(arg)$/;"	f
gocodeShellescape	bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeShellescape(arg)$/;"	f
gocomplete#Complete	bundle/gocode/autoload/gocomplete.vim	/^fu! gocomplete#Complete(findstart, base)$/;"	f
godefJump	bundle/vim-go/autoload/go/def.vim	/^function! s:godefJump(out, mode)$/;"	f
godocWord	bundle/vim-go/autoload/go/doc.vim	/^function! s:godocWord(args)$/;"	f
gofiletype_post	bundle/vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	bundle/vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre()$/;"	f
goto_markedwin	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
grab_visual	bundle/vim-snipmate/plugin/snipMate.vim	/^function! s:grab_visual()$/;"	f
grey_color	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_level	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_number	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>grey_number(x)$/;"	f
group_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:group_by(xs, f)$/;"	f
gsub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gui2cui	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
h	bundle/Zhoeon_colors/hemisu.vim	/^function! s:h(group, style)$/;"	f
handleFailedAssersion	bundle/Vim-L9/plugin/l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f
handleLeftClick	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:handleMiddleMouse()$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handlerBase.addStat	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.addStat(pattern, word)$/;"	f
handlerBase.concretize	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.concretize(deriv)$/;"	f
handlerBase.existsPrompt	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.existsPrompt(line)$/;"	f
handlerBase.getMatchingCompleteItems	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.getMatchingCompleteItems(patternBase)$/;"	f
handlerBase.onBs	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onBs()$/;"	f
handlerBase.onComplete	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onComplete(findstart, base)$/;"	f
handlerBase.onCr	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onCr(openType)$/;"	f
handlerBase.onCursorMovedI	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onCursorMovedI()$/;"	f
handlerBase.onDeleteWord	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onDeleteWord()$/;"	f
handlerBase.onInsertLeave	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onInsertLeave()$/;"	f
handlerBase.onPreviewBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onPreviewBase(repeatable)$/;"	f
handlerBase.onRecallPattern	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onRecallPattern(shift)$/;"	f
handlerBase.onSwitchMatching	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMatching()$/;"	f
handlerBase.onSwitchMode	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMode(shift)$/;"	f
handlerBase.removePrompt	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.removePrompt(line)$/;"	f
handlerBase.restorePrompt	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.restorePrompt(line)$/;"	f
has	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has(list, value)$/;"	f
has	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has(list, value)$/;"	f
has_common_items	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has_common_items(list1, list2)$/;"	f
has_common_items	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has_common_items(list1, list2)$/;"	f
has_index	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has_index(list, index)$/;"	f
has_index	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has_index(list, index)$/;"	f
has_vimproc	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:has_vimproc()$/;"	f
has_vimproc	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^function! s:has_vimproc()$/;"	f
hibg	bundle/Zhoeon_colors/colors/vividchalk.vim	/^function! s:hibg(group,guibg,first,second)$/;"	f
hifg	bundle/Zhoeon_colors/colors/vividchalk.vim	/^function! s:hifg(group,guifg,first,second,...)$/;"	f
highlightError	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:highlightError()$/;"	f
highlightPrompt	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:highlightPrompt(prompt)$/;"	f
hl	bundle/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	bundle/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	bundle/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hs_highlight_boolean	bundle/colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	bundle/colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
iconv	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^function! s:iconv(expr, from, to)$/;"	f
ignoreFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:ignoreFile(filename) " {{{2$/;"	f
import	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:import(name, ...)$/;"	f
import	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:import(name, ...)$/;"	f
indent_snippet	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! s:indent_snippet(begin, end) "{{{$/;"	f
init	bundle/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
initVariable	bundle/git-nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_var	bundle/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
initialize	bundle/fuzzyfinder/plugin/fuf.vim	/^function s:initialize()$/;"	f
initialize_cache	bundle/neosnippet/autoload/neosnippet/init.vim	/^function! s:initialize_cache() "{{{$/;"	f
initialize_include	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:initialize_include(filename, filetype) "{{{$/;"	f
initialize_options	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! s:initialize_options(options) "{{{$/;"	f
initialize_others	bundle/neosnippet/autoload/neosnippet/init.vim	/^function! s:initialize_others() "{{{$/;"	f
initialize_script_variables	bundle/neosnippet/autoload/neosnippet/init.vim	/^function! s:initialize_script_variables() "{{{$/;"	f
initialize_source	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_source	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:initialize_source(srcname, filetype) "{{{$/;"	f
initialize_tags	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:initialize_tags(filename) "{{{$/;"	f
initialize_variables	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:initialize_variables() "{{{$/;"	f
input_helper	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_helper	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_safe	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:input_safe(...)$/;"	f
input_safe	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:input_safe(...)$/;"	f
inputreplacement	bundle/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	bundle/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	bundle/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
instaweb_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
interpretPrimaryPatternForNonPath	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForNonPath(pattern)$/;"	f
interpretPrimaryPatternForPath	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPath(pattern)$/;"	f
interpretPrimaryPatternForPathTail	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPathTail(pattern)$/;"	f
invoke_funcrefs	bundle/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
is_beginning_of_line	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! s:is_beginning_of_line(cur_text) "{{{$/;"	f
is_branch_empty	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty()$/;"	f
is_cygwin	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_cygwin()$/;"	f
is_cygwin	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_cygwin()$/;"	f
is_dict	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_dict	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_excluded_window	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
is_float	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_float(Value)$/;"	f
is_float	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_float(Value)$/;"	f
is_funcref	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_funcref	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_list	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_list(Value)$/;"	f
is_list	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_list(Value)$/;"	f
is_mac	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_mac()$/;"	f
is_mac	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_mac()$/;"	f
is_number	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_number(Value)$/;"	f
is_number	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_number(Value)$/;"	f
is_numeric	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_numeric	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_skip_auto_complete	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:is_skip_auto_complete(cur_text) "{{{$/;"	f
is_string	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_string(Value)$/;"	f
is_string	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_string(Value)$/;"	f
is_unix	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_unix()$/;"	f
is_unix	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_unix()$/;"	f
is_windows	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_windows()$/;"	f
is_windows	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_windows()$/;"	f
jumpToBookmark	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:jumpToBookmark(path, mode, pattern, lnum)$/;"	f
jumpToFirstChild	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextHunk	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
jumpToNextSibling	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevHunk	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
jumpToPrevSibling	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToTag	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:jumpToTag(item, mode)$/;"	f
justify_equal_spacing	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...)$/;"	f
keyword_filter	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:keyword_filter(snippets, cur_keyword_str) "{{{$/;"	f
known_files.get	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.getCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent(forcecurrent) abort dict$/;"	f
known_files.has	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
known_files.setCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) abort dict$/;"	f
known_files.setPaused	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setPaused() abort dict$/;"	f
l9#async#execute	bundle/Vim-L9/autoload/l9/async.vim	/^function l9#async#execute(key, cmd, cwd, input, appends)$/;"	f
l9#async#listActiveWorkers	bundle/Vim-L9/autoload/l9/async.vim	/^function l9#async#listActiveWorkers()$/;"	f
l9#async#listWorkers	bundle/Vim-L9/autoload/l9/async.vim	/^function l9#async#listWorkers()$/;"	f
l9#async#read	bundle/Vim-L9/autoload/l9/async.vim	/^function l9#async#read(key)$/;"	f
l9#completeForInputHl	bundle/Vim-L9/autoload/l9.vim	/^function l9#completeForInputHl(lead, line, pos)$/;"	f
l9#concat	bundle/Vim-L9/autoload/l9.vim	/^function l9#concat(items)$/;"	f
l9#concatPaths	bundle/Vim-L9/autoload/l9.vim	/^function l9#concatPaths(paths)$/;"	f
l9#convertWildcardToRegexp	bundle/Vim-L9/autoload/l9.vim	/^function l9#convertWildcardToRegexp(expr)$/;"	f
l9#defineVariableDefault	bundle/Vim-L9/autoload/l9.vim	/^function l9#defineVariableDefault(name, default)$/;"	f
l9#deleteAllBuffersExcept	bundle/Vim-L9/autoload/l9.vim	/^function l9#deleteAllBuffersExcept(files)$/;"	f
l9#echoHl	bundle/Vim-L9/autoload/l9.vim	/^function l9#echoHl(hl, msg, prefix, addingHistory)$/;"	f
l9#filterWithLimit	bundle/Vim-L9/autoload/l9.vim	/^function l9#filterWithLimit(items, expr, limit)$/;"	f
l9#getPathSeparator	bundle/Vim-L9/autoload/l9.vim	/^function l9#getPathSeparator()$/;"	f
l9#getSelectedText	bundle/Vim-L9/autoload/l9.vim	/^function l9#getSelectedText()$/;"	f
l9#getVersion	bundle/Vim-L9/autoload/l9.vim	/^function l9#getVersion()$/;"	f
l9#grepBuffers	bundle/Vim-L9/autoload/l9.vim	/^function l9#grepBuffers(pattern, bufNrs)$/;"	f
l9#grepFiles	bundle/Vim-L9/autoload/l9.vim	/^function l9#grepFiles(pattern, files)$/;"	f
l9#guardScriptLoading	bundle/Vim-L9/autoload/l9.vim	/^function l9#guardScriptLoading(path, vimVersion, l9Version, exprs)$/;"	f
l9#hash224	bundle/Vim-L9/autoload/l9.vim	/^function l9#hash224(str)$/;"	f
l9#inputHl	bundle/Vim-L9/autoload/l9.vim	/^function l9#inputHl(hl, ...)$/;"	f
l9#isCompatible	bundle/Vim-L9/autoload/l9.vim	/^function l9#isCompatible(ver)$/;"	f
l9#loadFilesToBuffers	bundle/Vim-L9/autoload/l9.vim	/^function l9#loadFilesToBuffers(files)$/;"	f
l9#loadScript	bundle/Vim-L9/autoload/l9.vim	/^function l9#loadScript(text)$/;"	f
l9#modifyPathRelativeToDir	bundle/Vim-L9/autoload/l9.vim	/^function l9#modifyPathRelativeToDir(path, dir)$/;"	f
l9#moveToBufferWindowInCurrentTabpage	bundle/Vim-L9/autoload/l9.vim	/^function l9#moveToBufferWindowInCurrentTabpage(bufNr)$/;"	f
l9#moveToBufferWindowInOtherTabpage	bundle/Vim-L9/autoload/l9.vim	/^function l9#moveToBufferWindowInOtherTabpage(bufNr)$/;"	f
l9#notifyBalloonly	bundle/Vim-L9/autoload/l9.vim	/^function l9#notifyBalloonly(msg)$/;"	f
l9#notifyExternally	bundle/Vim-L9/autoload/l9.vim	/^function l9#notifyExternally(msg)$/;"	f
l9#notifyScreen	bundle/Vim-L9/autoload/l9.vim	/^function l9#notifyScreen(msg)$/;"	f
l9#notifyTmux	bundle/Vim-L9/autoload/l9.vim	/^function l9#notifyTmux(msg)$/;"	f
l9#placeSign	bundle/Vim-L9/autoload/l9.vim	/^function l9#placeSign(linehl, text, texthl, locations)$/;"	f
l9#quickfix#compareEntries	bundle/Vim-L9/autoload/l9/quickfix.vim	/^function l9#quickfix#compareEntries(e0, e1)$/;"	f
l9#quickfix#isWindowOpened	bundle/Vim-L9/autoload/l9/quickfix.vim	/^function l9#quickfix#isWindowOpened()$/;"	f
l9#quickfix#openIfNotEmpty	bundle/Vim-L9/autoload/l9/quickfix.vim	/^function l9#quickfix#openIfNotEmpty(onlyRecognized, holdCursor)$/;"	f
l9#quickfix#placeSign	bundle/Vim-L9/autoload/l9/quickfix.vim	/^function l9#quickfix#placeSign()$/;"	f
l9#quickfix#setMakeResult	bundle/Vim-L9/autoload/l9/quickfix.vim	/^function l9#quickfix#setMakeResult(lines)$/;"	f
l9#quickfix#sort	bundle/Vim-L9/autoload/l9/quickfix.vim	/^function l9#quickfix#sort()$/;"	f
l9#quickfix#toggleWindow	bundle/Vim-L9/autoload/l9/quickfix.vim	/^function l9#quickfix#toggleWindow()$/;"	f
l9#readFile	bundle/Vim-L9/autoload/l9.vim	/^function l9#readFile(...)$/;"	f
l9#removeIf	bundle/Vim-L9/autoload/l9.vim	/^function l9#removeIf(items, expr)$/;"	f
l9#removeLinesBetween	bundle/Vim-L9/autoload/l9.vim	/^function l9#removeLinesBetween(lines, begin, end)$/;"	f
l9#shiftWinNextTabpage	bundle/Vim-L9/autoload/l9.vim	/^function l9#shiftWinNextTabpage()$/;"	f
l9#shiftWinPrevTabpage	bundle/Vim-L9/autoload/l9.vim	/^function l9#shiftWinPrevTabpage()$/;"	f
l9#snipHead	bundle/Vim-L9/autoload/l9.vim	/^function l9#snipHead(str, len, mask)$/;"	f
l9#snipMid	bundle/Vim-L9/autoload/l9.vim	/^function l9#snipMid(str, len, mask)$/;"	f
l9#snipTail	bundle/Vim-L9/autoload/l9.vim	/^function l9#snipTail(str, len, mask)$/;"	f
l9#tempbuffer#close	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#close(bufname)$/;"	f
l9#tempbuffer#isOpen	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#isOpen(bufname)$/;"	f
l9#tempbuffer#moveTo	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#moveTo(bufname)$/;"	f
l9#tempbuffer#openReadOnly	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openReadOnly(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openScratch	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openScratch(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openWritable	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openWritable(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempvariables#end	bundle/Vim-L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#end(group)$/;"	f
l9#tempvariables#getList	bundle/Vim-L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#getList(group)$/;"	f
l9#tempvariables#set	bundle/Vim-L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#set(group, name, value)$/;"	f
l9#tempvariables#setList	bundle/Vim-L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#setList(group, variables)$/;"	f
l9#unique	bundle/Vim-L9/autoload/l9.vim	/^function l9#unique(items)$/;"	f
l9#uniqueStably	bundle/Vim-L9/autoload/l9.vim	/^function l9#uniqueStably(items)$/;"	f
l9#writeAll	bundle/Vim-L9/autoload/l9.vim	/^function l9#writeAll()$/;"	f
l9#writeFile	bundle/Vim-L9/autoload/l9.vim	/^function l9#writeFile(...)$/;"	f
l9#zip	bundle/Vim-L9/autoload/l9.vim	/^function l9#zip(items)$/;"	f
levenshtein_distance	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:levenshtein_distance(str1, str2)$/;"	f
linechars	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:lines(str)$/;"	f
listAroundFiles	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:listAroundFiles(dir)$/;"	f
load	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:load(...) dict$/;"	f
load	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:load(...) dict$/;"	f
load_from_file	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, fileencoding, is_string) "{{{$/;"	f
load_from_tags	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, fileencoding) "{{{$/;"	f
load_scopes	bundle/vim-snipmate/plugin/snipMate.vim	/^function! s:load_scopes(bang, ...)$/;"	f
loaded_matchit	bundle/matchit/plugin/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_nerd_tree	bundle/git-nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_snips	bundle/vim-snipmate/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_taglist	bundle/taglist/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	bundle/taglist/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_tcomment	bundle/tcomment_vim/plugin/tcomment.vim	/^let loaded_tcomment = 304$/;"	v
loaded_tlib	bundle/tlib_vim/plugin/02tlib.vim	/^let loaded_tlib = 113$/;"	v
loaded_tlib_TestChild_autoload	bundle/tlib_vim/autoload/tlib/TestChild.vim	/^let loaded_tlib_TestChild_autoload = 1$/;"	v
loaded_tlib_Test_autoload	bundle/tlib_vim/autoload/tlib/Test.vim	/^let loaded_tlib_Test_autoload = 1$/;"	v
loaded_tlib_char_autoload	bundle/tlib_vim/autoload/tlib/char.vim	/^let loaded_tlib_char_autoload = 1$/;"	v
loaded_tlib_cmd_autoload	bundle/tlib_vim/autoload/tlib/cmd.vim	/^let loaded_tlib_cmd_autoload = 1$/;"	v
loaded_tlib_comments_autoload	bundle/tlib_vim/autoload/tlib/comments.vim	/^let loaded_tlib_comments_autoload = 1$/;"	v
loaded_tlib_dir_autoload	bundle/tlib_vim/autoload/tlib/dir.vim	/^let loaded_tlib_dir_autoload = 1$/;"	v
loaded_tlib_eval_autoload	bundle/tlib_vim/autoload/tlib/eval.vim	/^let loaded_tlib_eval_autoload = 1$/;"	v
loaded_tlib_file_autoload	bundle/tlib_vim/autoload/tlib/file.vim	/^let loaded_tlib_file_autoload = 1$/;"	v
loaded_tlib_hook_autoload	bundle/tlib_vim/autoload/tlib/hook.vim	/^let loaded_tlib_hook_autoload = 1$/;"	v
loaded_tlib_object_autoload	bundle/tlib_vim/autoload/tlib/Object.vim	/^let loaded_tlib_object_autoload = 1$/;"	v
loaded_tlib_progressbar_autoload	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let loaded_tlib_progressbar_autoload = 1$/;"	v
loaded_tlib_rx_autoload	bundle/tlib_vim/autoload/tlib/rx.vim	/^let loaded_tlib_rx_autoload = 1$/;"	v
loaded_tlib_scratch_autoload	bundle/tlib_vim/autoload/tlib/scratch.vim	/^let loaded_tlib_scratch_autoload = 1$/;"	v
loaded_tlib_string_autoload	bundle/tlib_vim/autoload/tlib/string.vim	/^let loaded_tlib_string_autoload = 1$/;"	v
loaded_tlib_syntax_autoload	bundle/tlib_vim/autoload/tlib/syntax.vim	/^let loaded_tlib_syntax_autoload = 1$/;"	v
loaded_tlib_tab_autoload	bundle/tlib_vim/autoload/tlib/tab.vim	/^let loaded_tlib_tab_autoload = 1$/;"	v
loaded_tlib_tag_autoload	bundle/tlib_vim/autoload/tlib/tag.vim	/^let loaded_tlib_tag_autoload = 1$/;"	v
loaded_tlib_time_autoload	bundle/tlib_vim/autoload/tlib/time.vim	/^let loaded_tlib_time_autoload = 1$/;"	v
loaded_tlib_var_autoload	bundle/tlib_vim/autoload/tlib/var.vim	/^let loaded_tlib_var_autoload = 1$/;"	v
loaded_tlib_win_autoload	bundle/tlib_vim/autoload/tlib/win.vim	/^let loaded_tlib_win_autoload = 1$/;"	v
main	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:main(argv) "{{{$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName | LibDirs]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName, "-rebar", Path, LibDirs]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName]) ->$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test.c	/^int main()$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test_2.c	/^int main()$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test_3.c	/^int main()$/;"	f
main_syntax	bundle/vim-json/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
makeAdditionalMigemoPattern	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeAdditionalMigemoPattern(pattern)$/;"	f
makeCtagsCmd	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:makeCtagsCmd(bufNr)$/;"	f
makeFileAbbrInfo	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeFileAbbrInfo(item, maxLenStats)$/;"	f
makeFuzzyMatchingExpr	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeFuzzyMatchingExpr(target, pattern)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:makeItem(nr)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:makeItem(tag, itemMap)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:makeItem(line)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:makeItem(line, bufnrPrev)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:makeItem(qfItem)$/;"	f
makePartialMatchingExpr	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makePartialMatchingExpr(target, pattern)$/;"	f
makeRefiningExpr	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeRefiningExpr(pattern)$/;"	f
make_cache	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:make_cache(filetype) "{{{$/;"	f
make_cache	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! s:make_cache() "{{{$/;"	f
make_cache_autocmds	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_cache_autocmds() "{{{$/;"	f
make_cache_buffer	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_buffer(srcname) "{{{$/;"	f
make_cache_commands	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_cache_commands() "{{{$/;"	f
make_cache_completion_from_dict	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_cache_completion_from_dict(dict_name) "{{{$/;"	f
make_cache_current_buffer	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_current_buffer(start, end) "{{{$/;"	f
make_cache_current_buffer	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:make_cache_current_buffer(start, end) "{{{$/;"	f
make_cache_current_line	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:make_cache_current_line() "{{{$/;"	f
make_cache_features	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_cache_features() "{{{$/;"	f
make_cache_file	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_file(srcname) "{{{$/;"	f
make_cache_from_dict	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_cache_from_dict(dict_name, kind) "{{{$/;"	f
make_cache_from_syntax	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! s:make_cache_from_syntax(filetype) "{{{$/;"	f
make_cache_functions	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_cache_functions() "{{{$/;"	f
make_cache_lines	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:make_cache_lines(srcname, filetype, lines) "{{{$/;"	f
make_cache_options	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_cache_options() "{{{$/;"	f
make_cache_prototype_from_dict	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_cache_prototype_from_dict(dict_name) "{{{$/;"	f
make_completion_list	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:make_completion_list(list, kind) "{{{$/;"	f
make_function	bundle/promptline/autoload/promptline/sections.vim	/^fun! s:make_function( function_name, preset, section_names, is_left )$/;"	f
map	bundle/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map_accum	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:map_accum(expr, xs, init)$/;"	f
map_accum	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:map_accum(expr, xs, init)$/;"	f
map_if_not_mapped	bundle/vim-snipmate/after/plugin/snipMate.vim	/^function! s:map_if_not_mapped(lhs, rhs, mode)$/;"	f
mark_window	bundle/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
match_pair	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! s:match_pair(string, start_pattern, end_pattern, start_cnt) "{{{$/;"	f
matcher.filter	bundle/neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	bundle/neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	bundle/neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
max_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:max_by(list, expr)$/;"	f
max_by	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:max_by(list, expr)$/;"	f
min_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:min_by(list, expr)$/;"	f
min_by	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:min_by(list, expr)$/;"	f
moveToOtherTabpageOpeningBuffer	bundle/Vim-L9/autoload/l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f
mysearchpair	bundle/vim-endwise/plugin/endwise.vim	/^function! s:mysearchpair(beginpat,endpat,synpat)$/;"	f
neocomplcache#sources#snippets_complete#define	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#define() "{{{$/;"	f
neocomplete	bundle/neocomplete/plugin/neocomplete.vim	/^  augroup neocomplete$/;"	a
neocomplete#async_cache#main	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^  function! neocomplete#async_cache#main(argv) "{{{$/;"	f
neocomplete#available_sources	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#available_sources() "{{{$/;"	f
neocomplete#cache#async_load_from_file	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#async_load_from_file(cache_dir, filename, pattern, mark) "{{{$/;"	f
neocomplete#cache#async_load_from_tags	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#async_load_from_tags(cache_dir, filename, filetype, pattern, mark, is_create_tags) "{{{$/;"	f
neocomplete#cache#check_cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_cache, is_string) "{{{$/;"	f
neocomplete#cache#check_old_cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#check_old_cache(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#encode_name	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#encode_name(cache_dir, filename)$/;"	f
neocomplete#cache#filereadable	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#filereadable(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#get_cache_list	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#get_cache_list(cache_dir, async_cache_list) "{{{$/;"	f
neocomplete#cache#getfilename	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#getfilename(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#load_from_cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplete#cache#make_directory	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#make_directory(directory) "{{{$/;"	f
neocomplete#cache#readfile	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#readfile(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#save_cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#save_cache(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplete#cache#writefile	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#writefile(cache_dir, filename, list) "{{{$/;"	f
neocomplete#cancel_popup	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#cancel_popup()$/;"	f
neocomplete#close_popup	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#close_popup()$/;"	f
neocomplete#commands#_clean	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_clean() "{{{$/;"	f
neocomplete#commands#_initialize	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_initialize() "{{{$/;"	f
neocomplete#commands#_lock	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_lock() "{{{$/;"	f
neocomplete#commands#_set_file_type	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_set_file_type(filetype) "{{{$/;"	f
neocomplete#commands#_toggle_lock	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_toggle_lock() "{{{$/;"	f
neocomplete#commands#_unlock	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_unlock() "{{{$/;"	f
neocomplete#complete#_get_complete_pos	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_complete_pos(sources) "{{{$/;"	f
neocomplete#complete#_get_results	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_results(cur_text, ...) "{{{$/;"	f
neocomplete#complete#_get_words	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_words(sources, complete_pos, complete_str) "{{{$/;"	f
neocomplete#complete#_set_results_pos	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_results_pos(cur_text, ...) "{{{$/;"	f
neocomplete#complete#_set_results_words	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_results_words(sources) "{{{$/;"	f
neocomplete#complete#auto_complete	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#auto_complete(findstart, base) "{{{$/;"	f
neocomplete#complete#manual_complete	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#manual_complete(findstart, base) "{{{$/;"	f
neocomplete#complete#sources_manual_complete	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#sources_manual_complete(findstart, base) "{{{$/;"	f
neocomplete#complete_check	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#complete_check() "{{{$/;"	f
neocomplete#complete_common_string	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#complete_common_string()$/;"	f
neocomplete#context_filetype#get	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#get(filetype) "{{{$/;"	f
neocomplete#context_filetype#set	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#set() "{{{$/;"	f
neocomplete#custom#get	bundle/neocomplete/autoload/neocomplete/custom.vim	/^function! neocomplete#custom#get() "{{{$/;"	f
neocomplete#custom#source	bundle/neocomplete/autoload/neocomplete/custom.vim	/^function! neocomplete#custom#source(source_name, option_name, value) "{{{$/;"	f
neocomplete#custom_source	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#custom_source(source_name, option_name, value) "{{{$/;"	f
neocomplete#define_filter	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#define_filter(filter) "{{{$/;"	f
neocomplete#define_source	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#define_source(source) "{{{$/;"	f
neocomplete#disable_default_dictionary	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#disable_default_dictionary(variable) "{{{$/;"	f
neocomplete#dup_filter	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#dup_filter(list) "{{{$/;"	f
neocomplete#echodoc#init	bundle/neocomplete/autoload/neocomplete/echodoc.vim	/^function! neocomplete#echodoc#init() "{{{$/;"	f
neocomplete#escape_match	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#escape_match(str) "{{{$/;"	f
neocomplete#exists_echodoc	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#exists_echodoc() "{{{$/;"	f
neocomplete#filetype_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplete#filters#converter_abbr#define	bundle/neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^function! neocomplete#filters#converter_abbr#define() "{{{$/;"	f
neocomplete#filters#converter_case#define	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! neocomplete#filters#converter_case#define() "{{{$/;"	f
neocomplete#filters#converter_delimiter#define	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! neocomplete#filters#converter_delimiter#define() "{{{$/;"	f
neocomplete#filters#converter_disable_abbr#define	bundle/neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^function! neocomplete#filters#converter_disable_abbr#define() "{{{$/;"	f
neocomplete#filters#converter_remove_last_paren#define	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^function! neocomplete#filters#converter_remove_last_paren#define() "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#define	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#define() "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#length	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#length(left, right) "{{{$/;"	f
neocomplete#filters#escape	bundle/neocomplete/autoload/neocomplete/filters.vim	/^function! neocomplete#filters#escape(string) "{{{$/;"	f
neocomplete#filters#fuzzy_escape	bundle/neocomplete/autoload/neocomplete/filters.vim	/^function! neocomplete#filters#fuzzy_escape(string) "{{{$/;"	f
neocomplete#filters#matcher_fuzzy#define	bundle/neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^function! neocomplete#filters#matcher_fuzzy#define() "{{{$/;"	f
neocomplete#filters#matcher_head#define	bundle/neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^function! neocomplete#filters#matcher_head#define() "{{{$/;"	f
neocomplete#filters#matcher_length#define	bundle/neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^function! neocomplete#filters#matcher_length#define() "{{{$/;"	f
neocomplete#filters#sorter_filename#define	bundle/neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^function! neocomplete#filters#sorter_filename#define() "{{{$/;"	f
neocomplete#filters#sorter_length#define	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! neocomplete#filters#sorter_length#define() "{{{$/;"	f
neocomplete#filters#sorter_rank#define	bundle/neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^function! neocomplete#filters#sorter_rank#define() "{{{$/;"	f
neocomplete#filters#sorter_word#define	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! neocomplete#filters#sorter_word#define() "{{{$/;"	f
neocomplete#get_context	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_context() "{{{$/;"	f
neocomplete#get_context_filetype	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_context_filetype(...) "{{{$/;"	f
neocomplete#get_context_filetype_range	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_context_filetype_range(...) "{{{$/;"	f
neocomplete#get_cur_text	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_cur_text(...) "{{{$/;"	f
neocomplete#get_current_neocomplete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_current_neocomplete() "{{{$/;"	f
neocomplete#get_data_directory	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_data_directory() "{{{$/;"	f
neocomplete#get_keyword_pattern	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_keyword_pattern(...) "{{{$/;"	f
neocomplete#get_keyword_pattern_end	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_keyword_pattern_end(...) "{{{$/;"	f
neocomplete#get_source_filetypes	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_source_filetypes(filetype) "{{{$/;"	f
neocomplete#handler#_change_update_time	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_change_update_time() "{{{$/;"	f
neocomplete#handler#_do_auto_complete	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_do_auto_complete(event) "{{{$/;"	f
neocomplete#handler#_on_complete_done	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_complete_done() "{{{$/;"	f
neocomplete#handler#_on_insert_char_pre	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_char_pre() "{{{$/;"	f
neocomplete#handler#_on_insert_enter	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_enter() "{{{$/;"	f
neocomplete#handler#_on_insert_leave	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_leave() "{{{$/;"	f
neocomplete#handler#_on_moved_i	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_moved_i() "{{{$/;"	f
neocomplete#handler#_on_text_changed	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_text_changed() "{{{$/;"	f
neocomplete#handler#_on_write_post	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_write_post() "{{{$/;"	f
neocomplete#handler#_restore_update_time	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_restore_update_time() "{{{$/;"	f
neocomplete#has_vimproc	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#has_vimproc() "{{{$/;"	f
neocomplete#head_match	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#head_match(checkstr, headstr) "{{{$/;"	f
neocomplete#helper#call_filters	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#call_filters(filters, source, context) "{{{$/;"	f
neocomplete#helper#call_hook	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#call_hook(sources, hook_name, context) "{{{$/;"	f
neocomplete#helper#check_invalid_omnifunc	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#check_invalid_omnifunc(omnifunc) "{{{$/;"	f
neocomplete#helper#clear_result	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#clear_result() "{{{$/;"	f
neocomplete#helper#complete_check	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#complete_check() "{{{$/;"	f
neocomplete#helper#complete_configure	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#complete_configure() "{{{$/;"	f
neocomplete#helper#filetype_complete	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplete#helper#ftdictionary2list	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#ftdictionary2list(dictionary, filetype) "{{{$/;"	f
neocomplete#helper#get_cur_text	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_cur_text(...) "{{{$/;"	f
neocomplete#helper#get_source_filetypes	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_source_filetypes(filetype) "{{{$/;"	f
neocomplete#helper#get_sources_list	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_sources_list(...) "{{{$/;"	f
neocomplete#helper#get_syn_name	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_syn_name(is_trans) "{{{$/;"	f
neocomplete#helper#indent_current_line	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#indent_current_line() "{{{$/;"	f
neocomplete#helper#is_enabled_source	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#is_enabled_source(source, filetype) "{{{$/;"	f
neocomplete#helper#is_omni	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#is_omni(cur_text) "{{{$/;"	f
neocomplete#helper#match_word	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#match_word(cur_text, ...) "{{{$/;"	f
neocomplete#helper#sort_human	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#sort_human(candidates) "{{{$/;"	f
neocomplete#helper#unite_patterns	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#unite_patterns(pattern_var, filetype) "{{{$/;"	f
neocomplete#init#_autocmds	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_autocmds() "{{{$/;"	f
neocomplete#init#_context	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_context(context) "{{{$/;"	f
neocomplete#init#_current_neocomplete	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_current_neocomplete() "{{{$/;"	f
neocomplete#init#_filter	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_filter(filter) "{{{$/;"	f
neocomplete#init#_filters	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_filters(names) "{{{$/;"	f
neocomplete#init#_others	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_others() "{{{$/;"	f
neocomplete#init#_source	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_source(source) "{{{$/;"	f
neocomplete#init#_sources	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_sources(names) "{{{$/;"	f
neocomplete#init#_variables	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_variables() "{{{$/;"	f
neocomplete#init#disable	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#disable() "{{{$/;"	f
neocomplete#init#enable	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#enable() "{{{$/;"	f
neocomplete#init#is_enabled	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#is_enabled() "{{{$/;"	f
neocomplete#initialize	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#initialize() "{{{$/;"	f
neocomplete#is_auto_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_auto_complete() "{{{$/;"	f
neocomplete#is_auto_select	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_auto_select() "{{{$/;"	f
neocomplete#is_cache_disabled	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_cache_disabled() "{{{$/;"	f
neocomplete#is_enabled	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_enabled() "{{{$/;"	f
neocomplete#is_eskk_convertion	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_eskk_convertion(cur_text) "{{{$/;"	f
neocomplete#is_eskk_enabled	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_eskk_enabled() "{{{$/;"	f
neocomplete#is_locked	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_locked(...) "{{{$/;"	f
neocomplete#is_multibyte_input	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_multibyte_input(cur_text) "{{{$/;"	f
neocomplete#is_prefetch	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_prefetch() "{{{$/;"	f
neocomplete#is_sources_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_sources_complete() "{{{$/;"	f
neocomplete#is_text_mode	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_text_mode() "{{{$/;"	f
neocomplete#is_windows	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_windows() "{{{$/;"	f
neocomplete#mappings#cancel_popup	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#cancel_popup() "{{{$/;"	f
neocomplete#mappings#close_popup	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#close_popup() "{{{$/;"	f
neocomplete#mappings#complete_common_string	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#complete_common_string() "{{{$/;"	f
neocomplete#mappings#define_default_mappings	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#define_default_mappings() "{{{$/;"	f
neocomplete#mappings#fallback	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#fallback(i) "{{{$/;"	f
neocomplete#mappings#popup_post	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#popup_post() "{{{$/;"	f
neocomplete#mappings#smart_close_popup	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#smart_close_popup() "{{{$/;"	f
neocomplete#mappings#start_manual_complete	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#start_manual_complete(...) "{{{$/;"	f
neocomplete#mappings#undo_completion	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#undo_completion() "{{{$/;"	f
neocomplete#match_word	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#match_word(...) "{{{$/;"	f
neocomplete#print_debug	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_debug(expr) "{{{$/;"	f
neocomplete#print_error	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_error(string) "{{{$/;"	f
neocomplete#print_warning	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_warning(string) "{{{$/;"	f
neocomplete#set_dictionary_helper	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
neocomplete#skip_next_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#skip_next_complete() "{{{$/;"	f
neocomplete#smart_close_popup	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#smart_close_popup()$/;"	f
neocomplete#sources#buffer#define	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#define() "{{{$/;"	f
neocomplete#sources#buffer#get_frequencies	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#get_frequencies() "{{{$/;"	f
neocomplete#sources#buffer#make_cache	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#make_cache(name) "{{{$/;"	f
neocomplete#sources#buffer#make_cache_current_line	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#make_cache_current_line() "{{{$/;"	f
neocomplete#sources#dictionary#define	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#define() "{{{$/;"	f
neocomplete#sources#dictionary#get_dictionaries	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#get_dictionaries(filetype) "{{{$/;"	f
neocomplete#sources#dictionary#remake_cache	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#remake_cache(filetype) "{{{$/;"	f
neocomplete#sources#file#define	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^function! neocomplete#sources#file#define() "{{{$/;"	f
neocomplete#sources#file_include#define	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^function! neocomplete#sources#file_include#define() "{{{$/;"	f
neocomplete#sources#include#analyze_ruby_include_files	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! neocomplete#sources#include#analyze_ruby_include_files(lines, path) "{{{$/;"	f
neocomplete#sources#include#analyze_vim_include_files	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! neocomplete#sources#include#analyze_vim_include_files(lines, path) "{{{$/;"	f
neocomplete#sources#include#define	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! neocomplete#sources#include#define() "{{{$/;"	f
neocomplete#sources#include#get_current_include_files	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! neocomplete#sources#include#get_current_include_files() "{{{$/;"	f
neocomplete#sources#include#get_include_files	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! neocomplete#sources#include#get_include_files(bufnumber) "{{{$/;"	f
neocomplete#sources#include#initialize	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! neocomplete#sources#include#initialize() "{{{$/;"	f
neocomplete#sources#include#make_cache	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! neocomplete#sources#include#make_cache(bufname) "{{{$/;"	f
neocomplete#sources#member#define	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#define() "{{{$/;"	f
neocomplete#sources#member#make_cache_current_buffer	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#make_cache_current_buffer() "{{{$/;"	f
neocomplete#sources#member#make_cache_current_line	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#make_cache_current_line() "{{{$/;"	f
neocomplete#sources#member#remake_cache	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#remake_cache(filetype) "{{{$/;"	f
neocomplete#sources#neosnippet#define	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^function! neocomplete#sources#neosnippet#define() "{{{$/;"	f
neocomplete#sources#omni#define	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! neocomplete#sources#omni#define() "{{{$/;"	f
neocomplete#sources#syntax#define	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! neocomplete#sources#syntax#define() "{{{$/;"	f
neocomplete#sources#syntax#remake_cache	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! neocomplete#sources#syntax#remake_cache(filetype) "{{{$/;"	f
neocomplete#sources#tag#define	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! neocomplete#sources#tag#define() "{{{$/;"	f
neocomplete#sources#tag#make_cache	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! neocomplete#sources#tag#make_cache(force) "{{{$/;"	f
neocomplete#sources#vim#define	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^function! neocomplete#sources#vim#define() "{{{$/;"	f
neocomplete#sources#vim#get_command	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^function! neocomplete#sources#vim#get_command(cur_text) "{{{$/;"	f
neocomplete#sources#vim#get_cur_text	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^function! neocomplete#sources#vim#get_cur_text() "{{{$/;"	f
neocomplete#sources#vim#helper#augroup	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#augroup(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#autocmd_args	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#autocmd_args(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#buffer	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#buffer(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#colorscheme_args	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#colorscheme_args(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#command	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#command(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#command_args	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#command_args(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#custom	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#custom(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#customlist	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#customlist(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#dir	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#dir(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#environment	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#environment(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#event	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#event(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#execute	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#execute(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#expand	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#expand(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#expression	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#expression(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#feature	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#feature(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#file	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#file(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#filetype	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#filetype(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#function	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#function(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#get_command_completion	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#get_command_completion(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#get_completion_name	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#get_completion_name(command_name) "{{{$/;"	f
neocomplete#sources#vim#helper#help	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#help(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#highlight	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#highlight(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#let	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#let(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#make_cache	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#make_cache(bufname) "{{{$/;"	f
neocomplete#sources#vim#helper#mapping	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#mapping(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#menu	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#menu(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#on_filetype	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#on_filetype() "{{{$/;"	f
neocomplete#sources#vim#helper#option	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#option(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#shellcmd	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#shellcmd(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#tag	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#tag(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#tag_listfiles	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#tag_listfiles(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#var	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#var(cur_text, complete_str) "{{{$/;"	f
neocomplete#sources#vim#helper#var_dictionary	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! neocomplete#sources#vim#helper#var_dictionary(cur_text, complete_str) "{{{$/;"	f
neocomplete#start_manual_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#start_manual_complete(...)$/;"	f
neocomplete#system	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#system(...) "{{{$/;"	f
neocomplete#undo_completion	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#undo_completion()$/;"	f
neocomplete#util#convert2list	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#convert2list(expr) "{{{$/;"	f
neocomplete#util#disable_default_dictionary	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#disable_default_dictionary(variable) "{{{$/;"	f
neocomplete#util#dup_filter	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#dup_filter(list) "{{{$/;"	f
neocomplete#util#escape_pattern	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#escape_pattern(...) "{{{$/;"	f
neocomplete#util#expand	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#expand(path) "{{{$/;"	f
neocomplete#util#get_last_status	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#get_last_status(...) "{{{$/;"	f
neocomplete#util#get_vital	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#get_vital() "{{{$/;"	f
neocomplete#util#glob	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#glob(pattern, ...) "{{{$/;"	f
neocomplete#util#has_vimproc	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#has_vimproc() "{{{$/;"	f
neocomplete#util#iconv	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#iconv(...) "{{{$/;"	f
neocomplete#util#is_complete_select	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_complete_select() "{{{$/;"	f
neocomplete#util#is_mac	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_mac(...) "{{{$/;"	f
neocomplete#util#is_sudo	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_sudo() "{{{$/;"	f
neocomplete#util#is_windows	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_windows(...) "{{{$/;"	f
neocomplete#util#join_rtp	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#join_rtp(list) "{{{$/;"	f
neocomplete#util#mb_strlen	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#mb_strlen(...) "{{{$/;"	f
neocomplete#util#set_default	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_default(var, val, ...)  "{{{$/;"	f
neocomplete#util#set_default_dictionary	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_default_dictionary(variable, keys, value) "{{{$/;"	f
neocomplete#util#set_dictionary_helper	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_dictionary_helper(variable, keys, pattern) "{{{$/;"	f
neocomplete#util#sort_by	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#sort_by(...) "{{{$/;"	f
neocomplete#util#split_rtp	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#split_rtp(...) "{{{$/;"	f
neocomplete#util#strchars	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strchars(...) "{{{$/;"	f
neocomplete#util#strwidthpart	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strwidthpart(...) "{{{$/;"	f
neocomplete#util#strwidthpart_reverse	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strwidthpart_reverse(...) "{{{$/;"	f
neocomplete#util#substitute_path_separator	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#substitute_path_separator(...) "{{{$/;"	f
neocomplete#util#system	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#system(...) "{{{$/;"	f
neocomplete#util#truncate	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#truncate(...) "{{{$/;"	f
neocomplete#util#truncate_smart	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#truncate_smart(...) "{{{$/;"	f
neocomplete#util#uniq	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#uniq(...) "{{{$/;"	f
neocomplete#util#uniq	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#uniq(list) "{{{$/;"	f
neocomplete#util#wcswidth	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#wcswidth(...) "{{{$/;"	f
neocomplete#variables#get_filters	bundle/neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_filters() "{{{$/;"	f
neocomplete#variables#get_frequencies	bundle/neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_frequencies() "{{{$/;"	f
neocomplete#variables#get_source	bundle/neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_source(name) "{{{$/;"	f
neocomplete#variables#get_sources	bundle/neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_sources() "{{{$/;"	f
neocomplete#within_comment	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#within_comment() "{{{$/;"	f
neocomplete_source.gather_candidates	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:neocomplete_source.gather_candidates(args, context) "{{{$/;"	f
neocomplete_source.hooks.on_init	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:neocomplete_source.hooks.on_init(args, context) "{{{$/;"	f
neosnippet	bundle/neosnippet/plugin/neosnippet.vim	/^augroup neosnippet "{{{$/;"	a
neosnippet#commands#_clear_markers	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_clear_markers() "{{{$/;"	f
neosnippet#commands#_complete_target_snippets	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_complete_target_snippets(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_edit	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_edit(args) "{{{$/;"	f
neosnippet#commands#_edit_complete	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_edit_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_filetype_complete	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_make_cache	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_make_cache(filetype) "{{{$/;"	f
neosnippet#commands#_source	bundle/neosnippet/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_source(filename) "{{{$/;"	f
neosnippet#expandable	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expandable() "{{{$/;"	f
neosnippet#expandable_or_jumpable	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#expandable_or_jumpable() "{{{$/;"	f
neosnippet#get_mirror_placeholder_marker_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_mirror_placeholder_marker_substitute_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_substitute_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_default_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_default_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_substitute_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_pattern() "{{{$/;"	f
neosnippet#get_placeholder_target_marker_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_target_marker_pattern() "{{{$/;"	f
neosnippet#get_runtime_snippets_directory	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_runtime_snippets_directory() "{{{$/;"	f
neosnippet#get_snippets_directory	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_snippets_directory() "{{{$/;"	f
neosnippet#get_sync_placeholder_marker_default_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_default_pattern() "{{{$/;"	f
neosnippet#get_sync_placeholder_marker_pattern	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_user_snippets_directory	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#get_user_snippets_directory() "{{{$/;"	f
neosnippet#helpers#delete_selected_text	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#delete_selected_text(type, ...) "{{{$/;"	f
neosnippet#helpers#get_cursor_snippet	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_cursor_snippet(snippets, cur_text) "{{{$/;"	f
neosnippet#helpers#get_filetype	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_filetype() "{{{$/;"	f
neosnippet#helpers#get_selected_text	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_selected_text(type, ...) "{{{$/;"	f
neosnippet#helpers#get_snippets	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets() "{{{$/;"	f
neosnippet#helpers#get_snippets_directory	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets_directory() "{{{$/;"	f
neosnippet#helpers#substitute_selected_text	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#substitute_selected_text(type, text) "{{{$/;"	f
neosnippet#init#_initialize	bundle/neosnippet/autoload/neosnippet/init.vim	/^function! neosnippet#init#_initialize() "{{{$/;"	f
neosnippet#init#check	bundle/neosnippet/autoload/neosnippet/init.vim	/^function! neosnippet#init#check() "{{{$/;"	f
neosnippet#jumpable	bundle/neosnippet/autoload/neosnippet.vim	/^function! neosnippet#jumpable() "{{{$/;"	f
neosnippet#mappings#_clear_select_mode_mappings	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_clear_select_mode_mappings() "{{{$/;"	f
neosnippet#mappings#_expand_target	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand_target() "{{{$/;"	f
neosnippet#mappings#_expand_target_trigger	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand_target_trigger(trigger) "{{{$/;"	f
neosnippet#mappings#_register_oneshot_snippet	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_register_oneshot_snippet() "{{{$/;"	f
neosnippet#mappings#expand_impl	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expand_impl()$/;"	f
neosnippet#mappings#expand_or_jump_impl	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expand_or_jump_impl()$/;"	f
neosnippet#mappings#expandable	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expandable() "{{{$/;"	f
neosnippet#mappings#expandable_or_jumpable	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expandable_or_jumpable() "{{{$/;"	f
neosnippet#mappings#jump_impl	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jump_impl()$/;"	f
neosnippet#mappings#jump_or_expand_impl	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jump_or_expand_impl()$/;"	f
neosnippet#mappings#jumpable	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jumpable() "{{{$/;"	f
neosnippet#parser#_initialize_snippet	bundle/neosnippet/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_initialize_snippet(dict, path, line, pattern, name) "{{{$/;"	f
neosnippet#parser#_initialize_snippet_options	bundle/neosnippet/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_initialize_snippet_options() "{{{$/;"	f
neosnippet#parser#_parse	bundle/neosnippet/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_parse(snippet_file) "{{{$/;"	f
neosnippet#util#escape_pattern	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#escape_pattern(...) "{{{$/;"	f
neosnippet#util#expand	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#expand(path) "{{{$/;"	f
neosnippet#util#get_cur_text	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_cur_text() "{{{$/;"	f
neosnippet#util#get_last_status	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_last_status(...) "{{{$/;"	f
neosnippet#util#get_vital	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_vital() "{{{$/;"	f
neosnippet#util#has_vimproc	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#has_vimproc(...) "{{{$/;"	f
neosnippet#util#iconv	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#iconv(...) "{{{$/;"	f
neosnippet#util#is_mac	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_mac(...) "{{{$/;"	f
neosnippet#util#is_sudo	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_sudo() "{{{$/;"	f
neosnippet#util#is_windows	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_windows(...) "{{{$/;"	f
neosnippet#util#option2list	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#option2list(str) "{{{$/;"	f
neosnippet#util#parse_options	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#parse_options(args, options_list) "{{{$/;"	f
neosnippet#util#print_error	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#print_error(string) "{{{$/;"	f
neosnippet#util#set_default	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_default(var, val, ...)  "{{{$/;"	f
neosnippet#util#set_dictionary_helper	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_dictionary_helper(...) "{{{$/;"	f
neosnippet#util#strwidthpart	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#strwidthpart(...) "{{{$/;"	f
neosnippet#util#substitute_path_separator	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#substitute_path_separator(...) "{{{$/;"	f
neosnippet#util#system	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#system(...) "{{{$/;"	f
neosnippet#util#truncate	bundle/neosnippet/autoload/neosnippet/util.vim	/^function! neosnippet#util#truncate(...) "{{{$/;"	f
neosnippet#variables#current_neosnippet	bundle/neosnippet/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#current_neosnippet() "{{{$/;"	f
neosnippet#variables#data_dir	bundle/neosnippet/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#data_dir() "{{{$/;"	f
neosnippet#variables#expand_stack	bundle/neosnippet/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#expand_stack() "{{{$/;"	f
neosnippet#variables#runtime_dir	bundle/neosnippet/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#runtime_dir() "{{{$/;"	f
neosnippet#variables#set_snippets	bundle/neosnippet/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#set_snippets(list) "{{{$/;"	f
neosnippet#variables#snippets	bundle/neosnippet/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#snippets() "{{{$/;"	f
neosnippet#variables#snippets_dir	bundle/neosnippet/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#snippets_dir() "{{{$/;"	f
neosnippet#view#_expand	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! neosnippet#view#_expand(cur_text, col, trigger_name) "{{{$/;"	f
neosnippet#view#_get_snippet_range	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! neosnippet#view#_get_snippet_range(begin_line, begin_patterns, end_line, end_patterns) "{{{$/;"	f
neosnippet#view#_jump	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! neosnippet#view#_jump(cur_text, col) "{{{$/;"	f
neosnippet#view#_search_snippet_range	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! neosnippet#view#_search_snippet_range(start, end, cnt, ...) "{{{$/;"	f
nerdtree#bookmarkNode	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bookmarkNode(...)$/;"	f
nerdtree#bufInWindows	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bufInWindows(bnum)$/;"	f
nerdtree#centerView	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#centerView()$/;"	f
nerdtree#chRoot	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRoot(node)$/;"	f
nerdtree#chRootCwd	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRootCwd()$/;"	f
nerdtree#checkForBrowse	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#clearBookmarks	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#clearBookmarks(bookmarks)$/;"	f
nerdtree#closeTree	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTree()$/;"	f
nerdtree#closeTreeIfOpen	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfOpen()$/;"	f
nerdtree#closeTreeIfQuitOnOpen	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfQuitOnOpen()$/;"	f
nerdtree#compareBookmarks	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#completeBookmarks	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#createDefaultBindings	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#createDefaultBindings()$/;"	f
nerdtree#deprecated	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#dumpHelp	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#dumpHelp()$/;"	f
nerdtree#echo	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#escChars	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#escChars()$/;"	f
nerdtree#exec	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#findAndRevealPath	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#findAndRevealPath()$/;"	f
nerdtree#firstUsableWindow	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#firstUsableWindow()$/;"	f
nerdtree#getPath	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getPath(ln)$/;"	f
nerdtree#getTreeWinNum	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getTreeWinNum()$/;"	f
nerdtree#has_opt	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#indentLevelFor	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#indentLevelFor(line)$/;"	f
nerdtree#invokeKeyMap	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#invokeKeyMap(key)$/;"	f
nerdtree#isTreeOpen	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isTreeOpen()$/;"	f
nerdtree#isWindowUsable	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isWindowUsable(winnumber)$/;"	f
nerdtree#jumpToChild	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToChild(currentNode, direction)$/;"	f
nerdtree#jumpToSibling	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToSibling(currentNode, forward)$/;"	f
nerdtree#loadClassFiles	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#openBookmark	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#openBookmark(name)$/;"	f
nerdtree#postSourceActions	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#promptToDelBuffer	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#promptToDelBuffer(bufnum, msg)$/;"	f
nerdtree#putCursorInTreeWin	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorInTreeWin()$/;"	f
nerdtree#putCursorOnBookmarkTable	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorOnBookmarkTable()$/;"	f
nerdtree#renderBookmarks	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderBookmarks()$/;"	f
nerdtree#renderView	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#renderViewSavingPosition	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderViewSavingPosition()$/;"	f
nerdtree#restoreScreenState	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#restoreScreenState()$/;"	f
nerdtree#revealBookmark	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#revealBookmark(name)$/;"	f
nerdtree#runningWindows	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#saveScreenState	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#saveScreenState()$/;"	f
nerdtree#stripMarkupFromLine	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
nerdtree#tabpagevar	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#tabpagevar(tabnr, var)$/;"	f
nerdtree#treeExistsForBuf	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForBuf()$/;"	f
nerdtree#treeExistsForTab	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForTab()$/;"	f
nerdtree#treeMarkupReg	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeMarkupReg()$/;"	f
nerdtree#treeUpDirLine	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeUpDirLine()$/;"	f
nerdtree#treeWid	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeWid()$/;"	f
nerdtree#unique	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#unique(list)$/;"	f
nerdtree#upDir	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#upDir(keepState)$/;"	f
nerdtree#version	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nr2byte	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2byte(nr)$/;"	f
nr2byte	bundle/vim-go/autoload/webapi/json.vim	/^function! s:nr2byte(nr)$/;"	f
nr2enc_char	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2enc_char	bundle/vim-go/autoload/webapi/json.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2hex	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2hex(nr)$/;"	f
nsplit	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nsplit(expr, n, ...)$/;"	f
onBufDelete	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f
onBufWriteCmd	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f
onCommandPre	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:onCommandPre()$/;"	f
on_colorscheme_changed	bundle/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
on_cursormove	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:on_cursormove(min_count, total_count)$/;"	f
on_window_changed	bundle/vim-airline/plugin/airline.vim	/^function! s:on_window_changed()$/;"	f
openExplorer	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:openVSplit(target)$/;"	f
open_quickfix	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:open_quickfix(request, copen) abort$/;"	f
opendir	bundle/vim-vinegar/plugin/vinegar.vim	/^function! s:opendir(cmd)$/;"	f
opfunc	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
or	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:or(xs)$/;"	f
or	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:or(xs)$/;"	f
os	bundle/Vim-L9/autoload/l9/async.py	/^import os$/;"	i
osascript	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! s:osascript(...) abort$/;"	f
pad_between_letters	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_between_letters(str, width, ...)$/;"	f
pad_both_sides	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_both_sides(str, width, ...)$/;"	f
pad_left	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_left(str, width, ...)$/;"	f
pad_right	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_right(str, width, ...)$/;"	f
pane_id	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! s:pane_id(pane) abort$/;"	f
parse	bundle/neosnippet/autoload/neosnippet/parser.vim	/^function! s:parse(snippet_file) "{{{$/;"	f
parseChangesLine	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:parseChangesLine(line)$/;"	f
parseHelpTagEntry	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:parseHelpTagEntry(line, tagFile)$/;"	f
parseHelpTagFiles	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:parseHelpTagFiles(tagFiles, key)$/;"	f
parseJumpsLine	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:parseJumpsLine(line, bufnrPrev)$/;"	f
parseJumpsLine	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:parseJumpsLine(line)$/;"	f
parseTagFiles	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagFiles	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagLine	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:parseTagLine(line)$/;"	f
parse_snippet_name	bundle/neosnippet/autoload/neosnippet/parser.vim	/^function! s:parse_snippet_name(snippet_file, line, linenr, dup_check) "{{{$/;"	f
partition	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:partition(f, xs)$/;"	f
partition	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:partition(f, xs)$/;"	f
path2directory	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:path2directory(path)$/;"	f
path2directory	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:path2directory(path)$/;"	f
path2project_directory	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
path2project_directory	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#fnameescape	autoload/pathogen.vim	/^function! pathogen#fnameescape(string) " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
pop	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:pop(list)$/;"	f
pop	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:pop(list)$/;"	f
previewNodeCurrent	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_active_worker_keys	bundle/Vim-L9/autoload/l9/async.py	/^    def print_active_worker_keys(self):$/;"	m	class:Asyncer
print_function	bundle/syntastic/syntax_checkers/python/compile.py	/^from __future__ import print_function$/;"	i
print_output	bundle/Vim-L9/autoload/l9/async.py	/^    def print_output(self, var_key):$/;"	m	class:Asyncer
print_worker_keys	bundle/Vim-L9/autoload/l9/async.py	/^    def print_worker_keys(self):$/;"	m	class:Asyncer
process	bundle/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process_delimiter	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! s:process_delimiter(context, candidate, delimiter, delim_cnt)$/;"	f
promptToDelBuffer	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	bundle/git-nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
promptline#api#create_snapshot_with_theme	bundle/promptline/autoload/promptline/api.vim	/^fun! promptline#api#create_snapshot_with_theme(file, theme)$/;"	f
promptline#api#create_theme_from_airline	bundle/promptline/autoload/promptline/api.vim	/^fun! promptline#api#create_theme_from_airline(mode_palette)$/;"	f
promptline#create_snapshot	bundle/promptline/autoload/promptline.vim	/^fun! promptline#create_snapshot(file, theme, preset) abort$/;"	f
promptline#presets#clear#get	bundle/promptline/autoload/promptline/presets/clear.vim	/^fun! promptline#presets#clear#get()$/;"	f
promptline#presets#full#get	bundle/promptline/autoload/promptline/presets/full.vim	/^fun! promptline#presets#full#get()$/;"	f
promptline#presets#load_preset	bundle/promptline/autoload/promptline/presets.vim	/^fun! promptline#presets#load_preset(preset) abort$/;"	f
promptline#presets#load_stock_preset	bundle/promptline/autoload/promptline/presets.vim	/^fun! promptline#presets#load_stock_preset(preset_name) abort$/;"	f
promptline#presets#powerlineclone#get	bundle/promptline/autoload/promptline/presets/powerlineclone.vim	/^fun! promptline#presets#powerlineclone#get()$/;"	f
promptline#sections#make_prompt	bundle/promptline/autoload/promptline/sections.vim	/^fun! promptline#sections#make_prompt( function_name, preset ) abort$/;"	f
promptline#sections#make_ps1	bundle/promptline/autoload/promptline/sections.vim	/^fun! promptline#sections#make_ps1( function_name, preset ) abort$/;"	f
promptline#sections#make_right_prompt	bundle/promptline/autoload/promptline/sections.vim	/^fun! promptline#sections#make_right_prompt( function_name, preset ) abort$/;"	f
promptline#sections#used_functions	bundle/promptline/autoload/promptline/sections.vim	/^fun! promptline#sections#used_functions( preset ) abort$/;"	f
promptline#slices#battery	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#battery(...)$/;"	f
promptline#slices#battery#function_body	bundle/promptline/autoload/promptline/slices/battery.vim	/^fun! promptline#slices#battery#function_body(options)$/;"	f
promptline#slices#cwd	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#cwd(...)$/;"	f
promptline#slices#cwd#function_body	bundle/promptline/autoload/promptline/slices/cwd.vim	/^fun! promptline#slices#cwd#function_body( options )$/;"	f
promptline#slices#git_status	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#git_status(...)$/;"	f
promptline#slices#host	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#host(...)$/;"	f
promptline#slices#jobs	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#jobs(...)$/;"	f
promptline#slices#jobs#function_body	bundle/promptline/autoload/promptline/slices/jobs.vim	/^fun! promptline#slices#jobs#function_body(...)$/;"	f
promptline#slices#last_exit_code	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#last_exit_code(...)$/;"	f
promptline#slices#last_exit_code#function_body	bundle/promptline/autoload/promptline/slices/last_exit_code.vim	/^fun! promptline#slices#last_exit_code#function_body(...)$/;"	f
promptline#slices#python_virtualenv	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#python_virtualenv(...)$/;"	f
promptline#slices#user	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#user(...)$/;"	f
promptline#slices#vcs_branch	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#vcs_branch(...)$/;"	f
promptline#slices#vcs_branch#function_body	bundle/promptline/autoload/promptline/slices/vcs_branch.vim	/^fun! promptline#slices#vcs_branch#function_body(options)$/;"	f
promptline#slices#wrapper	bundle/promptline/autoload/promptline/slices.vim	/^fun! promptline#slices#wrapper(...)$/;"	f
promptline#snapshot	bundle/promptline/autoload/promptline.vim	/^fun! promptline#snapshot(overwrite, file, ...) abort$/;"	f
promptline#symbols#get	bundle/promptline/autoload/promptline/symbols.vim	/^fun! promptline#symbols#get()$/;"	f
promptline#themes#airline#get	bundle/promptline/autoload/promptline/themes/airline.vim	/^fun! promptline#themes#airline#get()$/;"	f
promptline#themes#airline_insert#get	bundle/promptline/autoload/promptline/themes/airline_insert.vim	/^fun! promptline#themes#airline_insert#get()$/;"	f
promptline#themes#airline_visual#get	bundle/promptline/autoload/promptline/themes/airline_visual.vim	/^fun! promptline#themes#airline_visual#get()$/;"	f
promptline#themes#create_theme_from_airline	bundle/promptline/autoload/promptline/themes.vim	/^fun! promptline#themes#create_theme_from_airline(mode_palette)$/;"	f
promptline#themes#create_theme_from_lightline	bundle/promptline/autoload/promptline/themes.vim	/^fun! promptline#themes#create_theme_from_lightline(mode_palette)$/;"	f
promptline#themes#jelly#get	bundle/promptline/autoload/promptline/themes/jelly.vim	/^fun! promptline#themes#jelly#get()$/;"	f
promptline#themes#lightline#get	bundle/promptline/autoload/promptline/themes/lightline.vim	/^fun! promptline#themes#lightline#get()$/;"	f
promptline#themes#lightline_insert#get	bundle/promptline/autoload/promptline/themes/lightline_insert.vim	/^fun! promptline#themes#lightline_insert#get()$/;"	f
promptline#themes#lightline_visual#get	bundle/promptline/autoload/promptline/themes/lightline_visual.vim	/^fun! promptline#themes#lightline_visual#get()$/;"	f
promptline#themes#load_airline_theme	bundle/promptline/autoload/promptline/themes.vim	/^fun! promptline#themes#load_airline_theme(...)$/;"	f
promptline#themes#load_lightline_theme	bundle/promptline/autoload/promptline/themes.vim	/^fun! promptline#themes#load_lightline_theme(mode) abort$/;"	f
promptline#themes#load_stock_theme	bundle/promptline/autoload/promptline/themes.vim	/^fun! promptline#themes#load_stock_theme(theme_name) abort$/;"	f
promptline#themes#load_theme	bundle/promptline/autoload/promptline/themes.vim	/^fun! promptline#themes#load_theme(theme) abort$/;"	f
promptline#themes#powerlineclone#get	bundle/promptline/autoload/promptline/themes/powerlineclone.vim	/^fun! promptline#themes#powerlineclone#get()$/;"	f
prototype.AssessName	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.AssessName(world, name) dict "{{{3$/;"	f
prototype.BuildTableList	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.BuildTableList() dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/Filter_glob.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.ClearAllMarks	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.ClearAllMarks() dict "{{{3$/;"	f
prototype.CloseScratch	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.CloseScratch(...) dict "{{{3$/;"	f
prototype.CurrentItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.CurrentItem() dict "{{{3$/;"	f
prototype.DisplayFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayFilter() dict "{{{3$/;"	f
prototype.DisplayFormat	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayFormat(list) dict "{{{3$/;"	f
prototype.DisplayHelp	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayHelp() dict "{{{3$/;"	f
prototype.DisplayList	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayList(...) dict "{{{3$/;"	f
prototype.DisplayListMark	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayListMark(x, y, mark) dict "{{{3$/;"	f
prototype.Dummy	bundle/tlib_vim/autoload/tlib/Test.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Dummy	bundle/tlib_vim/autoload/tlib/TestChild.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Extend	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.Extend(dictionary) dict "{{{3$/;"	f
prototype.FilterIsEmpty	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FilterIsEmpty() dict "{{{3$/;"	f
prototype.FilterRxPrefix	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FilterRxPrefix	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FollowCursor	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FollowCursor() dict "{{{3$/;"	f
prototype.FormatArgs	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FormatArgs(format_string, arg) dict "{{{3$/;"	f
prototype.FormatFilename	bundle/tlib_vim/autoload/tlib/World.vim	/^    function! s:prototype.FormatFilename(file) dict "{{{3$/;"	f
prototype.FormatName	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FormatName(cache, format, value) dict "{{{3$/;"	f
prototype.GetBaseIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx(idx) dict "{{{3$/;"	f
prototype.GetBaseIdx0	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx0(idx) dict "{{{3$/;"	f
prototype.GetBaseItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseItem(idx) dict "{{{3$/;"	f
prototype.GetItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetItem(idx) dict "{{{3$/;"	f
prototype.GetLineIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetLineIdx(lnum) dict "{{{3$/;"	f
prototype.GetListIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetListIdx(baseidx) dict "{{{3$/;"	f
prototype.GetResize	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetResize(size) dict "{{{3$/;"	f
prototype.GetRx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetRx(filter) dict "{{{3$/;"	f
prototype.GetRx0	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetRx0(...) dict "{{{3$/;"	f
prototype.GetSelectedItems	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetSelectedItems(current) dict "{{{3$/;"	f
prototype.Help	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	bundle/tlib_vim/autoload/tlib/Filter_glob.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Highlight_filename	bundle/tlib_vim/autoload/tlib/World.vim	/^    function! s:prototype.Highlight_filename() dict "{{{3$/;"	f
prototype.Inherit	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.Inherit(object) dict "{{{3$/;"	f
prototype.Init	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Init	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Init	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.InitFormatName	bundle/tlib_vim/autoload/tlib/World.vim	/^    function! s:prototype.InitFormatName() dict "{{{3 $/;"	f
prototype.InitHelp	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.InitHelp() dict "{{{3$/;"	f
prototype.Initialize	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Initialize() dict "{{{3$/;"	f
prototype.IsA	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.IsA(class) dict "{{{3$/;"	f
prototype.IsRelated	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.IsRelated(object) dict "{{{3$/;"	f
prototype.IsValidFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.IsValidFilter() dict "{{{3$/;"	f
prototype.Leave	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Leave() dict "{{{3$/;"	f
prototype.MarkCurrent	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.MarkCurrent(y) dict "{{{3$/;"	f
prototype.Match	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Match(world, text) dict "{{{3$/;"	f
prototype.MatchBaseIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.MatchBaseIdx(idx) dict "{{{3$/;"	f
prototype.New	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.New(...) dict "{{{3$/;"	f
prototype.PopFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.PopFilter() dict "{{{3$/;"	f
prototype.Pretty	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Pretty(filter) dict "{{{3$/;"	f
prototype.PrintLines	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.PrintLines() dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_glob.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.PushFrontFilter(char) dict "{{{3$/;"	f
prototype.PushHelp	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.PushHelp(...) dict "{{{3$/;"	f
prototype.Query	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Query() dict "{{{3$/;"	f
prototype.ReduceFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.ReduceFilter() dict "{{{3$/;"	f
prototype.ReduceFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.ReduceFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.Reset	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Reset(...) dict "{{{3$/;"	f
prototype.ResetSelected	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.ResetSelected() dict "{{{3$/;"	f
prototype.Resize	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Resize(hsize, vsize) dict "{{{3$/;"	f
prototype.RespondTo	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.RespondTo(name) dict "{{{3$/;"	f
prototype.RestoreOrigin	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.RestoreOrigin(...) dict "{{{3$/;"	f
prototype.Retrieve	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Retrieve(anyway) dict "{{{3$/;"	f
prototype.ScrollToOffset	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.ScrollToOffset() dict "{{{3$/;"	f
prototype.SelectItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SelectItem(mode, index) dict "{{{3$/;"	f
prototype.SelectItemsByNames	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SelectItemsByNames(mode, items) dict "{{{3$/;"	f
prototype.SetBaseItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetBaseItem(idx, item) dict "{{{3$/;"	f
prototype.SetFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetFilter() dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_glob.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetFrontFilter(pattern) dict "{{{3$/;"	f
prototype.SetInitialFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetInitialFilter(filter) dict "{{{3$/;"	f
prototype.SetMatchMode	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetMatchMode(match_mode) dict "{{{3$/;"	f
prototype.SetOffset	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetOffset() dict "{{{3$/;"	f
prototype.SetOrigin	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetOrigin(...) dict "{{{3$/;"	f
prototype.SetPrefIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetPrefIdx() dict "{{{3$/;"	f
prototype.SetStatusline	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetStatusline(query) dict "{{{3$/;"	f
prototype.Set_display_format	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Set_display_format(value) dict "{{{3$/;"	f
prototype.Set_highlight_filename	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Set_highlight_filename() dict "{{{3$/;"	f
prototype.Super	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.Super(method, arglist) dict "{{{3$/;"	f
prototype.Suspend	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Suspend() dict "{{{3$/;"	f
prototype.SwitchWindow	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SwitchWindow(where) dict "{{{3$/;"	f
prototype.UseFilenameIndicators	bundle/tlib_vim/autoload/tlib/World.vim	/^    function! s:prototype.UseFilenameIndicators() dict "{{{3$/;"	f
prototype.UseInputListScratch	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.UseInputListScratch() dict "{{{3$/;"	f
prototype.UseScratch	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.UseScratch() dict "{{{3$/;"	f
prototype.add_raw	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text)$/;"	f
prototype.add_section	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents)$/;"	f
prototype.add_section_spaced	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents)$/;"	f
prototype.build	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build()$/;"	f
prototype.split	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...)$/;"	f
push	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:push(list, val)$/;"	f
push	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:push(list, val)$/;"	f
put	bundle/Vim-L9/autoload/l9/async.py	/^    def put(self, executor):$/;"	m	class:Worker
qflist	bundle/vim-go/autoload/go/oracle.vim	/^func! s:qflist(output)$/;"	f
rand	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! s:rand(max) "{{{$/;"	f
readfile	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
readfile	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
recall	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
record_output	bundle/Vim-L9/autoload/l9/async.py	/^    def record_output(self, line):$/;"	m	class:Worker
redraw	bundle/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
refreshCurrent	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:refreshRoot()$/;"	f
registerCoverage	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:registerCoverage()$/;"	f
reindent	bundle/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
removeItemFromCache	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:removeItemFromCache(word)$/;"	f
renewCachesOfAllModes	bundle/fuzzyfinder/plugin/fuf.vim	/^function s:renewCachesOfAllModes()$/;"	f
replace	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:replace(str, from, to)$/;"	f
replace_first	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:replace_first(str, from, to)$/;"	f
repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_configured_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_configured_tree() dict abort$/;"	f
repo_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
request	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:request(request) abort$/;"	f
resolveFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:resolveFiletypes(...) " {{{2$/;"	f
reverse	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:reverse(str)$/;"	f
rgb	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb_color	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_level	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_number	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/Zhoeon_colors/colors/summerfruit256.vim	/^    fun <SID>rgb_number(x)$/;"	f
run	bundle/Vim-L9/autoload/l9/async.py	/^    def run(self):$/;"	m	class:Worker
running	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:running(pid) abort$/;"	f
s	bundle/tlib_vim/spec/tlib/rx.vim	/^    let s = printf('%sfoo%sbar%s', c, c, c)$/;"	v
s	bundle/tlib_vim/test/tlib.vim	/^    let s = printf('%sfoo%sbar%s', c, c, c)$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s:ABBR_SNIP_MASK	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:ABBR_SNIP_MASK = '...'$/;"	v
s:ASYNC_PY_PATH	bundle/Vim-L9/autoload/l9/async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
s:BB	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format blocks$/;"	v
s:BG	bundle/promptline/autoload/promptline.vim	/^let s:BG = 1$/;"	v
s:BLOCKLEVEL_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:BaseTag	bundle/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:Bookmark	bundle/git-nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^let s:Cache = neocomplete#util#get_vital().import('System.Cache')$/;"	v
s:Cache	bundle/neosnippet/autoload/neosnippet/parser.vim	/^let s:Cache = neosnippet#util#get_vital().import('System.Cache')$/;"	v
s:Creator	bundle/git-nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:DATA_FILE_VERSION	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:DATA_FILE_VERSION = 400$/;"	v
s:DEFAULT_LEFT_ONLY_SECTIONS	bundle/promptline/autoload/promptline/presets.vim	/^let s:DEFAULT_LEFT_ONLY_SECTIONS = [ 'a', 'b', 'c', 'x', 'y', 'z', 'warn' ]$/;"	v
s:DEFAULT_LEFT_SECTIONS	bundle/promptline/autoload/promptline/presets.vim	/^let s:DEFAULT_LEFT_SECTIONS      = [ 'a', 'b', 'c' ]$/;"	v
s:DEFAULT_RIGHT_SECTIONS	bundle/promptline/autoload/promptline/presets.vim	/^let s:DEFAULT_RIGHT_SECTIONS     = [ 'warn', 'x', 'y', 'z' ]$/;"	v
s:EMPTY_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:FG	bundle/promptline/autoload/promptline.vim	/^let s:FG = 0$/;"	v
s:FUF_BUF_NAME	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:FUF_BUF_NAME = '[fuf]'$/;"	v
s:FileInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:Help	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^let s:Help = s:prototype.Help$/;"	v
s:Help	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^let s:Help = s:prototype.Help$/;"	v
s:Help	bundle/tlib_vim/autoload/tlib/Filter_glob.vim	/^let s:Help = s:prototype.Help$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 232 , 39  ] " blackestgravel & tardis$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I1 = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I1 = [ '#242322' , '#7eaefd' , 234 , 111 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I1 = [ '#1a1a18' , '#1693a5' , 232 , 62 ] " blackestgravel & crystallake$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I1 = [ '#ffffff' , '#789f00' , 231 , 106 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I1 = [ '#080808' , '#66d9ef' , 232 , 81 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks in insert mode$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I1 = [ '#005f5f' , '#ffffff' , 23  , 231 ] " darkestcyan    & white$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I1 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I1 = [ '#5fff00' , s:guibg , 82  , s:termbg ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I1 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I1 = [ s:guibg, '#5fff00' , s:termbg , 82 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I1 = [ '#eeeeee' , '#09643f' , 255 , 30  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I1 = [ '#1a1a18' , '#fade3e' , 232 , 221 ] " blackestgravel & warmcorn$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I1 = ['#FFFFFF', '#87AF5F', 15, 107] " Outside blocks in normal mode (mode and file position)$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 227 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 222 , 27  ] " dirtyblonde    & facebook$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I2 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I2 = [ '#75d7d8' , '#242322' , 80  , 234 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I2 = [ '#515744' , '#44403a' , 101 , 238 ] " lichen & deepgravel$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I2 = [ '#005f00' , '#00df87' , 22  , 42  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I2 = [ '#ffffff' , '#003f3f' , 231 , 29  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I2 = [ '#5fafd7' , '#0087af' , 74  , 31  ] " darkcyan       & darkblue$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I2 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I2 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I2 = [ '#c7b386' , '#45413b' , 252 , 238 ] " bleaksand & deepgravel$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 227 , 236 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 39  , 235 ] " tardis         & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I3 = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I3 = [ '#1693a5' , '#2e2d2a' , 39 , 235 ] " crystallake & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I3 = [ '#ffffff' , '#002b2b' , 231 , 23  ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I3 = [ '#f8f8f0' , '#465457' , 253 , 67 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ] " mediumcyan     & darkestblue$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I3 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I3 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I3 = [ '#f4cf86' , '#242321' , 222 , 235 ] " lighttannedskin & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 227 , 234 ]$/;"	v
s:I4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I4 = [ '#FADE3E' , 221 ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_dark_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3], s:N3[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:IA = [ '#4e4e4e' , '#002b2b' , 59 , 23 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:IA = [ '#1b1d1e' , '#465457' , 233 , 67 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:IA = [ '#5e5e5e' , '#222222' , 59 , 235 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:IA = [ '#a1a1a1' , '#dddddd' , 145 , 188 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:IA = [ '#777777' , '#c7c7c7' , 244 , 251 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA1 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA1 = [ '#666666' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA1 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA2 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:IA2 = [ '#4e4e4e' , s:guisep , 239 , s:termsep , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:IA2 = [ '#4e4e4e' , s:guibg2 , 239 , s:termbg2 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA2 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA3 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA3 = [ '#a8a8a8' , '#ffffff' , 248 , 255 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA3 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IGNORE_ERRORS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:IM	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:IM = [ '#40403C' , 238 ]$/;"	v
s:INLINE_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:KeyMap	bundle/git-nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KindheaderTag	bundle/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:L9_VERSION_CURRENT	bundle/Vim-L9/autoload/l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
s:L9_VERSION_PASSABLE	bundle/Vim-L9/autoload/l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
s:List	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:List = neocomplete#util#get_vital().import('Data.List')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/file.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/help.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MenuController	bundle/git-nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/git-nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 232 , 154 ] " blackestgravel & lime$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N1   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N1 = [ '#e2e2e2' , '#4f3598' , 254 , 56  ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ] " blackestgravel & snow$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N1 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N1 = [ '#ffffff' , '#005252' , 231  , 36 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N1 = [ '#080808' , '#e6db74' , 232 , 144 ] " mode$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks in normal mode$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ] " darkestgreen   & brightgreen$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N1 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N1 = [ '#00dfff' , s:guibg , 45  , s:termbg ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N1 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N1 = [ s:guibg , '#00dfff' , s:termbg , 45 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N1 = [ '#343434' , '#a0a0a0' , 237 , 248 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N1 = [ '#141413' , '#c7b386' , 232 , 252 ] " blackestgravel & bleaksand$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N1 = ['#FFFFFF', '#5F87FF', 15, 69]  " Outside blocks in normal mode (mode and file position)$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 192 ] " mode$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 222 , 238 ] " dirtyblonde    & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N2   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N2 = [ '#ff5fd7' , '#242322' , 206 , 234 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N2 = [ '#ffffff' , '#44403a' , 255, 238 ] " snow & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N2 = [ '#000087' , '#00dfff' , 18  , 45  ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 16  ] " info$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N2 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N2 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N2 = [ '#343434' , '#b3b3b3' , 237 , 250 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N2 = [ '#c7b386' , '#45413b' , 252, 238 ] " bleaksand & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 192 , 236 ] " info$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 121 , 235 ] " saltwatertaffy & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N3   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N3 = [ '#90a680' , '#2e2d2a' , 64, 235 ] " dilutedpaint & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N3 = [ '#ffffff' , '#002b2b' , 231  , 23 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N3 = [ '#f8f8f0' , '#465457' , 253 , 67  ] " statusline$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N3 = [ '#ffffff' , '#121212' , 231 , 233 ] " white          & gray4$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N3 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N3 = [ '#767676' , s:guibg, 243 , s:termbg]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N3 = [ '#343434' , '#c7c7c7' , 237 , 252 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N3 = [ '#b88853' , '#242321' , 137, 235 ] " toffee & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 192 , 234 ] " statusline$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N4 = [ '#777470' , 240 ] " gravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N4 = [ '#857f78' , 243 ] " gravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N4 = [ '#86CD74' , 113 ]                   " mode modified$/;"	v
s:NERDTreeIndicatorMap	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^        let s:NERDTreeIndicatorMap = {$/;"	v
s:NERDTreeIndicatorMap	bundle/git-nerdtree/nerdtree_plugin/git_status.vim	/^    let s:NERDTreeIndicatorMap = {}$/;"	v
s:NERDTreeSortStarIndex	bundle/git-nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NormalTag	bundle/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:OPEN_TYPE_CURRENT	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_CURRENT = 1$/;"	v
s:OPEN_TYPE_DELETE	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_EXPAND	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:OPEN_TYPE_EXPAND = -1$/;"	v
s:OPEN_TYPE_SPLIT	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_SPLIT   = 2$/;"	v
s:OPEN_TYPE_TAB	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_TAB     = 4$/;"	v
s:OPEN_TYPE_VSPLIT	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_VSPLIT  = 3$/;"	v
s:Opener	bundle/git-nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:PA = [ '#ab3e5d' , 161 ] " raspberry$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:PA = [ '#f9ef6d' , 154 ] " bleaklemon$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:PA = [ '#94E42C' , 47 ]$/;"	v
s:Path	bundle/git-nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:PropertyTypes	bundle/vimtodo/ftplugin/todo.vim	/^let s:PropertyTypes = {$/;"	v
s:PropertyVars	bundle/vimtodo/ftplugin/todo.vim	/^let s:PropertyVars = {$/;"	v
s:PseudoTag	bundle/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R1 = [ '#d75fff' , '#ffffff','171','231']$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside blocks in replace mode$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 173 ]$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R2 = [ '#5f005f' , '#d75fff','53','171']$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle block$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 173 , 236 ]$/;"	v
s:R3	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R3 = [ '#ff87ff' , '#8700af','213','91']$/;"	v
s:R3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 173 , 234 ]$/;"	v
s:R4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R4 = [ '#E55345' , 203 ]$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:RE = [ '#233e09' , 22 ] " oakleaf$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:RE = [ '#c7915b' , 173 ] " nut$/;"	v
s:SHELL_BG_CODE	bundle/promptline/autoload/promptline.vim	/^let s:SHELL_BG_CODE = 48$/;"	v
s:SHELL_FG_CODE	bundle/promptline/autoload/promptline.vim	/^let s:SHELL_FG_CODE = 38$/;"	v
s:SourcedFile	bundle/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:TEMP_VARIABLES_GROUP	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TEMP_VARIABLES_GROUP	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:Tlist_Skip_Refresh	bundle/taglist/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	bundle/git-nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	bundle/git-nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TypeInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:V	bundle/neocomplete/autoload/neocomplete/util.vim	/^let s:V = vital#of('neocomplete')$/;"	v
s:V	bundle/neosnippet/autoload/neosnippet/util.vim	/^let s:V = vital#of('neosnippet')$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 232 , 214 ] " blackestgravel & orange$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V1 = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V1 = [ '#0087ff' , '#ffffff','33','231']$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V1 = [ '#242322' , '#e6987a' , 234 , 180 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V1 = [ '#1a1a18' , '#ab3e5d' , 232 , 161 ] " blackestgravel & raspberry$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V1 = [ '#ffffff' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V1 = [ '#ffff9a' , '#ff8036' , 222 , 208 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V1 = [ '#080808' , '#fd971f' , 232 , 208 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks in visual mode$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V1 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V1 = [ '#dfdf00' , s:guibg , 184 , s:termbg ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V1 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V1 = [ s:guibg, '#dfdf00' , s:termbg , 184 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V1 = [ '#ffff9a' , '#ff6003' , 222 , 202 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V1 = [ '#1c1b1a' , '#9a4820' , 233 , 88 ] " blackgravel & warmadobe$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V1 = ['#080808', '#FFAF00', 232, 214]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V1 = ['#FFFFFF', '#AF5F00', 15, 130]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 153 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 16  , 221 ] " coal           & dalespale$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V2 = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V2 = [ '#005faf' , '#5fafff','25','75']$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V2 = [ '#dbc570' , '#242322' , 186 , 234 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V2 = [ '#000000' , '#908571' , 16 , 252 ] " coal & winterterrain$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 16  ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V2 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V2 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V2 = [ '#000000' , '#88633f' , 16 , 95 ] " coal & cappuccino$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V2 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 153 , 236 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V3 = [ '#000000' , '#b88853' , 16  , 137 ] " coal           & toffee$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V3 = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V3 = [ '#87d7ff' , '#005faf','117','25']$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V3 = [ '#ab3e5d' , '#8c7f77' , 161 , 245 ] " raspberry & wetcoldterrain$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V3 = [ '#df5f00' , '#ffff87' , 166 , 228 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V3 = [ '#ffffff' , '#002b2b' , 231  , 23  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V3 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V3 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V3 = [ '#88633f' , '#c7b386' , 95 , 252 ] " cappuccino & bleaksand$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V3 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 153 , 234 ]$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V4 = [ '#515744' , 101 ] " lichen$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V4 = [ '#c14c3d' , 160 ] " tannedumbrella$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V4 = [ '#7CB0E6' , 111 ]$/;"	v
s:VERSION_FACTOR	bundle/Vim-L9/autoload/l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:WI = [ '#ffffff', '#5f0000', 231, 88 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:WI = [ '#ff0000', '#2e2e2e', 196, 235 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:WI = [ '#ff0000', '#e1e1e1', 196, 188 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:WI = [ '#eeeeee', '#e33900', 255, 166 ]$/;"	v
s:_DEBUG_DUMP_OPTIONS	bundle/syntastic/plugin/syntastic.vim	/^let s:_DEBUG_DUMP_OPTIONS = [$/;"	v
s:_DEFAULT_CHECKERS	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_NOTIFIER_TYPES	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_running_windows	bundle/syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_uname	bundle/syntastic/plugin/syntastic.vim	/^        let s:_uname = system('uname')$/;"	v
s:_unify_path_cache	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_vital_files_cache	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache_runtimepath	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:abstract_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:accent1	bundle/Zhoeon_colors/hemisu.vim	/^	let s:accent1=s:middleDarkBlue$/;"	v
s:accent1	bundle/Zhoeon_colors/hemisu.vim	/^	let s:accent1=s:middleLightBlue$/;"	v
s:accent2	bundle/Zhoeon_colors/hemisu.vim	/^	let s:accent2=s:middleDarkGreen$/;"	v
s:accent2	bundle/Zhoeon_colors/hemisu.vim	/^	let s:accent2=s:middleLightGreen$/;"	v
s:accent3	bundle/Zhoeon_colors/hemisu.vim	/^	let s:accent3=s:lightGreen$/;"	v
s:accent3	bundle/Zhoeon_colors/hemisu.vim	/^	let s:accent3=s:middleDarkPink$/;"	v
s:accent4	bundle/Zhoeon_colors/hemisu.vim	/^	let s:accent4=s:darkTan$/;"	v
s:accent4	bundle/Zhoeon_colors/hemisu.vim	/^	let s:accent4=s:lightTan$/;"	v
s:accents	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^let s:action_table = {}$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^let s:action_table.expand = {$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^let s:action_table.preview = {$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^let s:action_table.unite__new_candidate = {$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:action_table = {}$/;"	v
s:action_table	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:action_table.neosnippet_source = {$/;"	v
s:active_winnr	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:active_winnr = -1$/;"	v
s:airline_initialized	bundle/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_tagbar_last_lookup_time	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:airline_theme_defined	bundle/vim-airline/plugin/airline.vim	/^let s:airline_theme_defined = 0$/;"	v
s:almostBlack	bundle/Zhoeon_colors/hemisu.vim	/^let s:almostBlack=     { "gui": "#111111", "cterm": "233" }$/;"	v
s:almostWhite	bundle/Zhoeon_colors/hemisu.vim	/^let s:almostWhite=     { "gui": "#EEEEEE", "cterm": "255" }$/;"	v
s:aqua	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:aqua = "99ffff"$/;"	v
s:aqua	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:aqua = "70c0b1"$/;"	v
s:aqua	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:aqua = "009999"$/;"	v
s:aqua	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:aqua = "8abeb7"$/;"	v
s:aqua	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:aqua = "3e999f"$/;"	v
s:async_dictionary_list	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_tags_list	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^  let s:async_tags_list = {}$/;"	v
s:autocommands_done	bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:b	bundle/colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	bundle/colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	bundle/colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	bundle/colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	bundle/colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	bundle/colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	bundle/colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:background	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:background = "002451"$/;"	v
s:background	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:background = "000000"$/;"	v
s:background	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:background = "2d2d2d"$/;"	v
s:background	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	let s:background = ""$/;"	v
s:background	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:background = "1d1f21"$/;"	v
s:background	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:background = "ffffff"$/;"	v
s:bar	bundle/tlib_vim/spec/tlib/var.vim	/^let s:bar = 4$/;"	v
s:bar	bundle/tlib_vim/test/tlib.vim	/^let s:bar = 4$/;"	v
s:base	bundle/tlib_vim/autoload/tlib/signs.vim	/^let s:base = 2327$/;"	v
s:base0	bundle/colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	bundle/colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	bundle/colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	bundle/colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	bundle/colors-solarized/colors/solarized.vim	/^    let s:base0       = "4".s:bright$/;"	v
s:base0	bundle/colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	bundle/colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	bundle/colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	bundle/colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	bundle/colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	bundle/colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	bundle/colors-solarized/colors/solarized.vim	/^    let s:base00      = "3".s:bright$/;"	v
s:base00	bundle/colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	bundle/colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	bundle/colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	bundle/colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	bundle/colors-solarized/colors/solarized.vim	/^    let s:base01      = "2".s:bright$/;"	v
s:base01	bundle/colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	bundle/colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	bundle/colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	bundle/colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	bundle/colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	bundle/colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	bundle/colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	bundle/colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	bundle/colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	bundle/colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	bundle/colors-solarized/colors/solarized.vim	/^    let s:base03      = "0".s:bright$/;"	v
s:base03	bundle/colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	bundle/colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	bundle/colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	bundle/colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	bundle/colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	bundle/colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	bundle/colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	bundle/colors-solarized/colors/solarized.vim	/^    let s:base1       = "6".s:bright$/;"	v
s:base1	bundle/colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	bundle/colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	bundle/colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	bundle/colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	bundle/colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	bundle/colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	bundle/colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	bundle/colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	bundle/colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	bundle/colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	bundle/colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	bundle/colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	bundle/colors-solarized/colors/solarized.vim	/^    let s:base3       = "7".s:bright$/;"	v
s:base3	bundle/colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:bg	bundle/Zhoeon_colors/hemisu.vim	/^	let s:bg=s:black$/;"	v
s:bg	bundle/Zhoeon_colors/hemisu.vim	/^	let s:bg=s:white$/;"	v
s:black	bundle/Zhoeon_colors/hemisu.vim	/^let s:black=           { "gui": "#000000", "cterm": "16"  }$/;"	v
s:blue	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:blue = "bbdaff"$/;"	v
s:blue	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:blue = "7aa6da"$/;"	v
s:blue	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:blue = "99cccc"$/;"	v
s:blue	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:blue = "81a2be"$/;"	v
s:blue	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:blue = "4271ae"$/;"	v
s:blue	bundle/colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	bundle/colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	bundle/colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	bundle/colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:bmru	bundle/tlib_vim/autoload/tlib/buffer.vim	/^let s:bmru = []$/;"	v
s:bright	bundle/colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:bufTimes	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:bufTimes = {}$/;"	v
s:buf_min_count	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	bundle/vim-airline/autoload/airline/extensions/tabline/default.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr	bundle/vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	bundle/vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr_format	bundle/vim-airline/autoload/airline/extensions/tabline/default.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	bundle/vim-airline/autoload/airline/extensions/tabline/default.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:bufferCursorPosMap	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:bufferCursorPosMap = {}$/;"	v
s:buffer_idx_mode	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:buffer_idx_mode = get(g:, 'airline#extensions#tabline#buffer_idx_mode', 0)$/;"	v
s:buffer_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_sources	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^  let s:buffer_sources = {}$/;"	v
s:builder	bundle/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	bundle/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	bundle/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder_context	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let s:builder_context.left_alt_sep = get(g:, 'airline#extensions#tabline#left_alt_sep' , '|')$/;"	v
s:builder_context	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let s:builder_context.left_alt_sep = get(g:, 'airline#extensions#tabline#left_alt_sep' , g:airline_left_alt_sep)$/;"	v
s:builder_context	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let s:builder_context.left_sep     = get(g:, 'airline#extensions#tabline#left_sep'     , ' ')$/;"	v
s:builder_context	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let s:builder_context.left_sep     = get(g:, 'airline#extensions#tabline#left_sep'     , g:airline_left_sep)$/;"	v
s:builder_context	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:builder_context = {$/;"	v
s:c	bundle/colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:c	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:c['cache_dir'] = get(s:c, 'cache_dir', expand('$HOME').'\/.vim-cache')$/;"	v
s:c	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:c['scanned_files'] = get(s:c, 'scanned_files', {})$/;"	v
s:c	bundle/vim-addon-mw-utils/autoload/glob.vim	/^let s:c['glob_cache'] = get(s:c, 'glob_cache', {})$/;"	v
s:c	bundle/vim-addon-mw-utils/autoload/glob.vim	/^let s:c['regex_ignore_directory'] = '\\<\\%([_.]darcs\\|\\.git\\|.svn\\|.hg\\|.cvs\\|.bzr\\)\\>'$/;"	v
s:cache	bundle/vim-snipmate/autoload/snipMate.vim	/^let s:cache = {}$/;"	v
s:cached_files	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^let s:cached_files = {}$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h') . syntastic#util#Slash() . 'erlang_check_file.erl')$/;"	v
s:checked_ctags	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:closeStack	bundle/autoclose/plugin/autoclose.vim	/^let s:closeStack = []$/;"	v
s:close_symbol	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:close_symbol = get(g:, 'airline#extensions#tabline#close_symbol', 'X')$/;"	v
s:cmd	bundle/jslint/ftplugin/javascript/jslint.vim	/^    let s:cmd = "$JS_CMD"$/;"	v
s:cmd	bundle/jslint/ftplugin/javascript/jslint.vim	/^    let s:cmd = '\/System\/Library\/Frameworks\/JavaScriptCore.framework\/Resources\/jsc'$/;"	v
s:cmd	bundle/jslint/ftplugin/javascript/jslint.vim	/^    let s:cmd = 'js'$/;"	v
s:cmd	bundle/jslint/ftplugin/javascript/jslint.vim	/^    let s:cmd = 'node'$/;"	v
s:cmd	bundle/jslint/ftplugin/javascript/jslint.vim	/^  let s:cmd = 'cscript \/NoLogo '$/;"	v
s:cmd	bundle/jslint/ftplugin/javascript/jslint.vim	/^let s:cmd = "cd " . s:plugin_path . " && " . s:cmd . " " . s:plugin_path . "runjslint." . s:runjslint_ext$/;"	v
s:cmd1	bundle/tlib_vim/autoload/tlib/vcs.vim	/^            let s:cmd1 = printf(g:tlib#vcs#check, s:cmd)$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:column_display	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:commands	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:comment	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:comment = "7285b7"$/;"	v
s:comment	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:comment = "969896"$/;"	v
s:comment	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:comment = "999999"$/;"	v
s:comment	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:comment = "969896"$/;"	v
s:comment	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:comment = "8e908c"$/;"	v
s:comment	bundle/Zhoeon_colors/hemisu.vim	/^	let s:comment=s:middleDarkGrey$/;"	v
s:comment	bundle/Zhoeon_colors/hemisu.vim	/^	let s:comment=s:middleLightGrey$/;"	v
s:common_efm	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compare_typeinfo	bundle/tagbar/autoload/tagbar.vim	/^let s:compare_typeinfo = {}$/;"	v
s:compiler	bundle/syntastic/syntax_checkers/python/python.vim	/^let s:compiler = expand('<sfile>:p:h') . syntastic#util#Slash() . 'compile.py'$/;"	v
s:contexts	bundle/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^let s:converter = {$/;"	v
s:core_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:cotstate	bundle/autoclose/plugin/autoclose.vim	/^let s:cotstate = &completeopt$/;"	v
s:cpo_save	bundle/taglist/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:cterm_alert	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_alert     = 88   " Modified file alert color$/;"	v
s:cterm_blue	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_blue = 67$/;"	v
s:cterm_blue	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_dark_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_dark_gray = 234$/;"	v
s:cterm_dark_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_green	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_green = 151$/;"	v
s:cterm_green	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_inactivebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivebg = 234 " Background for inactive mode$/;"	v
s:cterm_inactivefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivefg = 239 " Foreground for inactive mode$/;"	v
s:cterm_insertbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_insertbg  = 70   " Background for insert mode and file position blocks$/;"	v
s:cterm_insertfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_insertfg  = 15   " Foreground for insert mode and file position blocks$/;"	v
s:cterm_light_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_light_gray = 239$/;"	v
s:cterm_light_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_med_gray_hi	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_med_gray_hi = 236$/;"	v
s:cterm_med_gray_hi	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_lo	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_normalbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_normalbg  = 27   " Background for normal mode and file position blocks$/;"	v
s:cterm_normalfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_normalfg  = 15   " Foreground for normal mode and file position blocks$/;"	v
s:cterm_orange	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_orange = 173$/;"	v
s:cterm_orange	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_orange = 179$/;"	v
s:cterm_pink	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_pink = 182$/;"	v
s:cterm_pink	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_purple	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_purple = 139$/;"	v
s:cterm_purple	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_red	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_red = 131$/;"	v
s:cterm_red	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_red = 174$/;"	v
s:cterm_replacebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_replacebg = 88   " Background for replace mode and file position blocks$/;"	v
s:cterm_replacefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_replacefg = 15   " Foreground for replace mode and file position blocks$/;"	v
s:cterm_termbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg    = 237  " Background for branch and file format blocks$/;"	v
s:cterm_termbg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg2   = 234  " Background for middle block$/;"	v
s:cterm_termfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg    = 144  " Foreground for branch and file format blocks$/;"	v
s:cterm_termfg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg2   = 39   " Foreground for middle block$/;"	v
s:cterm_visualbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_visualbg  = 166  " Background for visual mode and file position blocks$/;"	v
s:cterm_visualfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_visualfg  = 15   " Foreground for visual mode and file position blocks$/;"	v
s:current_bufnr	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_bufnr = -1$/;"	v
s:current_fileencodings	bundle/vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	bundle/vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:current_modified	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_modified = 0$/;"	v
s:current_tabcnt	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabnr = -1$/;"	v
s:cyan	bundle/colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	bundle/colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	bundle/colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	bundle/colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cygwin	bundle/tlib_vim/autoload/tlib/sys.vim	/^let s:cygwin = {}$/;"	v
s:d	bundle/vim-snipmate/autoload/snipMate.vim	/^let s:d = nr2char(31)$/;"	v
s:darkBlue	bundle/Zhoeon_colors/hemisu.vim	/^let s:darkBlue=        { "gui": "#005F87", "cterm": "24"  }$/;"	v
s:darkGreen	bundle/Zhoeon_colors/hemisu.vim	/^let s:darkGreen=       { "gui": "#5F5F00", "cterm": "58"  }$/;"	v
s:darkGrey	bundle/Zhoeon_colors/hemisu.vim	/^let s:darkGrey=        { "gui": "#444444", "cterm": "238" }$/;"	v
s:darkPink	bundle/Zhoeon_colors/hemisu.vim	/^let s:darkPink=        { "gui": "#63001C", "cterm": "88"  }$/;"	v
s:darkTan	bundle/Zhoeon_colors/hemisu.vim	/^let s:darkTan=         { "gui": "#503D15", "cterm": "52"  }$/;"	v
s:dataMap	bundle/Vim-L9/autoload/l9/tempbuffer.vim	/^let s:dataMap = {}$/;"	v
s:debug	bundle/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debug_file	bundle/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:default_checks	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing']$/;"	v
s:default_comment_string	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:default_comment_string = s:DefaultValue('commentstring')$/;"	v
s:default_comments	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:default_comments       = s:DefaultValue('comments')$/;"	v
s:default_includes	bundle/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:default_preset	bundle/promptline/autoload/promptline.vim	/^let s:default_preset = 'powerlineclone'$/;"	v
s:default_theme	bundle/promptline/autoload/promptline.vim	/^let s:default_theme = 'powerlineclone'$/;"	v
s:define_cache_file	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:define_cache_file = "let this_dir = s:c['cache_dir'].'\/cached-file-contents' | let cache_file = expand(this_dir.'\/'.substitute(string([func_as_string, a:file]),'[[\\\\]{}:\/\\\\,''\\"# ]\\\\+','_','g'))"$/;"	v
s:definitions	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:definitions = {}$/;"	v
s:dictionary_cache	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^  let s:dictionary_cache = {}$/;"	v
s:did_auto_closetag	bundle/autoclosetag/ftplugin/html/autoclose.vim	/^let s:did_auto_closetag = 1$/;"	v
s:did_snip_helper	bundle/vim-snipmate/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:dimmed	bundle/Zhoeon_colors/hemisu.vim	/^	let s:dimmed=s:middleDarkGrey$/;"	v
s:dimmed	bundle/Zhoeon_colors/hemisu.vim	/^	let s:dimmed=s:middleLightGrey$/;"	v
s:dir_stack	bundle/tlib_vim/autoload/tlib/dir.vim	/^let s:dir_stack = []$/;"	v
s:doc_dict	bundle/neocomplete/autoload/neocomplete/echodoc.vim	/^let s:doc_dict = {$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:dotfiles	bundle/vim-vinegar/plugin/vinegar.vim	/^let s:dotfiles = '\\(^\\|\\s\\s\\)\\zs\\.\\S\\+'$/;"	v
s:dummy_sign_id	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:edit_options	bundle/neosnippet/autoload/neosnippet/commands.vim	/^let s:edit_options = [$/;"	v
s:enabled	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:escape	bundle/vim-vinegar/plugin/vinegar.vim	/^let s:escape = 'substitute(escape(v:val, ".$~"), "*", ".*", "g")'$/;"	v
s:excludes	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:excludes = get(g:, 'airline#extensions#tabline#excludes', [])$/;"	v
s:executables	bundle/tlib_vim/autoload/tlib/sys.vim	/^let s:executables = {}$/;"	v
s:exists_context_filetype	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^    let s:exists_context_filetype = 0$/;"	v
s:exists_context_filetype	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^    let s:exists_context_filetype = 1$/;"	v
s:exit_code	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:exit_code = 0$/;"	v
s:expand_bufnr	bundle/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:expandable	bundle/vim-dispatch/autoload/dispatch.vim	/^let s:expandable = '\\\\*\\%(<\\w\\+>\\|%\\|#\\d*\\)' . s:flags$/;"	v
s:ext	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:faint	bundle/Zhoeon_colors/hemisu.vim	/^	let s:faint=s:almostBlack$/;"	v
s:faint	bundle/Zhoeon_colors/hemisu.vim	/^	let s:faint=s:almostWhite$/;"	v
s:faintBlue	bundle/Zhoeon_colors/hemisu.vim	/^	let s:faintBlue=s:darkBlue$/;"	v
s:faintBlue	bundle/Zhoeon_colors/hemisu.vim	/^	let s:faintBlue=s:lightBlue$/;"	v
s:faintGreen	bundle/Zhoeon_colors/hemisu.vim	/^	let s:faintGreen=s:darkGreen$/;"	v
s:faintGreen	bundle/Zhoeon_colors/hemisu.vim	/^	let s:faintGreen=s:lightGreen$/;"	v
s:faintRed	bundle/Zhoeon_colors/hemisu.vim	/^	let s:faintRed=s:darkPink$/;"	v
s:faintRed	bundle/Zhoeon_colors/hemisu.vim	/^	let s:faintRed=s:lightPink$/;"	v
s:fg_pdef	bundle/colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	bundle/colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	bundle/colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:file = ''$/;"	v
s:files	bundle/vim-dispatch/autoload/dispatch.vim	/^  let s:files = {}$/;"	v
s:filetype_overrides	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:first_completion	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:first_completion = 0$/;"	v
s:first_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:first_sign_id	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:flags	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:flags	bundle/vim-dispatch/autoload/dispatch.vim	/^let s:flags = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)*'$/;"	v
s:fmod	bundle/vim-airline/autoload/airline/extensions/tabline/default.vim	/^let s:fmod = get(g:, 'airline#extensions#tabline#fnamemod', ':~:.')$/;"	v
s:fnamecollapse	bundle/vim-airline/autoload/airline/extensions/tabline/default.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:foreground	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:foreground = "ffffff"$/;"	v
s:foreground	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:foreground = "eaeaea"$/;"	v
s:foreground	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:foreground = "cccccc"$/;"	v
s:foreground	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:foreground = "c5c8c6"$/;"	v
s:foreground	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:foreground = "4d4d4c"$/;"	v
s:format	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:format = []$/;"	v
s:formatter	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:formatter = get(g:, 'airline#extensions#tabline#formatter', 'default')$/;"	v
s:fullscreen	bundle/tlib_vim/autoload/tlib/vim.vim	/^let s:fullscreen = 0$/;"	v
s:function_return_types	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^let s:function_return_types = {}$/;"	v
s:ghc_mod_new	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:ghc_mod_new = -1$/;"	v
s:git_dirs	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:git_dirs = {}$/;"	v
s:git_versions	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:glob_cache	bundle/vim-addon-mw-utils/autoload/glob.vim	/^let s:glob_cache = s:c['glob_cache']$/;"	v
s:global_candidates_list	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^  let s:global_candidates_list = { 'dictionary_variables' : {} }$/;"	v
s:globpath_third_arg	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:glsl_extensions	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:goarch	bundle/vim-go/autoload/go/package.vim	/^        let s:goarch = '*'$/;"	v
s:goarch	bundle/vim-go/autoload/go/package.vim	/^        let s:goarch = g:golang_goarch$/;"	v
s:goarch	bundle/vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:goos	bundle/vim-go/autoload/go/package.vim	/^        let s:goos = '*'$/;"	v
s:goos	bundle/vim-go/autoload/go/package.vim	/^        let s:goos = 'darwin'$/;"	v
s:goos	bundle/vim-go/autoload/go/package.vim	/^        let s:goos = 'windows'$/;"	v
s:goos	bundle/vim-go/autoload/go/package.vim	/^        let s:goos = g:golang_goos$/;"	v
s:goos	bundle/vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:got_fmt_error	bundle/vim-go/autoload/go/fmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:green	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:green = "d1f1a9"$/;"	v
s:green	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:green = "b9ca4a"$/;"	v
s:green	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:green = "99cc99"$/;"	v
s:green	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:green = "669966"$/;"	v
s:green	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:green = "718c00"$/;"	v
s:green	bundle/colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	bundle/colors-solarized/colors/solarized.vim	/^    let s:green       = "#859900"$/;"	v
s:green	bundle/colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	bundle/colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:grep_available	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:grep_available = executable('grep')$/;"	v
s:grep_command	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:grep_command = ' | ' . (g:gitgutter_escape_grep ? '\\grep' : 'grep') . ' -e ' . gitgutter#utility#shellescape('^@@ ')$/;"	v
s:gui_alert	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_alert       = '#870000'$/;"	v
s:gui_blue	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_blue = '#6a9fb5'$/;"	v
s:gui_blue	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_dark_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_dark_gray = '#202020'$/;"	v
s:gui_dark_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_green	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_green = '#99cc99'$/;"	v
s:gui_green	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_green = '#afd787'$/;"	v
s:gui_inactivebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_inactivebg   = '#1C1C1C'$/;"	v
s:gui_inactivefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_inactivefg   = '#4E4E4E'$/;"	v
s:gui_insertbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_insertbg    = '#87AF5F'$/;"	v
s:gui_insertfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_insertfg    = '#FFFFFF'$/;"	v
s:gui_light_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_light_gray = '#505050'$/;"	v
s:gui_light_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_med_gray_hi	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_med_gray_hi = '#303030'$/;"	v
s:gui_med_gray_hi	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_lo	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_normalbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_normalbg    = '#5F87FF'$/;"	v
s:gui_normalfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_normalfg    = '#FFFFFF'$/;"	v
s:gui_orange	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_orange = '#d28445'$/;"	v
s:gui_orange	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:gui_pink	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_purple	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_purple = '#aa759f'$/;"	v
s:gui_purple	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_red	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_red = '#ac4142'$/;"	v
s:gui_red	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_red = '#d78787'$/;"	v
s:gui_replacebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_replacebg   = '#870000'$/;"	v
s:gui_replacefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_replacefg   = '#FFFFFF'$/;"	v
s:gui_termbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termbg      = '#5F5F5F'$/;"	v
s:gui_termbg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termbg2     = '#1C1C1C'$/;"	v
s:gui_termfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termfg      = '#AFAF87'$/;"	v
s:gui_termfg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termfg2     = '#F5F5F5'$/;"	v
s:gui_visualbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_visualbg    = '#ff8c00'$/;"	v
s:gui_visualfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_visualfg    = '#FFFFFF'$/;"	v
s:guibg	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:guibg2 = '#1c1c1c'$/;"	v
s:guisep	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:guisep = '#303030'$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^let s:handler = {}$/;"	v
s:handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^let s:handler = {}$/;"	v
s:handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:handlerBase = {}$/;"	v
s:has_fugitive	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_fugitive = exists('*fugitive#head')$/;"	v
s:has_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_lawrencium	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_lawrencium = exists('*lawrencium#statusline')$/;"	v
s:has_maven	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:has_vcscommand	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_vcscommand = get(g:, 'airline#extensions#branch#use_vcscommand', 0) && exists('*VCSCommandGetStatusLine')$/;"	v
s:hash_colors	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hunk_re	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:hunk_symbols	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:hunks	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:hunks = []$/;"	v
s:i	bundle/colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	bundle/colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:icon_closed	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:ics	bundle/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:id_counter	bundle/tlib_vim/autoload/tlib/Object.vim	/^let s:id_counter = 0$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = "--compass"$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ""$/;"	v
s:inactive_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:indent_algo	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:indent_algo = get(g:, 'airline#extensions#whitespace#mixed_indent_algo', 0)$/;"	v
s:install_dir	bundle/jslint/ftplugin/javascript/jslint.vim	/^	let s:install_dir = '"' . expand("~\/vimfiles\/ftplugin\/javascript") . '"'$/;"	v
s:install_dir	bundle/jslint/ftplugin/javascript/jslint.vim	/^	let s:install_dir = expand("<sfile>:p:h")$/;"	v
s:internal_candidates_list	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^  let s:internal_candidates_list = {}$/;"	v
s:isDebugEnabled	bundle/syntastic/autoload/syntastic/log.vim	/^let s:isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled_dumb')$/;"	v
s:is_cygwin	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	bundle/neocomplete/autoload/neocomplete/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_mac	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	bundle/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_win32term	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) && !has('gui_running')$/;"	v
s:is_windows	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:jslintrc	bundle/jslint/ftplugin/javascript/jslint.vim	/^  let s:jslintrc = []$/;"	v
s:jslintrc	bundle/jslint/ftplugin/javascript/jslint.vim	/^  let s:jslintrc = readfile(s:jslintrc_file)$/;"	v
s:jslintrc_file	bundle/jslint/ftplugin/javascript/jslint.vim	/^let s:jslintrc_file = expand('~\/.jslintrc')$/;"	v
s:keymaps	bundle/tagbar/plugin/tagbar.vim	/^let s:keymaps = [$/;"	v
s:known_files	bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:last_highlight_tline	bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_mps	bundle/matchit/plugin/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	bundle/matchit/plugin/matchit.vim	/^let s:last_words = ":"$/;"	v
s:laststatus	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:laststatus = []$/;"	v
s:layout	bundle/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:lightBlue	bundle/Zhoeon_colors/hemisu.vim	/^let s:lightBlue=       { "gui": "#CBE4EE", "cterm": "195" }$/;"	v
s:lightGreen	bundle/Zhoeon_colors/hemisu.vim	/^let s:lightGreen=      { "gui": "#BBFFAA", "cterm": "157" }$/;"	v
s:lightGrey	bundle/Zhoeon_colors/hemisu.vim	/^let s:lightGrey=       { "gui": "#BBBBBB", "cterm": "249" }$/;"	v
s:lightPink	bundle/Zhoeon_colors/hemisu.vim	/^let s:lightPink=       { "gui": "#FFAFAF", "cterm": "217" }$/;"	v
s:lightTan	bundle/Zhoeon_colors/hemisu.vim	/^let s:lightTan=        { "gui": "#ECE1C8", "cterm": "230" }$/;"	v
s:line	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:line = "00346e"$/;"	v
s:line	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:line = "2a2a2a"$/;"	v
s:line	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:line = "393939"$/;"	v
s:line	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	let s:line = "3a3a3a"$/;"	v
s:line	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:line = "282a2e"$/;"	v
s:line	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:line = "efefef"$/;"	v
s:loaded	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^let s:loaded = {}$/;"	v
s:loaded	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^let s:loaded = {}$/;"	v
s:loaded	bundle/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:local_candidates_list	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^  let s:local_candidates_list = {}$/;"	v
s:magenta	bundle/colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	bundle/colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	bundle/colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	bundle/colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:make_pane	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^let s:make_pane = tempname()$/;"	v
s:makes	bundle/vim-dispatch/autoload/dispatch.vim	/^  let s:makes = []$/;"	v
s:matcher	bundle/neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^let s:matcher = {$/;"	v
s:max	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:max = []$/;"	v
s:max_lines	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:max_lines = get(g:, 'airline#extensions#whitespace#max_lines', 20000)$/;"	v
s:member_sources	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^  let s:member_sources = {}$/;"	v
s:menu_char_prefix	bundle/taglist/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:middleDarkBlue	bundle/Zhoeon_colors/hemisu.vim	/^let s:middleDarkBlue=  { "gui": "#538192", "cterm": "24"  }$/;"	v
s:middleDarkGreen	bundle/Zhoeon_colors/hemisu.vim	/^let s:middleDarkGreen= { "gui": "#739200", "cterm": "64"  }$/;"	v
s:middleDarkGrey	bundle/Zhoeon_colors/hemisu.vim	/^let s:middleDarkGrey=  { "gui": "#777777", "cterm": "241" }$/;"	v
s:middleDarkPink	bundle/Zhoeon_colors/hemisu.vim	/^let s:middleDarkPink=  { "gui": "#FF0055", "cterm": "197" }$/;"	v
s:middleLightBlue	bundle/Zhoeon_colors/hemisu.vim	/^let s:middleLightBlue= { "gui": "#9FD3E6", "cterm": "116" }$/;"	v
s:middleLightGreen	bundle/Zhoeon_colors/hemisu.vim	/^let s:middleLightGreen={ "gui": "#B1D631", "cterm": "149" }$/;"	v
s:middleLightGrey	bundle/Zhoeon_colors/hemisu.vim	/^let s:middleLightGrey= { "gui": "#999999", "cterm": "246" }$/;"	v
s:middleLightPink	bundle/Zhoeon_colors/hemisu.vim	/^let s:middleLightPink= { "gui": "#D65E76", "cterm": "167" }$/;"	v
s:mixed_indent_format	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:mixed_indent_format = get(g:, 'airline#extensions#whitespace#mixed_indent_format', 'mixed-indent[%s]')$/;"	v
s:modeNames	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:modeNames = []$/;"	v
s:modemap	bundle/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:molokai_original	bundle/Zhoeon_colors/colors/molokai-custom.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	bundle/Zhoeon_colors/colors/molokai-custom.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:molokai_original	bundle/Zhoeon_colors/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	bundle/Zhoeon_colors/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:n	bundle/colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:native_filenames	bundle/tlib_vim/autoload/tlib/sys.vim	/^let s:native_filenames = {}$/;"	v
s:nearby_disabled	bundle/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:need_trans	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neocomplete_source	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^let s:neocomplete_source = {$/;"	v
s:netrw_up	bundle/vim-vinegar/plugin/vinegar.vim	/^let s:netrw_up = ''$/;"	v
s:new_window	bundle/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:next_sign_id	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:node_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h') . syntastic#util#Slash() . 'less-lint.js')$/;"	v
s:non_zero_only	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	bundle/colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:norm	bundle/Zhoeon_colors/hemisu.vim	/^	let s:norm=s:almostBlack$/;"	v
s:norm	bundle/Zhoeon_colors/hemisu.vim	/^	let s:norm=s:almostWhite$/;"	v
s:normBlue	bundle/Zhoeon_colors/hemisu.vim	/^	let s:normBlue=s:middleDarkBlue$/;"	v
s:normBlue	bundle/Zhoeon_colors/hemisu.vim	/^	let s:normBlue=s:middleLightBlue$/;"	v
s:normGreen	bundle/Zhoeon_colors/hemisu.vim	/^	let s:normGreen=s:middleDarkGreen$/;"	v
s:normGreen	bundle/Zhoeon_colors/hemisu.vim	/^	let s:normGreen=s:middleLightGreen$/;"	v
s:normRed	bundle/Zhoeon_colors/hemisu.vim	/^	let s:normRed=s:middleDarkPink$/;"	v
s:normRed	bundle/Zhoeon_colors/hemisu.vim	/^	let s:normRed=s:middleLightPink$/;"	v
s:notifiers	bundle/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:notslash	bundle/matchit/plugin/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:null_comment_string	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:null_comment_string    = '%s'$/;"	v
s:number_map	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:ob	bundle/colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4o"$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4r"$/;"	v
s:old_cpo	bundle/git-nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:oneTimeVariables	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:oneTimeVariables = []$/;"	v
s:one_time_notices_issued	bundle/syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:options	bundle/tagbar/plugin/tagbar.vim	/^let s:options = [$/;"	v
s:orange	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:orange = "ffc58f"$/;"	v
s:orange	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:orange = "e78c45"$/;"	v
s:orange	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:orange = "f99157"$/;"	v
s:orange	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:orange = "de935f"$/;"	v
s:orange	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:orange = "f5871f"$/;"	v
s:orange	bundle/colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	bundle/colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	bundle/colors-solarized/colors/solarized.vim	/^    let s:orange      = "1".s:bright$/;"	v
s:orange	bundle/colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	bundle/colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:origMap	bundle/Vim-L9/autoload/l9/tempvariables.vim	/^let s:origMap = {}$/;"	v
s:ou	bundle/colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	bundle/colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:overwrite	bundle/vim-airline/autoload/airline/extensions/bufferline.vim	/^let s:overwrite = get(g:, 'airline#extensions#bufferline#overwrite_variables', 1)$/;"	v
s:overwrite	bundle/vim-snipmate/after/plugin/snipMate.vim	/^		let s:overwrite = 0$/;"	v
s:overwrite	bundle/vim-snipmate/after/plugin/snipMate.vim	/^		let s:overwrite = maparg('<S-Tab>', 'i') ==? '<Plug>SuperTabBackward'$/;"	v
s:overwrite	bundle/vim-snipmate/after/plugin/snipMate.vim	/^		let s:overwrite = maparg('<Tab>', 'i') ==? '<Plug>SuperTabForward'$/;"	v
s:packages	bundle/vim-go/plugin/go.vim	/^let s:packages = [$/;"	v
s:parts	bundle/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	bundle/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:pid	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^let s:pid = "wmic process where ^(Name='WMIC.exe' AND CommandLine LIKE '\\\\%\\\\%\\\\%TIME\\\\%\\\\%\\\\%'^) get ParentProcessId | more +1 > "$/;"	v
s:plugin_path	bundle/jslint/ftplugin/javascript/jslint.vim	/^let s:plugin_path = s:install_dir . "\/jslint\/"$/;"	v
s:powerline_symbols	bundle/promptline/autoload/promptline/symbols.vim	/^let s:powerline_symbols = extend(copy(s:simple_symbols), {$/;"	v
s:prompt_snapshot_file	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^let s:prototype = tlib#Object#New({'_class': ['Filter_cnf'], 'name': 'cnf'}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_cnfd'], 'name': 'cnfd'}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_fuzzy'], 'name': 'fuzzy'}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_glob.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_glob'], 'name': 'glob'}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_glob.vim	/^let s:prototype.highlight = g:tlib#input#higroup$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Object.vim	/^let s:prototype  = {'_class': ['object'], '_super': [], '_id': 0} "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Test.vim	/^let s:prototype = tlib#Object#New({'_class': ['Test']}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/TestChild.vim	/^let s:prototype = tlib#Test#New({'_class': ['TestChild']}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/World.vim	/^let s:prototype = tlib#Object#New({$/;"	v
s:prototype	bundle/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:purple	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:purple = "ebbbff"$/;"	v
s:purple	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:purple = "c397d8"$/;"	v
s:purple	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:purple = "cc99cc"$/;"	v
s:purple	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:purple = "b294bb"$/;"	v
s:purple	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:purple = "8959a8"$/;"	v
s:pwin_by_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:pylint_new	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:r	bundle/colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:red	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:red = "ff9da4"$/;"	v
s:red	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:red = "d54e53"$/;"	v
s:red	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:red = "f2777a"$/;"	v
s:red	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:red = "cc6666"$/;"	v
s:red	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:red = "c82829"$/;"	v
s:red	bundle/colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	bundle/colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	bundle/colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	bundle/colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:register	bundle/tlib_vim/autoload/tlib/signs.vim	/^let s:register = {}$/;"	v
s:registry	bundle/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:repo_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:restoreframecmd	bundle/tlib_vim/autoload/tlib/vim.vim	/^let s:restoreframecmd = ''$/;"	v
s:rst2pseudoxml	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = executable('rst2pseudoxml.py') ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:runjslint_ext	bundle/jslint/ftplugin/javascript/jslint.vim	/^  let s:runjslint_ext = 'js'$/;"	v
s:runjslint_ext	bundle/jslint/ftplugin/javascript/jslint.vim	/^  let s:runjslint_ext = 'wsf'$/;"	v
s:s	bundle/colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:sass_cache_location	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:save_cpo	bundle/Mark/plugin/mark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/matchit/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/echodoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/unite/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/syntax.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/vest/test-neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/helpers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/neosnippet/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/ftplugin/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/indent/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/plugin/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neosnippet/syntax/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pep257.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tcomment_vim/plugin/tcomment.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/comments.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/map.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/normal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/notify.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/paragraph.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/signs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/syntax.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/textobjects.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/plugin/02tlib.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/spec/tlib/arg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/spec/tlib/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/spec/tlib/input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/spec/tlib/list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/spec/tlib/rx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/spec/tlib/string.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/spec/tlib/url.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/spec/tlib/var.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-go/autoload/webapi/json.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-snipmate/after/plugin/snipMate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-snipmate/plugin/snipMate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimtodo/ftplugin/todo.vim	/^let s:save_cpo = &cpo$/;"	v
s:scanned_files	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:scanned_files = s:c['scanned_files']$/;"	v
s:script_candidates_list	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^  let s:script_candidates_list = {}$/;"	v
s:script_path	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:scriptfile	bundle/tlib_vim/spec/tlib/hash.vim	/^    let s:scriptfile = matchstr(s:script, '^\\s*\\d\\+:\\s\\+\\zs.*$')$/;"	v
s:scriptlines	bundle/tlib_vim/spec/tlib/hash.vim	/^        let s:scriptlines = readfile(s:scriptfile)$/;"	v
s:sdir	bundle/neocomplete/autoload/neocomplete/cache.vim	/^let s:sdir = neocomplete#util#substitute_path_separator($/;"	v
s:section_truncate_width	bundle/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:sections	bundle/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z','warning']$/;"	v
s:sections	bundle/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:selection	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:selection = "003f8e"$/;"	v
s:selection	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:selection = "424242"$/;"	v
s:selection	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:selection = "515151"$/;"	v
s:selection	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	let s:selection = "585858"$/;"	v
s:selection	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:selection = "373b41"$/;"	v
s:selection	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:selection = "d6d6d6"$/;"	v
s:self_file	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^let s:self_file = s:_unify_path(expand('<sfile>'))$/;"	v
s:self_version	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:separators	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:short_help	bundle/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:show_buffers	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_close_button	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_close_button = get(g:, 'airline#extensions#tabline#show_close_button', 1)$/;"	v
s:show_message	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^  let s:show_message = g:airline_detect_whitespace == 1$/;"	v
s:show_message	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^  let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_tab_nr	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_tab_nr = get(g:, 'airline#extensions#tabline#show_tab_nr', 1)$/;"	v
s:show_tab_type	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_tab_type = get(g:, 'airline#extensions#tabline#show_tab_type', 1)$/;"	v
s:simple_symbols	bundle/promptline/autoload/promptline/symbols.vim	/^let s:simple_symbols = {$/;"	v
s:skip_symbol	bundle/vim-airline/autoload/airline/extensions/tabline/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:sorter	bundle/neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/unite/sources/file_include.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^let s:source.action_table = s:action_table$/;"	v
s:source_func	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:source_func = ''$/;"	v
s:source_runtime	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime = {$/;"	v
s:source_runtime	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime.action_table.unite__new_candidate = {$/;"	v
s:source_user	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user = {$/;"	v
s:source_user	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user.action_table.unite__new_candidate = {$/;"	v
s:sp_back	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	bundle/colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:state	bundle/tlib_vim/samples/tlib/input/tlib_input_list.vim	/^let s:state = {$/;"	v
s:state_proto	bundle/vim-snipmate/autoload/snipMate.vim	/^let s:state_proto = {}$/;"	v
s:statusline	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:statusline = []$/;"	v
s:statusline_in_use	bundle/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:subtle	bundle/Zhoeon_colors/hemisu.vim	/^	let s:subtle=s:darkGrey$/;"	v
s:subtle	bundle/Zhoeon_colors/hemisu.vim	/^	let s:subtle=s:lightGrey$/;"	v
s:summary	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:summary = [0, 0, 0]$/;"	v
s:supports_star	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:symbol	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:syntax_list	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^  let s:syntax_list = {}$/;"	v
s:t_none	bundle/colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tab_min_count	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tab_nr_type	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tab_nr_type = get(g:, 'airline#extensions#tabline#tab_nr_type', 0)$/;"	v
s:tags_list	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^  let s:tags_list = {}$/;"	v
s:temp00	bundle/colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	bundle/colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	bundle/colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	bundle/colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:termbg	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:termbg = 232$/;"	v
s:termbg	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:termbg = 232$/;"	v
s:termbg2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:termbg2= 234$/;"	v
s:termsep	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:termsep = 236$/;"	v
s:timerData	bundle/Vim-L9/plugin/l9.vim	/^  let s:timerData = []$/;"	v
s:timerTagMaxLen	bundle/Vim-L9/plugin/l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
s:timestamp	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:timestamp = -1$/;"	v
s:timestamps	bundle/tlib_vim/autoload/tlib/cache.vim	/^let s:timestamps = {}$/;"	v
s:tlist_app_name	bundle/taglist/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	bundle/taglist/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	bundle/taglist/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_d_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_eiffel_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_java_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_lisp_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	bundle/taglist/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	bundle/taglist/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	bundle/taglist/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	bundle/taglist/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	bundle/taglist/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	bundle/taglist/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	bundle/taglist/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tmuxline_snapshot_file	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:trailing_format	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:trailing_format = get(g:, 'airline#extensions#whitespace#trailing_format', 'trailing[%s]')$/;"	v
s:tree_up_dir_line	bundle/git-nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:type_init_done	bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:types_dirty	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:types_dirty = 1$/;"	v
s:u	bundle/colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	bundle/colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:using_xolox_shell	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:using_xolox_shell = -1$/;"	v
s:value	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:value = []$/;"	v
s:vim_system	bundle/gocode/autoload/gocomplete.vim	/^let s:vim_system = get(g:, 'gocomplete#system_function', 'system')$/;"	v
s:vim_system	bundle/vim-go/autoload/go/complete.vim	/^let s:vim_system = get(g:, 'gocomplete#system_function', 'system')$/;"	v
s:violet	bundle/colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	bundle/colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	bundle/colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	bundle/colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:visibility_symbols	bundle/tagbar/autoload/tagbar.vim	/^let s:visibility_symbols = {$/;"	v
s:vmode	bundle/colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	bundle/colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:waiting	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^let s:waiting = {}$/;"	v
s:warnings	bundle/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:white	bundle/Zhoeon_colors/hemisu.vim	/^let s:white=           { "gui": "#FFFFFF", "cterm": "231" }$/;"	v
s:width	bundle/syntastic/autoload/syntastic/util.vim	/^let s:width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:width	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:width = []$/;"	v
s:window	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:window = "4d5057"$/;"	v
s:window	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:window = "4d5057"$/;"	v
s:window	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:window = "4d5057"$/;"	v
s:window	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^	let s:window = "5e5e5e"$/;"	v
s:window	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:window = ""$/;"	v
s:window	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:window = "efefef"$/;"	v
s:window_expanded	bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	bundle/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winrestcmd	bundle/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:yellow	bundle/Zhoeon_colors/colors/Tomorrow-Night-Blue.vim	/^let s:yellow = "ffeead"$/;"	v
s:yellow	bundle/Zhoeon_colors/colors/Tomorrow-Night-Bright.vim	/^let s:yellow = "e7c547"$/;"	v
s:yellow	bundle/Zhoeon_colors/colors/Tomorrow-Night-Eighties.vim	/^let s:yellow = "ffcc66"$/;"	v
s:yellow	bundle/Zhoeon_colors/colors/Tomorrow-Night.vim	/^let s:yellow = "f0c674"$/;"	v
s:yellow	bundle/Zhoeon_colors/colors/Tomorrow.vim	/^let s:yellow = "eab700"$/;"	v
s:yellow	bundle/colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	bundle/colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	bundle/colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	bundle/colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
save_foldinfo	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! s:save_foldinfo() "{{{$/;"	f
scan	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:scan(str, pattern)$/;"	f
scoreBoundaryMatching	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:scoreBoundaryMatching(wordForBoundary, pattern, exprBoundary)$/;"	f
scoreSequentialMatching	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:scoreSequentialMatching(word, pattern)$/;"	f
search	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:search(pattern)$/;"	f
search	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:search(pattern)$/;"	f
search_outof_range	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! s:search_outof_range(col) "{{{$/;"	f
search_sync_placeholder	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! s:search_sync_placeholder(start, end, number) "{{{$/;"	f
search_vim_path	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! s:search_vim_path() "{{{$/;"	f
seek	bundle/vim-vinegar/plugin/vinegar.vim	/^function! s:seek(file)$/;"	f
select_tab	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:select_tab(buf_index)$/;"	f
set	bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default)$/;"	f
setAbbrWithFileAbbrData	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:setAbbrWithFileAbbrData(item, snippedHeads)$/;"	f
setRanks	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:setRanks(item, pattern, exprBoundary, stats)$/;"	f
set_auto_completion_length	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! s:set_auto_completion_length(len) "{{{$/;"	f
set_complete_results_pos	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:set_complete_results_pos(funcs, cur_text) "{{{$/;"	f
set_complete_results_words	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:set_complete_results_words(complete_results) "{{{$/;"	f
set_cpp_include_files	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:set_cpp_include_files(bufnumber) "{{{$/;"	f
set_current_compiler	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:set_current_compiler(name) abort$/;"	f
set_default	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_default	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_dictionary_helper	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:set_dictionary_helper(variable, keys, value) "{{{$/;"	f
set_dictionary_helper	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
set_dictionary_helper	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
set_python_include_files	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:set_python_include_files(python_bin) "{{{$/;"	f
set_snippet_dict	bundle/neosnippet/autoload/neosnippet/parser.vim	/^function! s:set_snippet_dict(snippet_dict, snippets, dup_check, snippet_file) "{{{$/;"	f
setup_vinegar	bundle/vim-vinegar/plugin/vinegar.vim	/^function! s:setup_vinegar() abort$/;"	f
shellesc	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellescape	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^  function! s:shellescape(...)$/;"	f
shellescape	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^  function! s:shellescape(command)$/;"	f
shellescape	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^  function! s:shellescape(...)$/;"	f
shellescape	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^  function! s:shellescape(command)$/;"	f
shellslash	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:shift(list)$/;"	f
shift	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:shift(list)$/;"	f
should_create_cache	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:should_create_cache(bufnr) " {{{$/;"	f
showMenu	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:showMenu(node)$/;"	f
skipFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:skipFile() " {{{2$/;"	f
skip_next_auto_completion	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! s:skip_next_auto_completion() "{{{$/;"	f
smart_execute_command	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
smart_execute_command	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
snipMate#BackwardsSnippet	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#BackwardsSnippet()$/;"	f
snipMate#CanBeTriggered	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#CanBeTriggered()$/;"	f
snipMate#DefaultPool	bundle/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#DefaultPool(scopes, trigger, result)$/;"	f
snipMate#GetSnippetFiles	bundle/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#GetSnippetFiles(mustExist, scopes, trigger)$/;"	f
snipMate#GetSnippets	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#GetSnippets(scopes, trigger)$/;"	f
snipMate#GetSnippetsForWordBelowCursor	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#GetSnippetsForWordBelowCursor(word, exact)$/;"	f
snipMate#GetSnippetsForWordBelowCursorForComplete	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#GetSnippetsForWordBelowCursorForComplete(word)$/;"	f
snipMate#OpenSnippetFiles	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#OpenSnippetFiles()$/;"	f
snipMate#ReadSnippetsFile	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#ReadSnippetsFile(file)$/;"	f
snipMate#RetabSnip	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#RetabSnip() range$/;"	f
snipMate#ScopesByFile	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#ScopesByFile()$/;"	f
snipMate#SetByPath	bundle/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#SetByPath(dict, trigger, path, snippet) abort$/;"	f
snipMate#ShowAvailableSnips	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#ShowAvailableSnips()$/;"	f
snipMate#TriggerSnippet	bundle/vim-snipmate/autoload/snipMate.vim	/^function! snipMate#TriggerSnippet(...)$/;"	f
snipMate#WordBelowCursor	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#WordBelowCursor()$/;"	f
snipMate#expandSnip	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! snipMate#expandSnip(snip, col)$/;"	f
snipMate_python_demo#Activate	bundle/vim-snipmate/autoload/snipMate_python_demo.vim	/^fun! snipMate_python_demo#Activate()$/;"	f
snipMate_python_demo#FunctionsFromCurrentFileAndTags	bundle/vim-snipmate/autoload/snipMate_python_demo.vim	/^fun! snipMate_python_demo#FunctionsFromCurrentFileAndTags(scopes, trigger, result)$/;"	f
snippets_expand	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! s:snippets_expand(cur_text, col) "{{{$/;"	f
snippets_expand_or_jump	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! s:snippets_expand_or_jump(cur_text, col) "{{{$/;"	f
snippets_jump_or_expand	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! s:snippets_jump_or_expand(cur_text, col) "{{{$/;"	f
sort	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:sort(list, expr)$/;"	f
sort	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:sort(list, expr)$/;"	f
sort_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:sort_by(list, expr)$/;"	f
sort_by	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:sort_by(list, expr)$/;"	f
sorter.filter	bundle/neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	bundle/neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/unite/sources/file_include.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.get_complete_position	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_position	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_position	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_position	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_position	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_words	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str) "{{{$/;"	f
source.get_keyword_pos	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/file_include.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/include.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/vim.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/unite/sources/file_include.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_post_filter	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_post_filter(context) "{{{$/;"	f
source.hooks.on_post_filter	bundle/neosnippet/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.hooks.on_post_filter(context) "{{{$/;"	f
source.initialize	bundle/neosnippet/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source_runtime.action_table.unite__new_candidate.func	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source_runtime.gather_candidates	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.gather_candidates(args, context) "{{{$/;"	f
source_user.action_table.unite__new_candidate.func	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source_user.gather_candidates	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.gather_candidates(args, context) "{{{$/;"	f
span	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:span(f, xs)$/;"	f
span	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:span(f, xs)$/;"	f
spawn	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:spawn(expr, ...)$/;"	f
spawn	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^function! s:spawn(expr, ...)$/;"	f
split3	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split3(expr, pattern)$/;"	f
split_args	bundle/neocomplete/autoload/neocomplete/sources/vim/helper.vim	/^function! s:split_args(cur_text, complete_str) "{{{$/;"	f
split_leftright	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_leftright(expr, pattern)$/;"	f
split_pattern	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! s:split_pattern(keyword_pattern) "{{{$/;"	f
stage_info	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start_complete	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:start_complete(is_quick_match) "{{{$/;"	f
state_proto.jump_stop	bundle/vim-snipmate/autoload/snipMate.vim	/^function! s:state_proto.jump_stop(backwards)$/;"	f
state_proto.remove	bundle/vim-snipmate/autoload/snipMate.vim	/^fun! s:state_proto.remove()$/;"	f
state_proto.select_word	bundle/vim-snipmate/autoload/snipMate.vim	/^function! s:state_proto.select_word()$/;"	f
state_proto.set_stop	bundle/vim-snipmate/autoload/snipMate.vim	/^function! s:state_proto.set_stop(stop)$/;"	f
state_proto.update_changes	bundle/vim-snipmate/autoload/snipMate.vim	/^function! s:state_proto.update_changes()$/;"	f
state_proto.update_stops	bundle/vim-snipmate/autoload/snipMate.vim	/^function! s:state_proto.update_stops()$/;"	f
state_proto.update_vars	bundle/vim-snipmate/autoload/snipMate.vim	/^function! s:state_proto.update_vars(change)$/;"	f
stl	bundle/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	bundle/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
strchars	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:strchars(str)$/;"	f
strwidthpart	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:strwidthpart(str, width) "{{{$/;"	f
strwidthpart	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart_reverse	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
strwidthpart_reverse	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
sub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subprocess	bundle/Vim-L9/autoload/l9/async.py	/^import subprocess$/;"	i
substitute_candidate	bundle/neocomplete/autoload/neocomplete/sources/syntax.vim	/^function! s:substitute_candidate(candidate) "{{{$/;"	f
substitute_last	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:substitute_last(expr, pat, sub)$/;"	f
substitute_path_separator	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
substitute_path_separator	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
substitute_placeholder_marker	bundle/neosnippet/autoload/neosnippet/view.vim	/^function! s:substitute_placeholder_marker(start, end, snippet_holder_cnt) "{{{$/;"	f
sync_active_winnr	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:sync_active_winnr()$/;"	f
synname	bundle/vim-endwise/plugin/endwise.vim	/^function! s:synname()$/;"	f
syntastic	bundle/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	bundle/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	bundle/syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) " {{{2$/;"	f
syntastic#c#NullOutput	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() " {{{2$/;"	f
syntastic#c#ReadConfig	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) " {{{2$/;"	f
syntastic#log#debug	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) " {{{2$/;"	f
syntastic#log#debugDump	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) " {{{2$/;"	f
syntastic#log#debugShowOptions	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) " {{{2$/;"	f
syntastic#log#debugShowVariables	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) " {{{2$/;"	f
syntastic#log#deprecationWarn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) " {{{2$/;"	f
syntastic#log#error	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) " {{{2$/;"	f
syntastic#log#info	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) " {{{2$/;"	f
syntastic#log#oneTimeWarn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) " {{{2$/;"	f
syntastic#log#warn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) " {{{2$/;"	f
syntastic#postprocess#guards	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) " {{{2$/;"	f
syntastic#preprocess#cabal	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) " {{{2$/;"	f
syntastic#preprocess#checkstyle	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) " {{{2$/;"	f
syntastic#preprocess#cppcheck	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) " {{{2$/;"	f
syntastic#preprocess#killEmpty	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) " {{{2$/;"	f
syntastic#preprocess#perl	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) " {{{2$/;"	f
syntastic#preprocess#prospector	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) " {{{2$/;"	f
syntastic#preprocess#rparse	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) " {{{2$/;"	f
syntastic#preprocess#tslint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) " {{{2$/;"	f
syntastic#preprocess#validator	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) " {{{2$/;"	f
syntastic#util#DevNull	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() " {{{2$/;"	f
syntastic#util#Slash	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#bufIsActive	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) " {{{2$/;"	f
syntastic#util#compareLexi	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) " {{{2$/;"	f
syntastic#util#decodeXMLEntities	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) " {{{2$/;"	f
syntastic#util#dictFilter	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) " {{{2$/;"	f
syntastic#util#findInParent	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findInParent(what, where) " {{{2$/;"	f
syntastic#util#getVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#getVersion(command) " {{{2$/;"	f
syntastic#util#isRunningWindows	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() " {{{2$/;"	f
syntastic#util#parseShebang	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang() " {{{2$/;"	f
syntastic#util#parseVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version) " {{{2$/;"	f
syntastic#util#redraw	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) " {{{2$/;"	f
syntastic#util#rmrf	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) " {{{2$/;"	f
syntastic#util#screenWidth	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) " {{{2$/;"	f
syntastic#util#shescape	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) " {{{2$/;"	f
syntastic#util#shexpand	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string) " {{{2$/;"	f
syntastic#util#stamp	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() " {{{2$/;"	f
syntastic#util#tmpdir	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() " {{{2$/;"	f
syntastic#util#unique	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) " {{{2$/;"	f
syntastic#util#var	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) " {{{2$/;"	f
syntastic#util#versionIsAtLeast	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) " {{{2$/;"	f
syntastic#util#wideMsg	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) " {{{2$/;"	f
system	bundle/gocode/autoload/gocomplete.vim	/^fu! s:system(str, ...)$/;"	f
system	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:system(str, ...)$/;"	f
system	bundle/neosnippet/autoload/vital/_neosnippet/Process.vim	/^function! s:system(str, ...)$/;"	f
system	bundle/vim-go/autoload/go/complete.vim	/^fu! s:system(str, ...)$/;"	f
tagbar#CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow() abort$/;"	f
tagbar#autoopen	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#toggle_pause	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
take_while	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:take_while(f, xs)$/;"	f
take_while	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:take_while(f, xs)$/;"	f
tcomment#CollectFileTypes	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, comment_anyway, filetype, ...)$/;"	f
tcomment#Complete	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#CompleteArgs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CompleteArgs(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#DefineType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#DefineType(name, commentdef, ...)$/;"	f
tcomment#GetCommentDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GetCommentDef(name, ...)$/;"	f
tcomment#GuessCommentType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GuessCommentType(...) "{{{3$/;"	f
tcomment#Operator	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcomment#ResetOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#ResetOption() "{{{3$/;"	f
tcomment#SetOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#SetOption(name, arg) "{{{3$/;"	f
tcomment#TextObjectInlineComment	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#TextObjectInlineComment() "{{{3$/;"	f
tcomment#TypeExists	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#TypeExists(name, ...)$/;"	f
test	bundle/tlib_vim/test/tlib.vim	/^let test = tlib#Test#New()$/;"	v
test1	bundle/tlib_vim/test/tlib.vim	/^let test1 = tlib#Test#New()$/;"	v
test_one	bundle/vim-go/scripts/test.sh	/^test_one() {$/;"	f
testc	bundle/tlib_vim/test/tlib.vim	/^let testc = tlib#TestChild#New()$/;"	v
testworld	bundle/tlib_vim/test/tlib.vim	/^let testworld = tlib#World#New()$/;"	v
threading	bundle/Vim-L9/autoload/l9/async.py	/^import threading$/;"	i
throw	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
timerBegin	bundle/Vim-L9/plugin/l9.vim	/^  function s:timerBegin(tag)$/;"	f
timerDump	bundle/Vim-L9/plugin/l9.vim	/^  function s:timerDump()$/;"	f
timerStop	bundle/Vim-L9/plugin/l9.vim	/^  function s:timerStop()$/;"	f
tiny_cmd#Get	bundle/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Get(nr)$/;"	f
tiny_cmd#Pop	bundle/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Pop(nr)$/;"	f
tiny_cmd#Put	bundle/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Put(a)$/;"	f
tlib#Filter_cnf#New	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! tlib#Filter_cnf#New(...) "{{{3$/;"	f
tlib#Filter_cnfd#New	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! tlib#Filter_cnfd#New(...) "{{{3$/;"	f
tlib#Filter_fuzzy#New	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! tlib#Filter_fuzzy#New(...) "{{{3$/;"	f
tlib#Filter_glob#New	bundle/tlib_vim/autoload/tlib/Filter_glob.vim	/^function! tlib#Filter_glob#New(...) "{{{3$/;"	f
tlib#Object#Methods	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! tlib#Object#Methods(object, ...) "{{{3$/;"	f
tlib#Object#New	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! tlib#Object#New(...) "{{{3$/;"	f
tlib#Test#New	bundle/tlib_vim/autoload/tlib/Test.vim	/^function! tlib#Test#New(...) "{{{3$/;"	f
tlib#TestChild#New	bundle/tlib_vim/autoload/tlib/TestChild.vim	/^function! tlib#TestChild#New(...) "{{{3$/;"	f
tlib#World#New	bundle/tlib_vim/autoload/tlib/World.vim	/^function! tlib#World#New(...)$/;"	f
tlib#agent#AND	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#AND(world, selected) "{{{3$/;"	f
tlib#agent#CompleteAgentNames	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#CompleteAgentNames(ArgLead, CmdLine, CursorPos)$/;"	f
tlib#agent#Copy	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Copy(world, selected) "{{{3$/;"	f
tlib#agent#CopyItems	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#CopyItems(world, selected) "{{{3$/;"	f
tlib#agent#Cut	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Cut(world, selected) "{{{3$/;"	f
tlib#agent#Debug	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Debug(world, selected) "{{{3$/;"	f
tlib#agent#DeleteItems	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#DeleteItems(world, selected) "{{{3$/;"	f
tlib#agent#DoAtLine	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#DoAtLine(world, selected) "{{{3$/;"	f
tlib#agent#Down	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Down(world, selected, ...) "{{{3$/;"	f
tlib#agent#DownN	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#DownN(world, selected) "{{{3$/;"	f
tlib#agent#EditFile	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFile(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInSplit	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInTab	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInTab(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInVSplit	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInVSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditItem	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditItem(world, selected) "{{{3$/;"	f
tlib#agent#EditReturnValue	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditReturnValue(world, rv) "{{{3$/;"	f
tlib#agent#End	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#End(world, selected) "{{{3$/;"	f
tlib#agent#ExecAgentByName	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ExecAgentByName(world, selected) "{{{3$/;"	f
tlib#agent#Exit	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Exit(world, selected) "{{{3$/;"	f
tlib#agent#GotoLine	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#GotoLine(world, selected) "{{{3$/;"	f
tlib#agent#Help	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Help(world, selected) "{{{3$/;"	f
tlib#agent#Home	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Home(world, selected) "{{{3$/;"	f
tlib#agent#Input	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Input(world, selected) "{{{3$/;"	f
tlib#agent#NewItem	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#NewItem(world, selected) "{{{3$/;"	f
tlib#agent#Null	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Null(world, selected) "{{{3$/;"	f
tlib#agent#OR	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#OR(world, selected) "{{{3$/;"	f
tlib#agent#PageDown	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#PageDown(world, selected) "{{{3$/;"	f
tlib#agent#PageUp	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#PageUp(world, selected) "{{{3$/;"	f
tlib#agent#Paste	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Paste(world, selected) "{{{3$/;"	f
tlib#agent#PopFilter	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#PopFilter(world, selected) "{{{3$/;"	f
tlib#agent#PreviewLine	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#PreviewLine(world, selected) "{{{3$/;"	f
tlib#agent#ReduceFilter	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ReduceFilter(world, selected) "{{{3$/;"	f
tlib#agent#Reset	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Reset(world, selected) "{{{3$/;"	f
tlib#agent#RestrictView	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#RestrictView(world, selected) "{{{3$/;"	f
tlib#agent#Select	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Select(world, selected) "{{{3$/;"	f
tlib#agent#SelectAll	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectAll(world, selected) "{{{3$/;"	f
tlib#agent#SelectDown	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectDown(world, selected) "{{{3$/;"	f
tlib#agent#SelectUp	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectUp(world, selected) "{{{3$/;"	f
tlib#agent#ShiftLeft	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftLeft(world, selected) "{{{3$/;"	f
tlib#agent#ShiftRight	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftRight(world, selected) "{{{3$/;"	f
tlib#agent#ShowInfo	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShowInfo(world, selected)$/;"	f
tlib#agent#Suspend	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Suspend(world, selected) "{{{3$/;"	f
tlib#agent#SuspendToParentWindow	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#SuspendToParentWindow(world, selected) "{{{3$/;"	f
tlib#agent#ToggleRestrictView	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleRestrictView(world, selected) "{{{3$/;"	f
tlib#agent#ToggleScrollbind	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleScrollbind(world, selected) "{{{3$/;"	f
tlib#agent#ToggleStickyList	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleStickyList(world, selected) "{{{3$/;"	f
tlib#agent#UnrestrictView	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#UnrestrictView(world, selected) "{{{3$/;"	f
tlib#agent#Up	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Up(world, selected, ...) "{{{3$/;"	f
tlib#agent#UpN	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#UpN(world, selected) "{{{3$/;"	f
tlib#agent#ViewFile	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ViewFile(world, selected) "{{{3$/;"	f
tlib#agent#Wildcard	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Wildcard(world, selected) "{{{3$/;"	f
tlib#arg#Ex	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#Ex(arg, ...) "{{{3$/;"	f
tlib#arg#Get	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#Get(n, var, ...) "{{{3$/;"	f
tlib#arg#Key	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#Key(list, ...) "{{{3$/;"	f
tlib#arg#Let	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#Let(list, ...) "{{{3$/;"	f
tlib#arg#StringAsKeyArgs	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#StringAsKeyArgs(string, ...) "{{{1$/;"	f
tlib#arg#StringAsKeyArgsEqual	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#StringAsKeyArgsEqual(string) "{{{1$/;"	f
tlib#autocmdgroup#Init	bundle/tlib_vim/autoload/tlib/autocmdgroup.vim	/^function! tlib#autocmdgroup#Init() "{{{3$/;"	f
tlib#balloon#Expr	bundle/tlib_vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Expr() "{{{3$/;"	f
tlib#balloon#Register	bundle/tlib_vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Register(expr) "{{{3$/;"	f
tlib#balloon#Remove	bundle/tlib_vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Remove(expr) "{{{3$/;"	f
tlib#bitwise#AND	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#AND(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#Add	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Add(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#Bits2Num	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Bits2Num(bits, ...) "{{{3$/;"	f
tlib#bitwise#Num2Bits	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Num2Bits(num) "{{{3$/;"	f
tlib#bitwise#OR	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#OR(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#ShiftLeft	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#ShiftLeft(bits, n) "{{{3$/;"	f
tlib#bitwise#ShiftRight	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#ShiftRight(bits, n) "{{{3$/;"	f
tlib#bitwise#Sub	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#Sub(num1, num2, ...) "{{{3$/;"	f
tlib#bitwise#XOR	bundle/tlib_vim/autoload/tlib/bitwise.vim	/^function! tlib#bitwise#XOR(num1, num2, ...) "{{{3$/;"	f
tlib#buffer#BufDo	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#BufDo(exec) "{{{3$/;"	f
tlib#buffer#CurrentByte	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#CurrentByte() "{{{3$/;"	f
tlib#buffer#DeleteRange	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#DeleteRange(line1, line2) "{{{3$/;"	f
tlib#buffer#DisableMRU	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#DisableMRU() "{{{3$/;"	f
tlib#buffer#EnableMRU	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#EnableMRU() "{{{3$/;"	f
tlib#buffer#Eval	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#Eval(buffer, code) "{{{3$/;"	f
tlib#buffer#GetList	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#GetList(...)$/;"	f
tlib#buffer#HighlightLine	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#HighlightLine(...) "{{{3$/;"	f
tlib#buffer#InsertText	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText(text, ...) "{{{3$/;"	f
tlib#buffer#InsertText0	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText0(text, ...) "{{{3$/;"	f
tlib#buffer#KeepCursorPosition	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#KeepCursorPosition(cmd) "{{{3$/;"	f
tlib#buffer#ReplaceRange	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ReplaceRange(line1, line2, lines)$/;"	f
tlib#buffer#ScratchEnd	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchEnd() "{{{3$/;"	f
tlib#buffer#ScratchStart	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchStart() "{{{3$/;"	f
tlib#buffer#Set	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#Set(buffer) "{{{3$/;"	f
tlib#buffer#ViewLine	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ViewLine(line, ...) "{{{3$/;"	f
tlib#cache#Dir	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Dir(...) "{{{3$/;"	f
tlib#cache#Filename	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Filename(type, ...) "{{{3$/;"	f
tlib#cache#Get	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Get(cfile, ...) "{{{3$/;"	f
tlib#cache#ListFilesInCache	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#ListFilesInCache(...) "{{{3$/;"	f
tlib#cache#MTime	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#MTime(cfile) "{{{3$/;"	f
tlib#cache#MaybePurge	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#MaybePurge() "{{{3$/;"	f
tlib#cache#Purge	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Purge() "{{{3$/;"	f
tlib#cache#Save	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Save(cfile, dictionary) "{{{3$/;"	f
tlib#cache#Value	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Value(cfile, generator, ftime, ...) "{{{3$/;"	f
tlib#char#Get	bundle/tlib_vim/autoload/tlib/char.vim	/^function! tlib#char#Get(...) "{{{3$/;"	f
tlib#char#GetWithTimeout	bundle/tlib_vim/autoload/tlib/char.vim	/^function! tlib#char#GetWithTimeout(timeout, ...) "{{{3$/;"	f
tlib#char#IsAvailable	bundle/tlib_vim/autoload/tlib/char.vim	/^function! tlib#char#IsAvailable() "{{{3$/;"	f
tlib#cmd#BrowseOutput	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutput(command) "{{{3$/;"	f
tlib#cmd#BrowseOutputWithCallback	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutputWithCallback(callback, command) "{{{3$/;"	f
tlib#cmd#Capture	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#Capture(cmd) "{{{3$/;"	f
tlib#cmd#DefaultBrowseOutput	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#DefaultBrowseOutput(cmd) "{{{3$/;"	f
tlib#cmd#OutputAsList	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#OutputAsList(command) "{{{3$/;"	f
tlib#cmd#ParseScriptname	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#ParseScriptname(line) "{{{3$/;"	f
tlib#cmd#Time	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#Time(cmd) "{{{3$/;"	f
tlib#cmd#UseVertical	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#UseVertical(...) "{{{3$/;"	f
tlib#comments#Comments	bundle/tlib_vim/autoload/tlib/comments.vim	/^function! tlib#comments#Comments(...)$/;"	f
tlib#date#DiffInDays	bundle/tlib_vim/autoload/tlib/date.vim	/^function! tlib#date#DiffInDays(date, ...)$/;"	f
tlib#date#Parse	bundle/tlib_vim/autoload/tlib/date.vim	/^function! tlib#date#Parse(date, ...) "{{{3$/;"	f
tlib#date#SecondsSince1970	bundle/tlib_vim/autoload/tlib/date.vim	/^function! tlib#date#SecondsSince1970(date, ...) "{{{3$/;"	f
tlib#dir#CD	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#CD(dir, ...) "{{{3$/;"	f
tlib#dir#CanonicName	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#CanonicName(dirname) "{{{3$/;"	f
tlib#dir#Ensure	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#Ensure(dir) "{{{3$/;"	f
tlib#dir#MyRuntime	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#MyRuntime() "{{{3$/;"	f
tlib#dir#NativeName	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#NativeName(dirname) "{{{3$/;"	f
tlib#dir#PlainName	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#PlainName(dirname) "{{{3$/;"	f
tlib#dir#Pop	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#Pop() "{{{3$/;"	f
tlib#dir#Push	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#Push(dir, ...) "{{{3$/;"	f
tlib#eval#FormatValue	bundle/tlib_vim/autoload/tlib/eval.vim	/^function! tlib#eval#FormatValue(value, ...) "{{{3$/;"	f
tlib#file#Absolute	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#Absolute(filename, ...) "{{{3$/;"	f
tlib#file#Canonic	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#Canonic(filename, ...) "{{{3$/;"	f
tlib#file#Join	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#Join(filename_parts, ...) "{{{3$/;"	f
tlib#file#Relative	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#Relative(filename, basedir) "{{{3$/;"	f
tlib#file#Split	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#Split(filename) "{{{3$/;"	f
tlib#file#With	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#With(fcmd, bcmd, files, ...) "{{{3$/;"	f
tlib#fixes#Winpos	bundle/tlib_vim/autoload/tlib/fixes.vim	/^function! tlib#fixes#Winpos() "{{{3$/;"	f
tlib#grep#Do	bundle/tlib_vim/autoload/tlib/grep.vim	/^function! tlib#grep#Do(cmd, rx, files) "{{{3$/;"	f
tlib#grep#List	bundle/tlib_vim/autoload/tlib/grep.vim	/^function! tlib#grep#List(rx, files) "{{{3$/;"	f
tlib#grep#LocList	bundle/tlib_vim/autoload/tlib/grep.vim	/^function! tlib#grep#LocList(rx, files) "{{{3$/;"	f
tlib#grep#QuickFixList	bundle/tlib_vim/autoload/tlib/grep.vim	/^function! tlib#grep#QuickFixList(rx, files) "{{{3$/;"	f
tlib#hash#Adler32	bundle/tlib_vim/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32(chars) "{{{3$/;"	f
tlib#hash#Adler32_tlib	bundle/tlib_vim/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32_tlib(chars) "{{{3$/;"	f
tlib#hash#Adler32_vim	bundle/tlib_vim/autoload/tlib/hash.vim	/^function! tlib#hash#Adler32_vim(chars) "{{{3$/;"	f
tlib#hash#CRC32B	bundle/tlib_vim/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B(chars) "{{{3$/;"	f
tlib#hash#CRC32B_ruby	bundle/tlib_vim/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B_ruby(chars) "{{{3$/;"	f
tlib#hash#CRC32B_vim	bundle/tlib_vim/autoload/tlib/hash.vim	/^function! tlib#hash#CRC32B_vim(chars) "{{{3$/;"	f
tlib#hash#CreateCrcTable	bundle/tlib_vim/autoload/tlib/hash.vim	/^function! tlib#hash#CreateCrcTable() "{{{3$/;"	f
tlib#hook#Run	bundle/tlib_vim/autoload/tlib/hook.vim	/^function! tlib#hook#Run(hook, ...) "{{{3$/;"	f
tlib#input#CommandSelect	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#CommandSelect(command, ...) "{{{3$/;"	f
tlib#input#Dialog	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#Dialog(text, options, default) "{{{3$/;"	f
tlib#input#Edit	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#Edit(name, value, callback, ...) "{{{3$/;"	f
tlib#input#EditList	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#EditList(query, list, ...) "{{{3$/;"	f
tlib#input#List	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#List(type, ...) "{{{3$/;"	f
tlib#input#ListD	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#ListD(dict) "{{{3$/;"	f
tlib#input#ListW	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#ListW(world, ...) "{{{3$/;"	f
tlib#input#Resume	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#Resume(name, pick, bufnr) "{{{3$/;"	f
tlib#list#All	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#All(list, expr) "{{{3$/;"	f
tlib#list#Any	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Any(list, expr) "{{{3$/;"	f
tlib#list#Compact	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Compact(list) "{{{3$/;"	f
tlib#list#Find	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Find(list, filter, ...) "{{{3$/;"	f
tlib#list#FindAll	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#FindAll(list, filter, ...) "{{{3$/;"	f
tlib#list#Flatten	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Flatten(list) "{{{3$/;"	f
tlib#list#Inject	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Inject(list, value, Function) "{{{3$/;"	f
tlib#list#Remove	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Remove(list, element) "{{{3$/;"	f
tlib#list#RemoveAll	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#RemoveAll(list, element) "{{{3$/;"	f
tlib#list#ToDictionary	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#ToDictionary(list, default, ...) "{{{3$/;"	f
tlib#list#Uniq	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Uniq(list, ...) "{{{3$/;"	f
tlib#list#Zip	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Zip(lists, ...) "{{{3$/;"	f
tlib#map#PumAccept	bundle/tlib_vim/autoload/tlib/map.vim	/^function! tlib#map#PumAccept(key) "{{{3$/;"	f
tlib#normal#WithRegister	bundle/tlib_vim/autoload/tlib/normal.vim	/^function! tlib#normal#WithRegister(cmd, ...) "{{{3$/;"	f
tlib#notify#Echo	bundle/tlib_vim/autoload/tlib/notify.vim	/^function! tlib#notify#Echo(text, ...)$/;"	f
tlib#notify#TrimMessage	bundle/tlib_vim/autoload/tlib/notify.vim	/^function! tlib#notify#TrimMessage(message) "{{{3$/;"	f
tlib#number#ConvertBase	bundle/tlib_vim/autoload/tlib/number.vim	/^function! tlib#number#ConvertBase(num, base, ...) "{{{3$/;"	f
tlib#paragraph#GetMetric	bundle/tlib_vim/autoload/tlib/paragraph.vim	/^function! tlib#paragraph#GetMetric() "{{{3$/;"	f
tlib#paragraph#Move	bundle/tlib_vim/autoload/tlib/paragraph.vim	/^function! tlib#paragraph#Move(direction, count)$/;"	f
tlib#persistent#Dir	bundle/tlib_vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Dir() "{{{3$/;"	f
tlib#persistent#Filename	bundle/tlib_vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Filename(type, ...) "{{{3$/;"	f
tlib#persistent#Get	bundle/tlib_vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Get(...) "{{{3$/;"	f
tlib#persistent#MTime	bundle/tlib_vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#MTime(cfile) "{{{3$/;"	f
tlib#persistent#Save	bundle/tlib_vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Save(cfile, dictionary) "{{{3$/;"	f
tlib#persistent#Value	bundle/tlib_vim/autoload/tlib/persistent.vim	/^function! tlib#persistent#Value(...) "{{{3$/;"	f
tlib#progressbar#Display	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Display(value, ...) "{{{3$/;"	f
tlib#progressbar#Init	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Init(max, ...) "{{{3$/;"	f
tlib#progressbar#Restore	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Restore() "{{{3$/;"	f
tlib#rx#Escape	bundle/tlib_vim/autoload/tlib/rx.vim	/^function! tlib#rx#Escape(text, ...) "{{{3$/;"	f
tlib#rx#EscapeReplace	bundle/tlib_vim/autoload/tlib/rx.vim	/^function! tlib#rx#EscapeReplace(text, ...) "{{{3$/;"	f
tlib#rx#Suffixes	bundle/tlib_vim/autoload/tlib/rx.vim	/^function! tlib#rx#Suffixes(...) "{{{3$/;"	f
tlib#scratch#CloseScratch	bundle/tlib_vim/autoload/tlib/scratch.vim	/^function! tlib#scratch#CloseScratch(keyargs, ...) "{{{3$/;"	f
tlib#scratch#UseScratch	bundle/tlib_vim/autoload/tlib/scratch.vim	/^function! tlib#scratch#UseScratch(...) "{{{3$/;"	f
tlib#signs#ClearAll	bundle/tlib_vim/autoload/tlib/signs.vim	/^function! tlib#signs#ClearAll(sign) "{{{3$/;"	f
tlib#signs#ClearBuffer	bundle/tlib_vim/autoload/tlib/signs.vim	/^function! tlib#signs#ClearBuffer(sign, bufnr) "{{{3$/;"	f
tlib#signs#Mark	bundle/tlib_vim/autoload/tlib/signs.vim	/^function! tlib#signs#Mark(sign, list) "{{{3$/;"	f
tlib#string#Chomp	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Chomp(string, ...) "{{{3$/;"	f
tlib#string#Count	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Count(string, rx) "{{{3$/;"	f
tlib#string#Format	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Format(template, dict) "{{{3$/;"	f
tlib#string#Printf1	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Printf1(format, string) "{{{3$/;"	f
tlib#string#RemoveBackslashes	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#RemoveBackslashes(text, ...) "{{{3$/;"	f
tlib#string#Strip	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Strip(string) "{{{3$/;"	f
tlib#string#TrimLeft	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#TrimLeft(string) "{{{3$/;"	f
tlib#string#TrimRight	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#TrimRight(string) "{{{3$/;"	f
tlib#syntax#Collect	bundle/tlib_vim/autoload/tlib/syntax.vim	/^function! tlib#syntax#Collect() "{{{3$/;"	f
tlib#syntax#Names	bundle/tlib_vim/autoload/tlib/syntax.vim	/^function! tlib#syntax#Names(...) "{{{3$/;"	f
tlib#sys#ConvertPath	bundle/tlib_vim/autoload/tlib/sys.vim	/^function! tlib#sys#ConvertPath(converter, filename) "{{{3$/;"	f
tlib#sys#FileArgs	bundle/tlib_vim/autoload/tlib/sys.vim	/^function! tlib#sys#FileArgs(cmd, files) "{{{3$/;"	f
tlib#sys#GetCmd	bundle/tlib_vim/autoload/tlib/sys.vim	/^function! tlib#sys#GetCmd(cmd) "{{{3$/;"	f
tlib#sys#IsCygwinBin	bundle/tlib_vim/autoload/tlib/sys.vim	/^function! tlib#sys#IsCygwinBin(cmd) "{{{3$/;"	f
tlib#sys#IsExecutable	bundle/tlib_vim/autoload/tlib/sys.vim	/^function! tlib#sys#IsExecutable(cmd, ...) "{{{3$/;"	f
tlib#sys#MaybeUseCygpath	bundle/tlib_vim/autoload/tlib/sys.vim	/^function! tlib#sys#MaybeUseCygpath(cmd) "{{{3$/;"	f
tlib#tab#BufMap	bundle/tlib_vim/autoload/tlib/tab.vim	/^function! tlib#tab#BufMap() "{{{3$/;"	f
tlib#tab#Set	bundle/tlib_vim/autoload/tlib/tab.vim	/^function! tlib#tab#Set(tabnr) "{{{3$/;"	f
tlib#tab#TabWinNr	bundle/tlib_vim/autoload/tlib/tab.vim	/^function! tlib#tab#TabWinNr(buffer) "{{{3$/;"	f
tlib#tag#Collect	bundle/tlib_vim/autoload/tlib/tag.vim	/^function! tlib#tag#Collect(constraints, ...) "{{{3$/;"	f
tlib#tag#Format	bundle/tlib_vim/autoload/tlib/tag.vim	/^function! tlib#tag#Format(tag) "{{{3$/;"	f
tlib#tag#Retrieve	bundle/tlib_vim/autoload/tlib/tag.vim	/^function! tlib#tag#Retrieve(rx, ...) "{{{3$/;"	f
tlib#textobjects#Init	bundle/tlib_vim/autoload/tlib/textobjects.vim	/^function! tlib#textobjects#Init() "{{{3$/;"	f
tlib#textobjects#StandardParagraph	bundle/tlib_vim/autoload/tlib/textobjects.vim	/^function! tlib#textobjects#StandardParagraph() "{{{3$/;"	f
tlib#time#Diff	bundle/tlib_vim/autoload/tlib/time.vim	/^function! tlib#time#Diff(a, b, ...) "{{{3$/;"	f
tlib#time#DiffMSecs	bundle/tlib_vim/autoload/tlib/time.vim	/^function! tlib#time#DiffMSecs(a, b, ...) "{{{3$/;"	f
tlib#time#MSecs	bundle/tlib_vim/autoload/tlib/time.vim	/^function! tlib#time#MSecs() "{{{3$/;"	f
tlib#time#Now	bundle/tlib_vim/autoload/tlib/time.vim	/^function! tlib#time#Now() "{{{3$/;"	f
tlib#type#IsDictionary	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsDictionary(expr)$/;"	f
tlib#type#IsFuncref	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsFuncref(expr)$/;"	f
tlib#type#IsList	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsList(expr)$/;"	f
tlib#type#IsNumber	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsNumber(expr)$/;"	f
tlib#type#IsString	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsString(expr)$/;"	f
tlib#url#Decode	bundle/tlib_vim/autoload/tlib/url.vim	/^function! tlib#url#Decode(url) "{{{3$/;"	f
tlib#url#DecodeChar	bundle/tlib_vim/autoload/tlib/url.vim	/^function! tlib#url#DecodeChar(char) "{{{3$/;"	f
tlib#url#Encode	bundle/tlib_vim/autoload/tlib/url.vim	/^function! tlib#url#Encode(url, ...) "{{{3$/;"	f
tlib#url#EncodeChar	bundle/tlib_vim/autoload/tlib/url.vim	/^function! tlib#url#EncodeChar(char) "{{{3$/;"	f
tlib#var#EGet	bundle/tlib_vim/autoload/tlib/var.vim	/^function! tlib#var#EGet(var, namespace, ...) "{{{3$/;"	f
tlib#var#Get	bundle/tlib_vim/autoload/tlib/var.vim	/^function! tlib#var#Get(var, namespace, ...) "{{{3$/;"	f
tlib#var#Let	bundle/tlib_vim/autoload/tlib/var.vim	/^function! tlib#var#Let(name, val) "{{{3$/;"	f
tlib#var#List	bundle/tlib_vim/autoload/tlib/var.vim	/^function! tlib#var#List(rx, ...) "{{{3$/;"	f
tlib#vcs#Diff	bundle/tlib_vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#Diff(filename, ...) "{{{3$/;"	f
tlib#vcs#Executable	bundle/tlib_vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#Executable(type) "{{{3$/;"	f
tlib#vcs#FindVCS	bundle/tlib_vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#FindVCS(filename) "{{{3$/;"	f
tlib#vcs#Ls	bundle/tlib_vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#Ls(...) "{{{3$/;"	f
tlib#vim#CopyFunction	bundle/tlib_vim/autoload/tlib/vim.vim	/^function! tlib#vim#CopyFunction(old, new, ...) "{{{3$/;"	f
tlib#vim#Maximize	bundle/tlib_vim/autoload/tlib/vim.vim	/^    fun! tlib#vim#Maximize(fullscreen) "{{{3$/;"	f
tlib#vim#RestoreWindow	bundle/tlib_vim/autoload/tlib/vim.vim	/^    function! tlib#vim#RestoreWindow() "{{{3$/;"	f
tlib#win#GetLayout	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#GetLayout(...) "{{{3$/;"	f
tlib#win#List	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#List() "{{{3$/;"	f
tlib#win#Set	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#Set(winnr) "{{{3$/;"	f
tlib#win#SetLayout	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#SetLayout(layout) "{{{3$/;"	f
tlib#win#Width	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#Width(wnr) "{{{3$/;"	f
tlib#win#WinDo	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#WinDo(ex) "{{{3$/;"	f
tlist_pyrex_settings	bundle/taglist/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
toLowerForIgnoringCase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:toLowerForIgnoringCase(str)$/;"	f
toggleIgnoreFilter	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:toggleZoom()$/;"	f
toggle_off	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
togglebg#map	bundle/colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
tovl#scratch_buffer#GetContents	bundle/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#GetContents()$/;"	f
tovl#scratch_buffer#Help	bundle/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#Help()$/;"	f
tovl#scratch_buffer#KeepIntactLineNr	bundle/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#KeepIntactLineNr()$/;"	f
tovl#scratch_buffer#ScratchBuffer	bundle/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#ScratchBuffer(opts)$/;"	f
tovl#scratch_buffer#Write	bundle/vim-addon-mw-utils/autoload/tovl/scratch_buffer.vim	/^function! tovl#scratch_buffer#Write()$/;"	f
tovl#ui#filter_list#ListTest	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^fun! tovl#ui#filter_list#ListTest()$/;"	f
tovl#ui#filter_list#ListTestGotoLineCurrentBuf	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^fun! tovl#ui#filter_list#ListTestGotoLineCurrentBuf()$/;"	f
tovl#ui#filter_list#ListView	bundle/vim-addon-mw-utils/autoload/tovl/ui/filter_list.vim	/^fun! tovl#ui#filter_list#ListView(opts)$/;"	f
trigger	bundle/neosnippet/autoload/neosnippet/mappings.vim	/^function! s:trigger(function) "{{{$/;"	f
trim	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:trim(str)$/;"	f
truncate	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:truncate(str, width) "{{{$/;"	f
truncate	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate_skipping	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator)$/;"	f
truncate_skipping	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator)$/;"	f
truncate_smart	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
truncate_smart	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
u	bundle/jslint/ftplugin/javascript/jslint.vim	/^noremap <buffer><silent> u u:JSLintUpdate<CR>$/;"	m
uname	bundle/syntastic/plugin/syntastic.vim	/^function! s:uname() " {{{2$/;"	f
uniq	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:uniq(list)$/;"	f
uniq	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:uniq(list)$/;"	f
uniq_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:uniq_by(list, f)$/;"	f
uniq_by	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:uniq_by(list, f)$/;"	f
unite#sources#file_include#define	bundle/neocomplete/autoload/unite/sources/file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#neocomplete#define	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#define() "{{{$/;"	f
unite#sources#neocomplete#start_complete	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#start_complete() "{{{$/;"	f
unite#sources#neocomplete#start_quick_match	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#start_quick_match() "{{{$/;"	f
unite#sources#neosnippet#define	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^function! unite#sources#neosnippet#define() "{{{$/;"	f
unite#sources#neosnippet#start_complete	bundle/neosnippet/autoload/unite/sources/neosnippet.vim	/^function! unite#sources#neosnippet#start_complete() "{{{$/;"	f
unite#sources#neosnippet_file#define	bundle/neosnippet/autoload/unite/sources/neosnippet_file.vim	/^function! unite#sources#neosnippet_file#define() "{{{$/;"	f
unload	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! s:unload()$/;"	f
unload	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! s:unload()$/;"	f
unshift	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:unshift(list, val)$/;"	f
unshift	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:unshift(list, val)$/;"	f
upDirCurrentRootClosed	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	bundle/git-nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
updateBufTimes	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:updateBufTimes()$/;"	f
updateData	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:updateData()$/;"	f
updateInfo	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:updateInfo(cmd)$/;"	f
validate_file	bundle/promptline/autoload/promptline.vim	/^fun! s:validate_file(overwrite, file)$/;"	f
vim	bundle/Vim-L9/autoload/l9/async.py	/^import vim$/;"	i
vim_snippets#Filename	bundle/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vimlintOutput	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj)$/;"	f
vimtodo#Set	bundle/vimtodo/autoload/vimtodo.vim	/^function! vimtodo#Set(varname, value)$/;"	f
vimtodo#SetDefaultVars	bundle/vimtodo/autoload/vimtodo.vim	/^function! vimtodo#SetDefaultVars()$/;"	f
vimtodo#TodoParseTaskState	bundle/vimtodo/autoload/vimtodo.vim	/^function! vimtodo#TodoParseTaskState(state)$/;"	f
vinegar	bundle/vim-vinegar/plugin/vinegar.vim	/^augroup vinegar$/;"	a
vital#	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#	bundle/neosnippet/autoload/vital/_neosnippet.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#of	bundle/neocomplete/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vital#of	bundle/neosnippet/autoload/vital.vim	/^function! vital#of(name)$/;"	f
warn	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
warning	bundle/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
wcswidth	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:wcswidth(str) "{{{$/;"	f
wcswidth	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:wcswidth(str)$/;"	f
wcswidth	bundle/neosnippet/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:wcswidth(str)$/;"	f
wcwidth	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:wcwidth(str) "{{{$/;"	f
webapi#json#decode	bundle/vim-go/autoload/webapi/json.vim	/^function! webapi#json#decode(json)$/;"	f
webapi#json#encode	bundle/vim-go/autoload/webapi/json.vim	/^function! webapi#json#encode(val)$/;"	f
webapi#json#false	bundle/vim-go/autoload/webapi/json.vim	/^function! webapi#json#false()$/;"	f
webapi#json#null	bundle/vim-go/autoload/webapi/json.vim	/^function! webapi#json#null()$/;"	f
webapi#json#true	bundle/vim-go/autoload/webapi/json.vim	/^function! webapi#json#true()$/;"	f
winshell	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
with_index	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:with_index(list, ...)$/;"	f
with_index	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:with_index(list, ...)$/;"	f
with_statement	bundle/Vim-L9/autoload/l9/async.py	/^from __future__ import with_statement$/;"	i
wrap	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:wrap(str,...)$/;"	f
wrap	bundle/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap_accent	bundle/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
wrapreg	bundle/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
writefile	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
writefile	bundle/neosnippet/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
yS	bundle/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	bundle/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	bundle/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	bundle/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	bundle/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zip	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:zip(...)$/;"	f
zip	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:zip(...)$/;"	f
zip_fill	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:zip_fill(xs, ys, filler)$/;"	f
zip_fill	bundle/neosnippet/autoload/vital/_neosnippet/Data/List.vim	/^function! s:zip_fill(xs, ys, filler)$/;"	f
